[{"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/index.js":"1","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/App.js":"2","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/reportWebVitals.js":"3","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/fire.js":"4","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/attraction.js":"5","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/newAttraction.js":"6","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/andon.js":"7","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/deletepage.js":"8","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/graph.js":"9","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/editpage.js":"10","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/createpage.js":"11","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/historical.js":"12","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/interval.js":"13","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/main.js":"14","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/weather.js":"15","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/rideInfo.js":"16","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/login.js":"17","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/home.js":"18","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/General/Navbar.js":"19","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js":"20","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/General/Bannerbar.js":"21","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js":"22","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/FavoriteBar.js":"23","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/MapEnable.js":"24","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainCodeMenu.js":"25","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/GraphUnits.js":"26","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/FileUpload/FileUpload.js":"27","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js":"28","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainMiniAndon.js":"29","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainInfoDisplay.js":"30","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/QuickToolsMain.js":"31","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainParkSection.js":"32","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/ChartLine.js":"33","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainWeatherRadar.js":"34","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainGraphDisplay.js":"35","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainDownTime.js":"36","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js":"37","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js":"38","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionIntervals.js":"39","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js":"40","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/BasicInfo.js":"41","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/CollectedData.js":"42","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/SubIntervals.js":"43","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js":"44","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/DayCheck.js":"45","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/Options.js":"46","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js":"47","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/MiniGraph.js":"48","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/FileUpload/Progress.js":"49","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/globalStyles.js":"50","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/ParkwideModal.js":"51","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionModal.js":"52","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/index.js":"53","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/reportWebVitals.js":"54","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/App.js":"55","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/fire.js":"56","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/weather.js":"57","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/historical.js":"58","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/main.js":"59","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/andon.js":"60","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/newAttraction.js":"61","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/graph.js":"62","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/rideInfo.js":"63","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/attraction.js":"64","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/editpage.js":"65","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/interval.js":"66","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/createpage.js":"67","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/deletepage.js":"68","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/login.js":"69","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/home.js":"70","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/General/Navbar.js":"71","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainInfoDisplay.js":"72","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/General/Bannerbar.js":"73","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainMiniAndon.js":"74","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainParkSection.js":"75","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainWeatherRadar.js":"76","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainCodeMenu.js":"77","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainDownTime.js":"78","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/QuickToolsMain.js":"79","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js":"80","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js":"81","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/StatCheck.js":"82","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/RideCheck.js":"83","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js":"84","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/DayCheck.js":"85","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js":"86","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/FavoriteBar.js":"87","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/MapEnable.js":"88","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/ChartLine.js":"89","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/SubIntervals.js":"90","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js":"91","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/CollectedData.js":"92","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/BasicInfo.js":"93","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/Options.js":"94","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/MiniGraph.js":"95","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js":"96","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/FileUpload/FileUpload.js":"97","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js":"98","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js":"99","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainGraphDisplay.js":"100","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphUnits.js":"101","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js":"102","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/globalStyles.js":"103","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/ParkwideModal.js":"104","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/FileUpload/Progress.js":"105","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/AttractionModal.js":"106","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js":"107"},{"size":479,"mtime":1622575694255,"results":"108","hashOfConfig":"109"},{"size":2066,"mtime":1622575694243,"results":"110","hashOfConfig":"109"},{"size":362,"mtime":1622575694257,"results":"111","hashOfConfig":"109"},{"size":521,"mtime":1622575694254,"results":"112","hashOfConfig":"109"},{"size":351,"mtime":1622575694255,"results":"113","hashOfConfig":"109"},{"size":723,"mtime":1622575694257,"results":"114","hashOfConfig":"109"},{"size":327,"mtime":1622575694255,"results":"115","hashOfConfig":"109"},{"size":12394,"mtime":1626221711896,"results":"116","hashOfConfig":"109"},{"size":2221,"mtime":1625188313482,"results":"117","hashOfConfig":"109"},{"size":21658,"mtime":1626221711896,"results":"118","hashOfConfig":"109"},{"size":18261,"mtime":1626221711896,"results":"119","hashOfConfig":"109"},{"size":341,"mtime":1622575694256,"results":"120","hashOfConfig":"109"},{"size":803,"mtime":1622750798931,"results":"121","hashOfConfig":"109"},{"size":1266,"mtime":1622575694257,"results":"122","hashOfConfig":"109"},{"size":307,"mtime":1622575694257,"results":"123","hashOfConfig":"109"},{"size":1100,"mtime":1622581451516,"results":"124","hashOfConfig":"109"},{"size":2055,"mtime":1622575694256,"results":"125","hashOfConfig":"109"},{"size":612,"mtime":1622575694256,"results":"126","hashOfConfig":"109"},{"size":1815,"mtime":1622575694245,"results":"127","hashOfConfig":"109"},{"size":507,"mtime":1622575694253,"results":"128","hashOfConfig":"109"},{"size":2096,"mtime":1622575694245,"results":"129","hashOfConfig":"109"},{"size":4194,"mtime":1626221712050,"results":"130","hashOfConfig":"109"},{"size":3936,"mtime":1626221712049,"results":"131","hashOfConfig":"109"},{"size":1590,"mtime":1622575694249,"results":"132","hashOfConfig":"109"},{"size":952,"mtime":1622575694252,"results":"133","hashOfConfig":"109"},{"size":3175,"mtime":1622575694249,"results":"134","hashOfConfig":"109"},{"size":2265,"mtime":1622575694244,"results":"135","hashOfConfig":"109"},{"size":2050,"mtime":1626220729427,"results":"136","hashOfConfig":"109"},{"size":516,"mtime":1622575694252,"results":"137","hashOfConfig":"109"},{"size":3520,"mtime":1622575694252,"results":"138","hashOfConfig":"109"},{"size":1612,"mtime":1622575694253,"results":"139","hashOfConfig":"109"},{"size":558,"mtime":1622575694252,"results":"140","hashOfConfig":"109"},{"size":8843,"mtime":1626221711924,"results":"141","hashOfConfig":"109"},{"size":580,"mtime":1622575694253,"results":"142","hashOfConfig":"109"},{"size":570,"mtime":1622575694252,"results":"143","hashOfConfig":"109"},{"size":571,"mtime":1622575694252,"results":"144","hashOfConfig":"109"},{"size":11491,"mtime":1626221711942,"results":"145","hashOfConfig":"109"},{"size":2405,"mtime":1622575694252,"results":"146","hashOfConfig":"109"},{"size":15458,"mtime":1626221711896,"results":"147","hashOfConfig":"109"},{"size":2286,"mtime":1626221711924,"results":"148","hashOfConfig":"109"},{"size":3854,"mtime":1622581077096,"results":"149","hashOfConfig":"109"},{"size":6853,"mtime":1622581092121,"results":"150","hashOfConfig":"109"},{"size":1681,"mtime":1622581162849,"results":"151","hashOfConfig":"109"},{"size":1224,"mtime":1622750306048,"results":"152","hashOfConfig":"109"},{"size":2430,"mtime":1622575694249,"results":"153","hashOfConfig":"109"},{"size":4001,"mtime":1622581119105,"results":"154","hashOfConfig":"109"},{"size":2335,"mtime":1622661292594,"results":"155","hashOfConfig":"109"},{"size":345,"mtime":1622581106286,"results":"156","hashOfConfig":"109"},{"size":448,"mtime":1622575694244,"results":"157","hashOfConfig":"109"},{"size":211,"mtime":1622575694254,"results":"158","hashOfConfig":"109"},{"size":8780,"mtime":1626221712049,"results":"159","hashOfConfig":"109"},{"size":8784,"mtime":1626221711981,"results":"160","hashOfConfig":"109"},{"size":479,"mtime":1626827587613,"results":"161","hashOfConfig":"162"},{"size":362,"mtime":1626827587616,"results":"163","hashOfConfig":"162"},{"size":2066,"mtime":1626827587601,"results":"164","hashOfConfig":"162"},{"size":521,"mtime":1626827587613,"results":"165","hashOfConfig":"162"},{"size":307,"mtime":1626827587616,"results":"166","hashOfConfig":"162"},{"size":341,"mtime":1626827587615,"results":"167","hashOfConfig":"162"},{"size":1266,"mtime":1626827587616,"results":"168","hashOfConfig":"162"},{"size":327,"mtime":1626827587613,"results":"169","hashOfConfig":"162"},{"size":723,"mtime":1626827587616,"results":"170","hashOfConfig":"162"},{"size":2121,"mtime":1626828683228,"results":"171","hashOfConfig":"162"},{"size":1100,"mtime":1626827587616,"results":"172","hashOfConfig":"162"},{"size":351,"mtime":1626827587614,"results":"173","hashOfConfig":"162"},{"size":21652,"mtime":1626828610362,"results":"174","hashOfConfig":"162"},{"size":803,"mtime":1626827587615,"results":"175","hashOfConfig":"162"},{"size":18255,"mtime":1626828610362,"results":"176","hashOfConfig":"162"},{"size":12388,"mtime":1626828610362,"results":"177","hashOfConfig":"162"},{"size":2055,"mtime":1626827587615,"results":"178","hashOfConfig":"162"},{"size":612,"mtime":1626827587615,"results":"179","hashOfConfig":"162"},{"size":1815,"mtime":1626827587603,"results":"180","hashOfConfig":"162"},{"size":3520,"mtime":1626827587609,"results":"181","hashOfConfig":"162"},{"size":2096,"mtime":1626827587603,"results":"182","hashOfConfig":"162"},{"size":516,"mtime":1626827587609,"results":"183","hashOfConfig":"162"},{"size":558,"mtime":1626827587609,"results":"184","hashOfConfig":"162"},{"size":580,"mtime":1626827587610,"results":"185","hashOfConfig":"162"},{"size":952,"mtime":1626827587608,"results":"186","hashOfConfig":"162"},{"size":571,"mtime":1626827587609,"results":"187","hashOfConfig":"162"},{"size":1612,"mtime":1626827587610,"results":"188","hashOfConfig":"162"},{"size":4191,"mtime":1626828610362,"results":"189","hashOfConfig":"162"},{"size":1224,"mtime":1626827587611,"results":"190","hashOfConfig":"162"},{"size":2750,"mtime":1626828610362,"results":"191","hashOfConfig":"162"},{"size":2629,"mtime":1626828610362,"results":"192","hashOfConfig":"162"},{"size":2405,"mtime":1626827587610,"results":"193","hashOfConfig":"162"},{"size":2430,"mtime":1626827587605,"results":"194","hashOfConfig":"162"},{"size":2050,"mtime":1626827587606,"results":"195","hashOfConfig":"162"},{"size":3930,"mtime":1626828610362,"results":"196","hashOfConfig":"162"},{"size":1590,"mtime":1626827587606,"results":"197","hashOfConfig":"162"},{"size":8834,"mtime":1627003315068,"results":"198","hashOfConfig":"162"},{"size":1681,"mtime":1626827587613,"results":"199","hashOfConfig":"162"},{"size":2335,"mtime":1626827587612,"results":"200","hashOfConfig":"162"},{"size":6853,"mtime":1626827587612,"results":"201","hashOfConfig":"162"},{"size":3854,"mtime":1626827587611,"results":"202","hashOfConfig":"162"},{"size":4001,"mtime":1626827587612,"results":"203","hashOfConfig":"162"},{"size":345,"mtime":1626827587612,"results":"204","hashOfConfig":"162"},{"size":15443,"mtime":1626828610362,"results":"205","hashOfConfig":"162"},{"size":2265,"mtime":1626827587602,"results":"206","hashOfConfig":"162"},{"size":11482,"mtime":1626828610362,"results":"207","hashOfConfig":"162"},{"size":2283,"mtime":1626828610362,"results":"208","hashOfConfig":"162"},{"size":570,"mtime":1626827587609,"results":"209","hashOfConfig":"162"},{"size":3175,"mtime":1626827587605,"results":"210","hashOfConfig":"162"},{"size":507,"mtime":1626827587611,"results":"211","hashOfConfig":"162"},{"size":211,"mtime":1626827587613,"results":"212","hashOfConfig":"162"},{"size":8777,"mtime":1626828610362,"results":"213","hashOfConfig":"162"},{"size":448,"mtime":1626827587602,"results":"214","hashOfConfig":"162"},{"size":8781,"mtime":1626828610362,"results":"215","hashOfConfig":"162"},{"size":5464,"mtime":1627003831963,"results":"216","hashOfConfig":"162"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ap77w",{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},"s9vnha",{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"335"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"335"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"335"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"335"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"335"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"335"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"335"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"335"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"335"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"335"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"335"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"335"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"335"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"335"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"335"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"335"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"335"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"335"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"335"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"335"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"335"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"335"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/index.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/App.js",["454","455"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Home from './pages/home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n    { this.state.user ? (       <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/home' component={Home}/>\n      </Switch> ) : ( <Login/> ) }\n\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;\n","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/reportWebVitals.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/fire.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/attraction.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/newAttraction.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/andon.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/deletepage.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/graph.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/editpage.js",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/createpage.js",["515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/historical.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/interval.js",["536"],"import React from 'react'\nimport QuickToolsMain from '../components/Main/QuickToolsMain'\nimport IntervalsCountDisplay from '../components/Interval/IntervalsCountDisplay'\nimport Attraction from '../components/Interval/AttractionIntervals'\nimport ParkwideIntervals from '../components/Interval/ParkwideIntervals'\nimport MainCodeMenu from '../components/Main/MainCodeMenu'\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nconst Interval = () => {\n    return (\n        <>  \n            <Navbar/>\n            <Banner/>\n            <QuickToolsMain></QuickToolsMain>\n            <MainCodeMenu></MainCodeMenu>\n            <Attraction></Attraction>\n            <ParkwideIntervals></ParkwideIntervals>\n        </>\n      \n      );\n}\n\nexport default  Interval","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/main.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/weather.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/rideInfo.js",["537","538","539","540"],"import React, { useState, useRef, useEffect, useCallback, Component } from 'react';\nimport BasicInfo from '../components/RideInfo/BasicInfo';\nimport CollectedData from '../components/RideInfo/CollectedData';\nimport QuickToolsBasicInfo from '../components/RideInfo/QuickToolsBasicInfo';\nimport Interval from '../components/RideInfo/SubIntervals';\nimport Options from '../components/RideInfo/Options';\nimport Graph from '../components/RideInfo/MiniGraph';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nclass RideInfo extends Component {\n    \n\n    render () {\n\n    return (\n        <>\n        <Navbar/>\n        <Banner/>\n        {console.log(this.props.location.ride_name.ride)}\n        <BasicInfo ride_name={this.props.location.ride_name.ride}></BasicInfo>\n        <CollectedData></CollectedData>\n        <QuickToolsBasicInfo ride_name={this.props.location.ride_name.ride}></QuickToolsBasicInfo>\n        <Interval> </Interval>\n        <Options></Options> \n        <Graph></Graph>\n        \n        </>\n      );\n    }\n}\n\nexport default RideInfo","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/login.js",["541","542"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"password\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/home.js",["543"],"import React from 'react';\nimport fire from '../fire';\nimport { Redirect } from \"react-router\";\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 100px;\n`;\n\nclass Home extends React.Component {\n\n  logout() {\n    fire.auth().signOut().then(function() {\n        console.log('Signed Out');\n      }, function(error) {\n        console.error('Sign Out Error', error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div style={{textAlign: 'center'}}>\n        <Button onClick = {this.logout}>Logout</Button>\n      </div>\n    )\n  }\n}\n\nexport default Home;","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/General/Navbar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/General/Bannerbar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js",["544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/FavoriteBar.js",["571","572","573","574","575","576","577","578","579","580","581","582"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/MapEnable.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainCodeMenu.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/GraphUnits.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/FileUpload/FileUpload.js",["583","584","585","586"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js",["587","588","589"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// const saveSvgAsPng = require('save-svg-as-png')\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons onClick={() => {\n\n                            // var element = document.getElementsByClassName('rv-xy-plot__inner');\n                            // saveSvgAsPng.saveSvgAsPng(element[0], 'ride-graph.png');\n\n                    }}>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainMiniAndon.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainInfoDisplay.js",["590","591"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/QuickToolsMain.js",["592","593"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainParkSection.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/ChartLine.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainWeatherRadar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainGraphDisplay.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainDownTime.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js",["594","595","596","597","598","599","600","601","602","603","604","605","606"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionIntervals.js",["607","608","609","610","611","612","613","614","615","616","617"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js",["618"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/BasicInfo.js",["619"],"import styled from 'styled-components';\nimport React, { Component } from 'react';\nimport Axios from 'axios'\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 22%;\nheight: 600px;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nmargin: 0px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 600px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 40px;\nborder-bottom: 1px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Label1 = styled.div`\ntext-align: center;\nfont-size: 150%;\nalign-content: center;\nborder-bottom: 2px solid black;\nfont-weight: bold;\n`\n\nexport const Label2 = styled.div`\ntext-align: center;\nfont-size: 125%;\nalign-content: center;\nborder-bottom: 2px solid black;\n`\nconst styleGray = {backgroundColor : '#AFAFAF'};\n\n\n\nclass BasicInfo extends Component {\n\n    render () {\n    return (\n        <Border>\n            \n            <Label2>Basic Information</Label2>\n            <InfoContainer>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Property</th>\n                            <th scope=\"col\">Value</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                    \n                        <td>Name</td>   <td>   {this.props.ride_name}   </td>\n                    </tr>\n                    <tr>\n                        <td>Location</td>   <td>     {this.props.ride_name}   </td>\n                    </tr>\n                    <tr>\n                        <td>Model</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Theoretical Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Target Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Vehicles</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Min Vehicles</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Seats</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Primary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Secondary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Tertiary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Staff</td>   <td>        </td>\n                    </tr>\n                    <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     \n                    </tbody>\n\n                </table>\n            </InfoContainer>    \n \n        </Border>\n    )\n    }\n}\n\nexport default BasicInfo","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/CollectedData.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/SubIntervals.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js",["620","621"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nposition: absolute;\n  top: 68px;\n  right: 5px;\n  width: 11.5%;\n  height: 80px;\n  margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 30%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\npadding: 12%;\nfont-size: 20px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 88%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsPanel = () => {\nconst [showModal, setShowModal] = useState(false);\n\nconst openModal = () => {\nsetShowModal(prev => !prev);\n};\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <NavLink to = '/CreatePage'>\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\n                    </NavLink>\n\n\n\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsPanel","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/DayCheck.js",["622","623"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport styled from 'styled-components';\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default DayCheck;","/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/Options.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/RideInfo/MiniGraph.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/FileUpload/Progress.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/globalStyles.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/ParkwideModal.js",["624","625","626","627","628","629","630","631","632","633","634"],"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionModal.js",["635","636","637","638","639","640","641","642","643","644","645"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/index.js",[],["646","647"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/reportWebVitals.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/App.js",["648","649"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/fire.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/weather.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/historical.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/main.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/andon.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/newAttraction.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/graph.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/rideInfo.js",["650","651","652","653"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/attraction.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/editpage.js",["654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst RideSelect = styled.select`\n    text-align: right;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function EditPage(props) {\n  \n\n    //states\nconst [ride_name, setRideName] = useState('');\nvar [dailyOpening, setDailyOpening] = useState('');\nvar [dailyClosing, setDailyClosing] = useState('');\nvar [theoryCapacity, setTheoryCapacity] = useState('');\nvar [targetCapacity, setTargetCapacity] = useState('');\nvar [minVehicles, setMinVehicles] = useState('');\nvar [maxVehicles, setMaxVehicles] = useState('');\nvar [maxSeats, setMaxSeats] = useState('');\nvar [minStaff, setMinStaff] = useState('');\nvar [maxStaff, setMaxStaff] = useState('');\nvar [parkSection, setParkSection] = useState('');\nvar [weatherCode, setWeatherCode] = useState('');\nvar [rideType, setRideType] = useState('');\n\n//for the drop down menu\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n      }).catch(err => console.log(err));\n}\n\n\nconst editAttraction = () =>{\n  Axios.put('http://localhost:3001/editAttraction', {\n                ride_name: ride_name,\n                dailyOpening: dailyOpening,\n                dailyClosing: dailyClosing,\n                theoryCapacity: theoryCapacity,\n                targetCapacity: targetCapacity,\n                minVehicles: minVehicles,\n                maxVehicles: maxVehicles,\n                maxSeats: maxSeats,\n                minStaff: minStaff,\n                maxStaff: maxStaff,\n                parkSection: parkSection,\n                weatherCode: weatherCode,\n                rideType: rideType,\n\n                rideSelect: setRideSelect\n\n                \n                \n                }).then(() =>{\n                  alert('successful insert');\n\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n\n              window.location.href='/newAttraction';\n};\n\nvar emptyBoxArray = [];\nconst checkNegative = () => {\n  var empty = false;\n\n  if(dailyOpening < 0) {\n    alert(\"Daily Opening is negative\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  if(dailyClosing < 0) {\n    alert(\"Daily Closing is negative\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  if(theoryCapacity < 0) {\n    alert(\"Theoretical Capacity is negative\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  if(targetCapacity < 0) {\n    alert(\"Target Capacity is negative\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  if(maxVehicles < 0) {\n    alert(\"Max Vehicles is negative\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  if(minVehicles < 0) {\n    alert(\"Min Vehicles is negative\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  if(maxSeats < 0) {\n    alert(\"Max seats is negative\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  if(maxStaff < 0) {\n    alert(\"Max Staff is negative\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  if(minStaff < 0) {\n    alert(\"Min Staff is negative\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  if(parkSection < 0) {\n    alert(\"Park Section is negative\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  if(weatherCode < 0) {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  if(rideType < 0) {\n    alert(\"Ride Type is negative\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\nvar storeOld = [];\nconst setOldValues = () => {\n  if(dailyOpening === ''){\n    dailyOpening = storeOld[0];\n  }\n  if(dailyClosing === ''){\n    dailyClosing = storeOld[1];\n  }\n  if(theoryCapacity === ''){\n    theoryCapacity = storeOld[2];\n  }\n  if(targetCapacity === ''){\n    targetCapacity = storeOld[3];\n  }\n  if(maxVehicles === ''){\n    maxVehicles = storeOld[4];\n  }\n  if(minVehicles === ''){\n    minVehicles = storeOld[5];\n  }\n  if(maxSeats === ''){\n    maxSeats = storeOld[6];\n  }\n  if(maxStaff === ''){\n    maxStaff = storeOld[7];\n  }\n  if(minStaff === ''){\n    minStaff = storeOld[8];\n  }\n  if(parkSection === ''){\n    parkSection = storeOld[9];\n  }\n  if(weatherCode === ''){\n    weatherCode = storeOld[10];\n  }      \n  if(rideType === ''){\n    rideType = storeOld[11];\n  } \n}\n\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    \n    {useEffect(() =>{\n      {window.addEventListener('load', getAttractions())}\n      {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n      {window.addEventListener('load', setRideName(props.location.ride_name))}\n\n    })}\n    <OuterBorder>\n    <CreateBar> Edit an Attraction\n          <Nav>\n         <NavMenu>\n             <NavLink to='/EditPage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/EditPage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/EditPage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n  \n    <EditBorder>\n\n    <InfoBar> Basic Information</InfoBar>\n\n\n\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          <tr>\n          <td>Name</td>\n          <td>          \n\n              \n                          <> \n                          <label> {props.location.ride_name} </label>\n                          </>\n                    \n        \n\n\n          </td>\n          </tr>\n\n          <tr>\n          <td>Daily Opening</td>\n          <th> \n            \n              \n              {attractionList.map((val, key) => {\n                if (rideSelect == val.ride_name){\n                    var dailyOpening = val.dailyOpening;\n                    storeOld.push(dailyOpening);\n                    return (\n                      <> \n                        <input type='time' id='dailyOpeningID' name='dailyOpening' placeholder={dailyOpening} onInput={(e) => {\n                          setDailyOpening(e.target.value);\n                        }}></input>  \n                      </>\n                      );\n\n                }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Daily Closing</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n\n                    if (rideSelect == val.ride_name){\n                        var dailyClosing = val.dailyClosing;\n                        storeOld.push(dailyClosing);\n                        return (\n                          <> \n                            <input type='time' id='dailyClosingID' name='dailyClosing' placeHolder={dailyClosing} onInput={(e) => {\n                                setDailyClosing(e.target.value);\n                              }}\n                              \n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Theoretical Capacity</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                        if (rideSelect == val.ride_name){\n                            var theoryCapacity = val.theoryCapacity;\n                            storeOld.push(theoryCapacity);\n                            //storeOld.push(theoryCapacity);\n                            return (\n                              <> \n                                <input type='text' id='theoryCapacityID' name='theoryCapacity' placeHolder={theoryCapacity} onInput={(e) => {\n                                    setTheoryCapacity(e.target.value);\n                                  }}\n                                ></input>  \n                              </>\n                            );\n                        }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Target Capacity</td>\n          <th> \n\n            {attractionList.map((val, key) => {\n                      if (rideSelect == val.ride_name){\n                          var targetCapacity = val.targetCapacity;\n                          storeOld.push(targetCapacity);\n                          return (\n                            <> \n                              <input type='text' id='targetCapacityID' name='targetCapacity' placeHolder={targetCapacity} onInput={(e) => {\n                                setTargetCapacity(e.target.value);\n                                }}\n                              ></input>  \n                            </>\n                          );\n                      }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          if (rideSelect == val.ride_name){\n                              var maxVehicles = val.maxVehicles;\n                              storeOld.push(maxVehicles);\n                              return (\n                                <> \n                                  <input type='text' id='maxVehiclesID' name='maxVehicles' placeHolder={maxVehicles} onInput={(e) => {\n                                    setMaxVehicles(e.target.value);   \n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n\n                          if (rideSelect == val.ride_name){\n                              var minVehicles = val.minVehicles;\n                              storeOld.push(minVehicles);\n                              return (\n                                <> \n                                  <input type='text' id='minVehiclesID' name='minVehicle' placeHolder={minVehicles} onInput={(e) => {\n                                    setMinVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Seats per Vehicle</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                         \n                          if (rideSelect == val.ride_name){\n                              var maxSeats = val.maxSeats;\n                              storeOld.push(maxSeats);\n                              return (\n                                <> \n                                  <input type='text' id='maxSeatsID' name='maxSeats' placeHolder={maxSeats} onInput={(e) => {\n                                       setMaxSeats(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n\n                          if (rideSelect == val.ride_name){\n                              var maxStaff = val.maxStaff;\n                              storeOld.push(maxStaff);\n                              return (\n                                <> \n                                  <input type='text' id='maxStaffID' name='maxStaff' placeHolder={maxStaff} onInput={(e) => {\n                                    setMaxStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                    \n                          if (rideSelect == val.ride_name){\n                              var minStaff = val.minStaff;\n                              storeOld.push(minStaff);\n                              return (\n                                <> \n                                  <input type='text' id='minStaffID' name='minStaff' placeHolder={minStaff} onInput={(e) => {\n                                      setMinStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Park Section</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                      \n                          if (rideSelect == val.ride_name){\n                              var parkSection = val.parkSection;\n                              storeOld.push(parkSection);\n                              return (\n                                <> \n                                  <input type='text' id='parkSectionID' name='parkSection' placeHolder={parkSection} onInput={(e) => {\n                                      setParkSection(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Weather Code</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                  \n                          if (rideSelect == val.ride_name){\n                              var weatherCode = val.weatherCode;\n                              storeOld.push(weatherCode);\n                              return (\n                                <> \n                                  <input type='text' id='weatherCodeID' name='weatherCode' placeHolder={weatherCode} onInput={(e) => {\n                                      setWeatherCode(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Type</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                \n                          if (rideSelect == val.ride_name){\n                              var rideType = val.rideType;\n                              storeOld.push(rideType);\n                              return (\n                                <> \n                                  <input type='text' id='rideTypeID' name='rideType' placeHolder={rideType} onInput={(e) => {\n                                      setRideType(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          </tbody>\n\n        \n\n        </table>\n        <EditButton onClick={() => { \n          if(checkNegative() == true){\n            changeInputColor(emptyBoxArray);\n          }\n          else{\n            setOldValues(); \n            window.alert(`The ride: ${ride_name} has been edited`);\n            editAttraction();\n            console.log(storeOld);\n          }\n\n\n        }}>Edit Attraction</EditButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n      <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/interval.js",["684"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/createpage.js",["685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705"],"import styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link} from 'react-router-dom';\nimport FileUpload from '../components/FileUpload/FileUpload'; \nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const CreateLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 660px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 615px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow-y: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  text-align: center;\n  border-bottom: 2px solid;\n  width: 113%;\n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 40%;\n    width: 30%;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    width: 30%;\n    height: 40%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst ReportInfo = styled.div`\n    overflow-y: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 357px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst CreateButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function CreatePage() {\n\n\n//states\n//for getting attraction \nconst [ride_name, setRide_name] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n\n//for getting safety critcal information\nconst [maxWind, setMaxWind] = useState('');\nconst [minTemp, setMinTemp] = useState('');\nconst [powerRedundancy, setPowerRedundancy] = useState('');\nconst [numGates, setNumGates] = useState('');\n\n//for getting phone information\nconst [ridePrimary, setRidePrimary] = useState('');\nconst [rideSecondary, setRideSecondary] = useState('');\nconst [rideTertiary, setRideTertiary] = useState('');\n\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\nconst submitAttraction = () =>{\n  Axios.post('http://localhost:3001/addAttraction', {\n    ride_name: ride_name,\n    dailyOpening: dailyOpening,\n    dailyClosing: dailyClosing,\n    theoryCapacity: theoryCapacity,\n    targetCapacity: targetCapacity,\n    minVehicles: minVehicles,\n    maxVehicles: maxVehicles,\n    maxSeats: maxSeats,\n    minStaff: minStaff,\n    maxStaff: maxStaff,\n    parkSection: parkSection,\n    weatherCode: weatherCode,\n    rideType: rideType,\n    maxWind: maxWind,\n    minTemp, minTemp,\n    powerRedundancy, powerRedundancy,\n    numGates, numGates,\n    ridePrimary, ridePrimary,\n    rideSecondary, rideSecondary,\n    rideTertiary, rideTertiary\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nvar emptyBoxArray = [];\nconst checkEmpty = () => {\n  var empty = false;\n  if(ride_name == '') {\n    alert(\"Ride name is empty\");\n    emptyBoxArray.push('ride_nameID');\n    empty = true;\n  }\n  else if(ride_name < 0) {\n    alert(\"Ride name is negative\");\n    emptyBoxArray.push('ride_nameID');\n    empty = true;\n  }\n\n  if(dailyOpening == '') {\n    alert(\"Daily Opening is empty\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  else if(dailyOpening < 0) {\n    alert(\"Daily Opening is negative\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n\n  if(dailyClosing == '') {\n    alert(\"Daily Closing is empty\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  else if(dailyClosing < 0) {\n    alert(\"Daily Closing is negative\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n\n  if(theoryCapacity == '') {\n    alert(\"Theoretical Capacity is empty\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  else if(theoryCapacity < 0) {\n    alert(\"Theoretical Capacity is negative\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n\n  if(targetCapacity == '') {\n    alert(\"Target Capacity is empty\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  else if(targetCapacity < 0) {\n    alert(\"Targer Capacity is negative\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n\n  if(maxVehicles == '') {\n    alert(\"Max Vehicles is empty\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  else if(maxVehicles < 0) {\n    alert(\"Max Vehicles is negative\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n\n  if(minVehicles == '') {\n    alert(\"Min Vehicles is empty\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  else if(minVehicles < 0) {\n    alert(\"Min Vehicles is negative\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n\n  if(maxSeats == '') {\n    alert(\"Max seats is empty\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  else if(maxSeats < 0) {\n    alert(\"Max Vehicles is negative\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n\n  if(maxStaff == '') {\n    alert(\"Max Staff is empty\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  else if(maxStaff < 0) {\n    alert(\"Max Staff is negative\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n\n  if(minStaff == '') {\n    alert(\"Min Staff is empty\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  else if(minStaff < 0) {\n    alert(\"Min Staff is negative\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n\n  if(parkSection == '') {\n    alert(\"Park Section is empty\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  else if(parkSection < 0) {\n    alert(\"Park Section is negative\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n\n  \n  if(weatherCode == '') {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  else if(weatherCode < 0) {\n    alert(\"Weather Code is negative\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n\n  if(rideType == '') {\n    alert(\"Ride Type is empty\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  else if(rideType < 0) {\n    alert(\"Park Section is negative\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nlet history = useHistory();\n\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\n\nconst [nameList, setNameList] = useState([]);\nconst GetNames = () => {\n  useEffect(() => {\n      Axios.get('http://localhost:3001/getAttractionNames').then(res => {\n      return setNameList(res.data);\n      }).catch(err => console.log(err));\n      }, [])\n}\n\nreturn (\n  \n    <>\n     {window.addEventListener('load', GetNames())}\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <CreateBar> Create a new Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/CreatePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/CreatePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/CreatePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n    <EditBorder>\n      <InfoBar> Basic Information </InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n        <tr>\n        <td>Name</td>\n        <td>              \n                <input id='ride_nameID' type='text' name='ride_name' onChange={(e) => {\n                  setRide_name(e.target.value);\n                }}></input> </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n              <input id='dailyOpeningID' type='time' name='dailyOpening' onChange={(e) => {\n                        setDailyOpening(e.target.value);\n                      }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n            <input id='dailyClosingID' type='time' name='dailyClosing' onChange={(e) => {\n                      setDailyClosing(e.target.value);\n                    }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n            <input id='theoryCapacityID' type='number' name='theoryCapacity' onChange={(e) => {\n                          setTheoryCapacity(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n            <input id='targetCapacityID' type='number' name='targetCapcity' onChange={(e) => {\n                          setTargetCapacity(e.target.value);\n                        }}></input>  \n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Vehicles</td>\n        <th>\n            <input id='maxVehiclesID' type='number' name='maxVehicles' onChange={(e) => {\n                          setMaxVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Vehicles</td>\n        <th>\n            <input id='minVehiclesID'type='number' name='minVehicles' onChange={(e) => {\n                          setMinVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n            <input id='maxSeatsID' type='number' name='maxSeats' onChange={(e) => {\n                          setMaxSeats(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Employees</td>\n        <th>\n            <input id='maxStaffID' type='number' name='maxStaff' onChange={(e) => {\n                          setMaxStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Employees</td>\n        <th>\n            <input id='minStaffID' type='number' name='minStaff' onChange={(e) => {\n                          setMinStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n              <input id='parkSectionID' type='text' name='parkSection' onChange={(e) => {\n                            setParkSection(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n              <input id='weatherCodeID' type='text' name='weatherCode' onChange={(e) => {\n                            setWeatherCode(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n        <tr>\n        <td>Type</td>\n        <th>\n            <input id='rideTypeID' type='text' name='rideType' onChange={(e) => {\n                          setRideType(e.target.value);\n              }}></input>\n        </th>\n        </tr>\n        \n        </tbody>\n\n        </table>\n        <CreateButton onClick={() => { \n              var names = [];\n              nameList.map((e) => { \n              var ridename = e.ride_name;\n              //console.log(ridename);\n\n              names.push(ridename);\n              console.log(names);\n            });\n            if(checkEmpty() == true){\n              window.alert(\"Data entry error\")\n              changeInputColor(emptyBoxArray);\n              console.log(emptyBoxArray);\n            }\n            else { \n              if(names.includes(ride_name))\n              {\n                window.alert(`The ride: ${ride_name} exists`)\n              }\n              else {\n                window.alert(`The ride: ${ride_name} has been created`)\n                submitAttraction();\n                history.push('/newAttraction')\n                setTimeout(function(){\n                  window.location.reload(); \n                }, 10);\n              }  \n        }\n        }}>Create Attraction</CreateButton>\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n    <Upload>\n        <FileUpload />  \n    </Upload>\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>\n                        <input type='text' name='weatherCode' onChange={(e) => {\n                          setWeatherCode(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>\n                        <input type='text' name='maxWind' onChange={(e) => {\n                          setMaxWind(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>\n                        <input type='text' name='minTemp' onChange={(e) => {\n                          setMinTemp(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>\n                        <input type='text' name='powerRedundancy' onChange={(e) => {\n                          setPowerRedundancy(e.target.value);\n                        }}></input>\n\n            </td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>              \n                        <input type='text' name='numGates' onChange={(e) => {\n                          setNumGates(e.target.value);\n                        }}></input>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>\n                      <input type='text' name='ridePrimary' onChange={(e) => {\n                          setRidePrimary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>\n                        <input type='text' name='rideSecondary' onChange={(e) => {\n                          setRideSecondary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>\n                        <input type='text' name='rideTeriary' onChange={(e) => {\n                            setRideTertiary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/deletepage.js",["706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734"],"import React, { useState,useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  border-bottom: 25px solid lightgray;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n\nexport const DeleteLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\n\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage(props) {\n\n\n\n  //states\n  const [ride_name, setRideName] = useState('');\n\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\n\nconst deleteAttraction = (rideSelect) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${rideSelect}`);\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/DeletePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/DeletePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/DeletePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </DeleteBar>\n    \n    <EditBorder>\n    <InfoBar> Basic Information</InfoBar>\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n              {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n<tr>\n<td>Name</td>\n<td>          \n\n    \n                <> \n                <label> {props.location.ride_name} </label>\n                </>\n          \n\n\n\n</td>\n</tr>\n\n<tr>\n<td>Daily Opening</td>\n<th> \n  \n    \n    {attractionList.map((val, key) => {\n      var dailyOpening;\n      if (rideSelect == val.ride_name){\n          dailyOpening = val.dailyOpening;\n          return (\n            <> \n              <label> {dailyOpening} </label>\n            </>\n          );\n      }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Daily Closing</td>\n<th> \n\n    {attractionList.map((val, key) => {\n          var dailyClosing;\n          if (rideSelect == val.ride_name){\n              dailyClosing = val.dailyClosing;\n              return (\n                <> \n                  <label> {dailyClosing} </label>\n                </>\n              );\n          }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Theoretical Capacity</td>\n<th> \n\n    {attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n                  return (\n                    <> \n                      <label> {theoryCapacity} </label>\n                    </>\n                  );\n              }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Target Capacity</td>\n<th> \n\n  {attractionList.map((val, key) => {\n            var targetCapacity;\n            if (rideSelect == val.ride_name){\n                targetCapacity = val.targetCapacity;\n                return (\n                  <> \n                    <label> {targetCapacity} </label>\n                  </>\n                );\n            }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxVehicles;\n                if (rideSelect == val.ride_name){\n                    maxVehicles = val.maxVehicles;\n                    return (\n                      <> \n                        <label> {maxVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minVehicles;\n                if (rideSelect == val.ride_name){\n                    minVehicles = val.minVehicles;\n                    return (\n                      <> \n                        <label> {minVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Seats per Vehicle</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxSeats;\n                if (rideSelect == val.ride_name){\n                    maxSeats = val.maxSeats;\n                    return (\n                      <> \n                        <label> {maxSeats} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxStaff;\n                if (rideSelect == val.ride_name){\n                    maxStaff = val.maxStaff;\n                    return (\n                      <> \n                        <label> {maxStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minStaff;\n                if (rideSelect == val.ride_name){\n                    minStaff = val.minStaff;\n                    return (\n                      <> \n                        <label> {minStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Park Section</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var parkSection;\n                if (rideSelect == val.ride_name){\n                    parkSection = val.parkSection;\n                    return (\n                      <> \n                        <label> {parkSection} </label>  \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Weather Code</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var weatherCode;\n                if (rideSelect == val.ride_name){\n                    weatherCode = val.weatherCode;\n                    return (\n                      <> \n                        <label> {weatherCode} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Type</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var rideType;\n                if (rideSelect == val.ride_name){\n                    rideType = val.rideType;\n                    return (\n                      <> \n                        <label> {rideType} </label> \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n</tbody>\n\n          \n\n        </table>\n\n        <DeleteButton onClick={() => {\n            deleteAttraction(props.location.ride_name) //ride selected in drop down menu\n            window.alert(`The ride: ${props.location.ride_name} has been deleted`);\n            setTimeout(function(){\n              window.location.href='/newAttraction';\n            }, 10);\n          }}>Delete Attraction</DeleteButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/login.js",["735","736"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/pages/home.js",["737"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/General/Navbar.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainInfoDisplay.js",["738","739"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/General/Bannerbar.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainMiniAndon.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainParkSection.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainWeatherRadar.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainCodeMenu.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainDownTime.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/QuickToolsMain.js",["740","741"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js",["742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768"],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.5%;\nheight: 83.5%;\n`;\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr style = {styleGray}>\n                        <th scope=\"col\">Ride Name</th>\n                        <th scope=\"col\">Daily Opening</th>\n                        <th scope=\"col\">Daily Closing</th>\n                        <th scope=\"col\">Theoretical Capacity</th>\n                        <th scope=\"col\">Target Capacity</th>\n                        <th scope=\"col\">Minimum Vehicles</th>\n                        <th scope=\"col\">Maximum Vehicles</th>\n                        <th scope=\"col\">Maximum Seats</th>\n                        <th scope=\"col\">Minimum Staff</th>\n                        <th scope=\"col\">Maximum Staff</th>\n                        <th scope=\"col\">Park Section</th>\n                        <th scope=\"col\">Weather Code</th>\n                        <th scope=\"col\">Type</th>\n                    </tr>\n                </thead>\n\n                {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        return (\n                <tbody>\n                    <tr>\n                        <td><NavLink to = {{\n                            pathname:'/rideInfo',\n                            ride_name: {ride}\n                            \n                        }}>{val.ride_name}</NavLink></td>\n                        <td>{val.dailyOpening}</td>\n                        <td>{val.dailyClosing}</td>\n                        <td>{val.theoryCapacity}</td>\n                        <td>{val.targetCapacity}</td>\n                        <td>{val.minVehicles}</td>\n                        <td>{val.maxVehicles}</td>\n                        <td>{val.maxSeats}</td>\n                        <td>{val.minStaff}</td>\n                        <td>{val.maxStaff}</td>\n                        <td>{val.parkSection}</td>\n                        <td>{val.weatherCode}</td>\n                        <td>{val.rideType}</td>\n                    </tr>\n                </tbody>\n                        );\n                    })}\n                \n            </table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js",["769","770"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/StatCheck.js",["771","772"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/RideCheck.js",["773","774","775","776","777"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/DayCheck.js",["778","779"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js",["780","781","782"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/FavoriteBar.js",["783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport { saveLists } from './ChartLine';\nimport { ChartLine }from './ChartLine';\nimport Axios from 'axios';\n\nvar rideListSend;\nvar statListSend;\nvar idSend;\n\nexport function sendGraphData()\n    {\n        return [{\n        rides: rideListSend,\n        stats: statListSend,\n        id: idSend\n        }]\n    }\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n\n\n\nconst FavoriteBar = () => {\n\n    const [showModal, setShowModal] = useState(false);\n    const [graphData, setGraphData] = useState();\n\n    var [selectedFav, setSelectedFav] = useState();\n\n    var [favStored, setFavStored] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n\n\n    const sendFavGraph = (rides, stats, id) => {\n      Axios.post('http://localhost:3001/favGraph', {\n\n        rides: rides,\n        stats: stats,\n        id: id\n                    \n        }).then(() =>{\n        alert('successful insert');\n\n    })\n    }\n    var returnData;\n    var getFavGraph = (rides, stats) => {\n\n          Axios.get('http://localhost:3001/getFavGraph').then(res => {\n          // setSelectedFav(res.data);\n          returnData = res.data;\n          // console.log(res.data)\n          }).catch(err => console.log(err));\n\n    }\n\n    const prevFavCheck = (id) => {\n        var databaseData = returnData;\n        // console.log(databaseData)\n        // console.log(databaseData[id].rides)\n        // console.log(databaseData[id].stats)\n        if(databaseData[id].rides == '' || databaseData[id].rides == null)\n        {\n          console.log(saveLists())\n          sendFavGraph(saveLists().rideList, saveLists().statList, id);\n          rideListSend = saveLists().rideList;\n          statListSend = saveLists().statList;\n          idSend = id;\n          alert('Saving favorite graph to Fav button '+ id)\n        }\n        else{\n          rideListSend = databaseData[id].rides;\n          statListSend = databaseData[id].stats;\n          idSend = id;\n          alert(\"Loading Saved Favorite Graph!\")\n          \n        }\n        localStorage.setItem('data', JSON.stringify(sendGraphData()));\n        setTimeout(function(){\n          window.location.reload(); \n          \n         }, 2);\n    }\n    \n\n\n    return (\n        <>\n          {\n          useEffect(() => {\n            window.addEventListener('load', getFavGraph())\n            }, [])\n          }\n\n        <SideNav>\n\n                <FavButton onClick={() => {\n                      let id = 1;\n                      prevFavCheck(id);\n                      \n                      \n                }}>My Favorite 1</FavButton>\n\n                \n                <FavButton onClick={() => {\n                      let id = 2;\n                      prevFavCheck(id);\n                      \n                      \n                }}>My Favorite 2</FavButton>\n\n                <FavButton onClick={() => {\n                      let id = 3;\n                      prevFavCheck(id);\n                }}>My Favorite 3</FavButton>\n\n               <FavButton onClick={() => {\n                      let id = 4;\n                      prevFavCheck(id);\n                }}>My Favorite 4</FavButton>\n\n               <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/MapEnable.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/ChartLine.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/SubIntervals.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/CollectedData.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/BasicInfo.js",["795"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/Options.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/RideInfo/MiniGraph.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js",["796","797","798","799","800","801","802","803","804","805","806"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\noverflow: hidden;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\noverflow: auto;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  overflow: hidden;\n`\n\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 15px;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n`\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const styleGray = {backgroundColor : '#AFAFAF'};\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n\n        //states\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n        var cardCount = 0;\n        var currentRide = '';\n\n\n        //state to get all attractions\n        const [attractionList, setAttractionList] = useState([]);\n        //recieve data from backend to display\n        const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n          //edit info\n          const [WaitTime, setWaitTime] = useState('');\n          const [Throughput, setThroughput] = useState('');\n          const [AvailableSeats, setAvailableSeats] = useState('');\n          const [AvailableDown, setAvailableDown] = useState('');\n\n          const editInterval = (id, rideName) =>{\n            Axios.put('http://localhost:3001/editInterval', {\n\n                id: id,\n                ride_name: rideName,\n                WaitTime: WaitTime,\n                Throughput: Throughput,\n                AvailableSeats: AvailableSeats,\n                AvailableDown: AvailableDown\n                          \n                }).then(() =>{\n                alert('successful insert');\n\n            }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n            });\n          };\n         \n    return (\n        <>\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n\n                    var emptyArrayTest = `emptyArray${id}`;\n\n                    emptyArrayTest = [];\n\n\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                        if (WaitTime == ''){\n                            console.log(`waitTime${id}`)\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n                        else if(WaitTime < 0) {\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        if (Throughput == ''){\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n                        else if(Throughput < 0) {\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                        if (AvailableSeats == ''){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n                        else if (AvailableSeats < 0){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n\n\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n\n                        if (val.checkedAvailableDown == true){\n                            if (AvailableDown == ''){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n                            else if (AvailableDown < 0){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                      {currentRide = val.ride_name}\n                      {cardCount = cardCount + 1}\n                        return (\n                            <>\n\n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 10);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n\n\n                                <SubmitButton  onClick={() =>{\n\n                                    console.log(id)\n\n                                    var wait = `waitTime${id}`;\n                                    var throughput = `throughput${id}`;\n                                    var seats = `available${id}`;\n                                    var down = `down${id}`;\n                                    console.log(wait);\n                                    var refresh = 0;\n                                    console.log(emptyArrayTest);\n                                    if(emptyArrayTest.includes(wait)){\n                                        document.getElementById(wait).style.background = 'pink';\n                                        alert(\"Error! Wait Time has invalid input.\")\n                                        refresh = 1;\n                                    }\n\n                                    if(emptyArrayTest.includes(throughput)){\n                                        document.getElementById(throughput).style.background = 'pink';\n                                        alert(\"Error! Throughput has invalid input..\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(seats)){\n                                        document.getElementById(seats).style.background = 'pink';\n                                        alert(\"Error! Available Seats has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(down)){\n                                        document.getElementById(down).style.background = 'pink';\n                                        alert(\"Error! Available Down has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if (refresh == 0){\n\n                                        editInterval(id, val.ride_name)\n                                    }\n\n\n                                    // document.getElementById('3').style.background = \"pink\";\n\n                                    //editInterval(id, val.ride_name)\n                                    window.location.reload();\n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n            <Border>\n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr><td>{currentRide}</td><td>{cardCount}</td></tr>\n                    </tbody>\n\n                    {/* {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                 \n                        return(\n                    <tbody>\n                        <tr><td>{ride}</td><td>{cardCount}</td></tr>\n                    </tbody>\n                        );\n                    })} */}\n\n             \n                </table>\n                </InfoContainer>    \n\n            </Border>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/FileUpload/FileUpload.js",["807","808","809","810"],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js",["811","812","813","814","815","816","817","818","819","820","821","822","823"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .9%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\n\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`\nconst ParkwideIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const [parkIntervalList, setParkIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState('');\n\n    const deleteInterval = (id) => {\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n        };\n    \n    //edit info\n    const [WaitTime, setWaitTime] = useState('');\n    const [Throughput, setThroughput] = useState('');\n    const [AvailableSeats, setAvailableSeats] = useState('');\n    const [AvailableDown, setAvailableDown] = useState('');\n\n    const editParkInterval = (id) =>{\n        Axios.put('http://localhost:3001/editParkInterval', {\n\n            id: id,\n            WaitTime: WaitTime,\n            Throughput: Throughput,\n            AvailableSeats: AvailableSeats,\n            AvailableDown: AvailableDown\n                        \n            }).then(() =>{\n            alert('successful insert');\n\n        }).then( () => {\n            console.log(\"Successfully sent to port 3001\");\n        });\n        };\n        \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n            {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n            {parkIntervalList.map((val, key) => {\n                    var id = val.id;\n                    var emptyArrayTest = `emptyArray${id}`;\n                    emptyArrayTest = [];\n\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                        if (WaitTime == ''){\n                            console.log(`waitTime${id}`)\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n                        else if(WaitTime < 0) {\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        if (Throughput == ''){\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n                        else if(Throughput < 0) {\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                        if (AvailableSeats == ''){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n                        else if (AvailableSeats < 0){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n\n\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            if (AvailableDown == ''){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n                            else if (AvailableDown < 0){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 10);\n                               }}/></CardTime>\n \n                        <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    console.log(id)\n\n                                    var wait = `waitTime${id}`;\n                                    var throughput = `throughput${id}`;\n                                    var seats = `available${id}`;\n                                    var down = `down${id}`;\n\n                                    var refresh = 0;\n                                    console.log(emptyArrayTest);\n                                    if(emptyArrayTest.includes(wait)){\n                                        document.getElementById(wait).style.background = 'pink';\n                                        alert(\"Error! Wait time has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(throughput)){\n                                        document.getElementById(throughput).style.background = 'pink';\n                                        alert(\"Error! Throughput has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(seats)){\n                                        document.getElementById(seats).style.background = 'pink';\n                                        alert(\"Error! Available Seats has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(down)){\n                                        document.getElementById(down).style.background = 'pink';\n                                        alert(\"Error! Available Down has invalid input.\")\n                                        refresh = 1;\n                                    }\n                                    if (refresh == 0){\n                                        setTimeout(function(){\n                                            window.location.reload(); \n                                           }, 2);\n                                           editParkInterval(id);\n                                    }\n\n                                }}>Submit</SubmitButton>\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js",["824"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://localhost:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Main/MainGraphDisplay.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphUnits.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/globalStyles.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/ParkwideModal.js",["825","826","827","828","829","830","831","832","833","834","835"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\nwidth: 11%;\n`\nexport const ParkwideModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addParkInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    else if(timeValue <= 0){\n    alert(\"Time Value must be greater than 0\");\n    emptyBoxArray.push('timeValueID');\n    empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/FileUpload/Progress.js",[],"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Interval/AttractionModal.js",["836","837","838","839","840","841","842","843","844","845","846"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\nwidth: 11%;\n`\nexport const AttractionModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    else if(timeValue <= 0) {\n      alert(\"Time Value must be greater than 0\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js",[],{"ruleId":"847","severity":1,"message":"848","line":1,"column":50,"nodeType":"849","messageId":"850","endLine":1,"endColumn":54},{"ruleId":"847","severity":1,"message":"851","line":1,"column":56,"nodeType":"849","messageId":"850","endLine":1,"endColumn":63},{"ruleId":"847","severity":1,"message":"852","line":160,"column":10,"nodeType":"849","messageId":"850","endLine":160,"endColumn":19},{"ruleId":"847","severity":1,"message":"853","line":160,"column":21,"nodeType":"849","messageId":"850","endLine":160,"endColumn":32},{"ruleId":"854","severity":1,"message":"855","line":207,"column":10,"nodeType":"849","endLine":207,"endColumn":19,"suggestions":"856"},{"ruleId":"857","severity":1,"message":"858","line":208,"column":15,"nodeType":"859","messageId":"860","endLine":208,"endColumn":66},{"ruleId":"857","severity":1,"message":"858","line":209,"column":15,"nodeType":"859","messageId":"860","endLine":209,"endColumn":89},{"ruleId":"861","severity":1,"message":"862","line":240,"column":36,"nodeType":"863","messageId":"864","endLine":240,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":242,"column":22,"nodeType":"867","messageId":"868","endLine":242,"endColumn":24},{"ruleId":"861","severity":1,"message":"862","line":259,"column":36,"nodeType":"863","messageId":"864","endLine":259,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":261,"column":26,"nodeType":"867","messageId":"868","endLine":261,"endColumn":28},{"ruleId":"861","severity":1,"message":"862","line":278,"column":36,"nodeType":"863","messageId":"864","endLine":278,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":280,"column":30,"nodeType":"867","messageId":"868","endLine":280,"endColumn":32},{"ruleId":"861","severity":1,"message":"862","line":297,"column":34,"nodeType":"863","messageId":"864","endLine":297,"endColumn":36},{"ruleId":"865","severity":1,"message":"866","line":299,"column":28,"nodeType":"867","messageId":"868","endLine":299,"endColumn":30},{"ruleId":"861","severity":1,"message":"862","line":316,"column":36,"nodeType":"863","messageId":"864","endLine":316,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":318,"column":32,"nodeType":"867","messageId":"868","endLine":318,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":335,"column":36,"nodeType":"863","messageId":"864","endLine":335,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":337,"column":32,"nodeType":"867","messageId":"868","endLine":337,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":354,"column":36,"nodeType":"863","messageId":"864","endLine":354,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":356,"column":32,"nodeType":"867","messageId":"868","endLine":356,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":373,"column":36,"nodeType":"863","messageId":"864","endLine":373,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":375,"column":32,"nodeType":"867","messageId":"868","endLine":375,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":392,"column":36,"nodeType":"863","messageId":"864","endLine":392,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":394,"column":32,"nodeType":"867","messageId":"868","endLine":394,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":411,"column":36,"nodeType":"863","messageId":"864","endLine":411,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":413,"column":32,"nodeType":"867","messageId":"868","endLine":413,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":430,"column":36,"nodeType":"863","messageId":"864","endLine":430,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":432,"column":32,"nodeType":"867","messageId":"868","endLine":432,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":449,"column":36,"nodeType":"863","messageId":"864","endLine":449,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":451,"column":32,"nodeType":"867","messageId":"868","endLine":451,"endColumn":34},{"ruleId":"847","severity":1,"message":"869","line":151,"column":7,"nodeType":"849","messageId":"850","endLine":151,"endColumn":17},{"ruleId":"854","severity":1,"message":"870","line":340,"column":6,"nodeType":"849","endLine":340,"endColumn":15,"suggestions":"871"},{"ruleId":"857","severity":1,"message":"858","line":341,"column":7,"nodeType":"859","messageId":"860","endLine":341,"endColumn":58},{"ruleId":"857","severity":1,"message":"858","line":342,"column":7,"nodeType":"859","messageId":"860","endLine":342,"endColumn":81},{"ruleId":"857","severity":1,"message":"858","line":343,"column":7,"nodeType":"859","messageId":"860","endLine":343,"endColumn":79},{"ruleId":"861","severity":1,"message":"862","line":399,"column":46,"nodeType":"863","messageId":"864","endLine":399,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":400,"column":32,"nodeType":"867","messageId":"868","endLine":400,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":421,"column":46,"nodeType":"863","messageId":"864","endLine":421,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":423,"column":36,"nodeType":"867","messageId":"868","endLine":423,"endColumn":38},{"ruleId":"861","severity":1,"message":"862","line":445,"column":46,"nodeType":"863","messageId":"864","endLine":445,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":446,"column":40,"nodeType":"867","messageId":"868","endLine":446,"endColumn":42},{"ruleId":"861","severity":1,"message":"862","line":468,"column":44,"nodeType":"863","messageId":"864","endLine":468,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":469,"column":38,"nodeType":"867","messageId":"868","endLine":469,"endColumn":40},{"ruleId":"861","severity":1,"message":"862","line":490,"column":46,"nodeType":"863","messageId":"864","endLine":490,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":491,"column":42,"nodeType":"867","messageId":"868","endLine":491,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":512,"column":46,"nodeType":"863","messageId":"864","endLine":512,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":514,"column":42,"nodeType":"867","messageId":"868","endLine":514,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":535,"column":46,"nodeType":"863","messageId":"864","endLine":535,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":537,"column":42,"nodeType":"867","messageId":"868","endLine":537,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":558,"column":46,"nodeType":"863","messageId":"864","endLine":558,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":560,"column":42,"nodeType":"867","messageId":"868","endLine":560,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":581,"column":46,"nodeType":"863","messageId":"864","endLine":581,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":583,"column":42,"nodeType":"867","messageId":"868","endLine":583,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":604,"column":46,"nodeType":"863","messageId":"864","endLine":604,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":606,"column":42,"nodeType":"867","messageId":"868","endLine":606,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":627,"column":46,"nodeType":"863","messageId":"864","endLine":627,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":629,"column":42,"nodeType":"867","messageId":"868","endLine":629,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":650,"column":46,"nodeType":"863","messageId":"864","endLine":650,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":652,"column":42,"nodeType":"867","messageId":"868","endLine":652,"endColumn":44},{"ruleId":"865","severity":1,"message":"866","line":675,"column":30,"nodeType":"867","messageId":"868","endLine":675,"endColumn":32},{"ruleId":"872","severity":1,"message":"873","line":201,"column":14,"nodeType":"874","messageId":"868","endLine":201,"endColumn":21},{"ruleId":"872","severity":1,"message":"875","line":202,"column":22,"nodeType":"874","messageId":"868","endLine":202,"endColumn":37},{"ruleId":"872","severity":1,"message":"876","line":203,"column":15,"nodeType":"874","messageId":"868","endLine":203,"endColumn":23},{"ruleId":"872","severity":1,"message":"877","line":204,"column":18,"nodeType":"874","messageId":"868","endLine":204,"endColumn":29},{"ruleId":"872","severity":1,"message":"878","line":205,"column":20,"nodeType":"874","messageId":"868","endLine":205,"endColumn":33},{"ruleId":"872","severity":1,"message":"879","line":206,"column":19,"nodeType":"874","messageId":"868","endLine":206,"endColumn":31},{"ruleId":"865","severity":1,"message":"866","line":217,"column":16,"nodeType":"867","messageId":"868","endLine":217,"endColumn":18},{"ruleId":"865","severity":1,"message":"866","line":228,"column":19,"nodeType":"867","messageId":"868","endLine":228,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":239,"column":19,"nodeType":"867","messageId":"868","endLine":239,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":250,"column":21,"nodeType":"867","messageId":"868","endLine":250,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":261,"column":21,"nodeType":"867","messageId":"868","endLine":261,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":272,"column":18,"nodeType":"867","messageId":"868","endLine":272,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":283,"column":18,"nodeType":"867","messageId":"868","endLine":283,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":294,"column":15,"nodeType":"867","messageId":"868","endLine":294,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":305,"column":15,"nodeType":"867","messageId":"868","endLine":305,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":316,"column":15,"nodeType":"867","messageId":"868","endLine":316,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":327,"column":18,"nodeType":"867","messageId":"868","endLine":327,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":339,"column":18,"nodeType":"867","messageId":"868","endLine":339,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":350,"column":15,"nodeType":"867","messageId":"868","endLine":350,"endColumn":17},{"ruleId":"861","severity":1,"message":"880","line":534,"column":32,"nodeType":"863","messageId":"881","endLine":534,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":541,"column":29,"nodeType":"867","messageId":"868","endLine":541,"endColumn":31},{"ruleId":"847","severity":1,"message":"882","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":29},{"ruleId":"847","severity":1,"message":"883","line":1,"column":17,"nodeType":"849","messageId":"850","endLine":1,"endColumn":25},{"ruleId":"847","severity":1,"message":"884","line":1,"column":27,"nodeType":"849","messageId":"850","endLine":1,"endColumn":33},{"ruleId":"847","severity":1,"message":"885","line":1,"column":35,"nodeType":"849","messageId":"850","endLine":1,"endColumn":44},{"ruleId":"847","severity":1,"message":"886","line":1,"column":46,"nodeType":"849","messageId":"850","endLine":1,"endColumn":57},{"ruleId":"847","severity":1,"message":"885","line":1,"column":17,"nodeType":"849","messageId":"850","endLine":1,"endColumn":26},{"ruleId":"847","severity":1,"message":"883","line":1,"column":28,"nodeType":"849","messageId":"850","endLine":1,"endColumn":36},{"ruleId":"847","severity":1,"message":"887","line":3,"column":10,"nodeType":"849","messageId":"850","endLine":3,"endColumn":18},{"ruleId":"847","severity":1,"message":"888","line":27,"column":7,"nodeType":"849","messageId":"850","endLine":27,"endColumn":16},{"ruleId":"847","severity":1,"message":"852","line":32,"column":12,"nodeType":"849","messageId":"850","endLine":32,"endColumn":21},{"ruleId":"847","severity":1,"message":"889","line":32,"column":23,"nodeType":"849","messageId":"850","endLine":32,"endColumn":35},{"ruleId":"847","severity":1,"message":"890","line":33,"column":12,"nodeType":"849","messageId":"850","endLine":33,"endColumn":24},{"ruleId":"847","severity":1,"message":"891","line":33,"column":26,"nodeType":"849","messageId":"850","endLine":33,"endColumn":41},{"ruleId":"847","severity":1,"message":"892","line":34,"column":12,"nodeType":"849","messageId":"850","endLine":34,"endColumn":24},{"ruleId":"847","severity":1,"message":"893","line":34,"column":26,"nodeType":"849","messageId":"850","endLine":34,"endColumn":41},{"ruleId":"847","severity":1,"message":"894","line":35,"column":12,"nodeType":"849","messageId":"850","endLine":35,"endColumn":26},{"ruleId":"847","severity":1,"message":"895","line":35,"column":28,"nodeType":"849","messageId":"850","endLine":35,"endColumn":45},{"ruleId":"847","severity":1,"message":"896","line":36,"column":12,"nodeType":"849","messageId":"850","endLine":36,"endColumn":26},{"ruleId":"847","severity":1,"message":"897","line":36,"column":28,"nodeType":"849","messageId":"850","endLine":36,"endColumn":45},{"ruleId":"847","severity":1,"message":"898","line":37,"column":12,"nodeType":"849","messageId":"850","endLine":37,"endColumn":23},{"ruleId":"847","severity":1,"message":"899","line":37,"column":25,"nodeType":"849","messageId":"850","endLine":37,"endColumn":39},{"ruleId":"847","severity":1,"message":"900","line":38,"column":12,"nodeType":"849","messageId":"850","endLine":38,"endColumn":23},{"ruleId":"847","severity":1,"message":"901","line":38,"column":25,"nodeType":"849","messageId":"850","endLine":38,"endColumn":39},{"ruleId":"847","severity":1,"message":"902","line":39,"column":12,"nodeType":"849","messageId":"850","endLine":39,"endColumn":20},{"ruleId":"847","severity":1,"message":"903","line":39,"column":22,"nodeType":"849","messageId":"850","endLine":39,"endColumn":33},{"ruleId":"847","severity":1,"message":"904","line":40,"column":12,"nodeType":"849","messageId":"850","endLine":40,"endColumn":20},{"ruleId":"847","severity":1,"message":"905","line":40,"column":22,"nodeType":"849","messageId":"850","endLine":40,"endColumn":33},{"ruleId":"847","severity":1,"message":"906","line":41,"column":12,"nodeType":"849","messageId":"850","endLine":41,"endColumn":20},{"ruleId":"847","severity":1,"message":"907","line":41,"column":22,"nodeType":"849","messageId":"850","endLine":41,"endColumn":33},{"ruleId":"847","severity":1,"message":"908","line":42,"column":12,"nodeType":"849","messageId":"850","endLine":42,"endColumn":23},{"ruleId":"847","severity":1,"message":"909","line":42,"column":25,"nodeType":"849","messageId":"850","endLine":42,"endColumn":39},{"ruleId":"847","severity":1,"message":"910","line":43,"column":12,"nodeType":"849","messageId":"850","endLine":43,"endColumn":23},{"ruleId":"847","severity":1,"message":"911","line":43,"column":25,"nodeType":"849","messageId":"850","endLine":43,"endColumn":39},{"ruleId":"847","severity":1,"message":"912","line":44,"column":12,"nodeType":"849","messageId":"850","endLine":44,"endColumn":20},{"ruleId":"847","severity":1,"message":"913","line":44,"column":22,"nodeType":"849","messageId":"850","endLine":44,"endColumn":33},{"ruleId":"847","severity":1,"message":"914","line":4,"column":10,"nodeType":"849","messageId":"850","endLine":4,"endColumn":19},{"ruleId":"847","severity":1,"message":"915","line":20,"column":7,"nodeType":"849","messageId":"850","endLine":20,"endColumn":13},{"ruleId":"847","severity":1,"message":"916","line":58,"column":12,"nodeType":"849","messageId":"850","endLine":58,"endColumn":21},{"ruleId":"847","severity":1,"message":"917","line":59,"column":12,"nodeType":"849","messageId":"850","endLine":59,"endColumn":21},{"ruleId":"847","severity":1,"message":"918","line":59,"column":23,"nodeType":"849","messageId":"850","endLine":59,"endColumn":35},{"ruleId":"847","severity":1,"message":"919","line":61,"column":10,"nodeType":"849","messageId":"850","endLine":61,"endColumn":21},{"ruleId":"847","severity":1,"message":"920","line":61,"column":23,"nodeType":"849","messageId":"850","endLine":61,"endColumn":37},{"ruleId":"847","severity":1,"message":"921","line":63,"column":10,"nodeType":"849","messageId":"850","endLine":63,"endColumn":19},{"ruleId":"847","severity":1,"message":"922","line":63,"column":21,"nodeType":"849","messageId":"850","endLine":63,"endColumn":33},{"ruleId":"847","severity":1,"message":"923","line":65,"column":11,"nodeType":"849","messageId":"850","endLine":65,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":98,"column":35,"nodeType":"867","messageId":"868","endLine":98,"endColumn":37},{"ruleId":"854","severity":1,"message":"924","line":128,"column":16,"nodeType":"925","endLine":128,"endColumn":18,"suggestions":"926"},{"ruleId":"847","severity":1,"message":"927","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":16},{"ruleId":"847","severity":1,"message":"928","line":8,"column":10,"nodeType":"849","messageId":"850","endLine":8,"endColumn":18},{"ruleId":"847","severity":1,"message":"929","line":10,"column":10,"nodeType":"849","messageId":"850","endLine":10,"endColumn":17},{"ruleId":"847","severity":1,"message":"930","line":11,"column":10,"nodeType":"849","messageId":"850","endLine":11,"endColumn":26},{"ruleId":"847","severity":1,"message":"915","line":6,"column":7,"nodeType":"849","messageId":"850","endLine":6,"endColumn":13},{"ruleId":"847","severity":1,"message":"916","line":43,"column":8,"nodeType":"849","messageId":"850","endLine":43,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":45,"column":9,"nodeType":"849","messageId":"850","endLine":45,"endColumn":18},{"ruleId":"847","severity":1,"message":"883","line":2,"column":17,"nodeType":"849","messageId":"850","endLine":2,"endColumn":25},{"ruleId":"847","severity":1,"message":"885","line":2,"column":27,"nodeType":"849","messageId":"850","endLine":2,"endColumn":36},{"ruleId":"847","severity":1,"message":"916","line":38,"column":8,"nodeType":"849","messageId":"850","endLine":38,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":40,"column":9,"nodeType":"849","messageId":"850","endLine":40,"endColumn":18},{"ruleId":"847","severity":1,"message":"884","line":6,"column":27,"nodeType":"849","messageId":"850","endLine":6,"endColumn":33},{"ruleId":"847","severity":1,"message":"886","line":6,"column":46,"nodeType":"849","messageId":"850","endLine":6,"endColumn":57},{"ruleId":"847","severity":1,"message":"931","line":155,"column":12,"nodeType":"849","messageId":"850","endLine":155,"endColumn":22},{"ruleId":"847","severity":1,"message":"932","line":155,"column":24,"nodeType":"849","messageId":"850","endLine":155,"endColumn":37},{"ruleId":"865","severity":1,"message":"866","line":207,"column":49,"nodeType":"867","messageId":"868","endLine":207,"endColumn":51},{"ruleId":"865","severity":1,"message":"866","line":208,"column":38,"nodeType":"867","messageId":"868","endLine":208,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":226,"column":51,"nodeType":"867","messageId":"868","endLine":226,"endColumn":53},{"ruleId":"865","severity":1,"message":"866","line":227,"column":40,"nodeType":"867","messageId":"868","endLine":227,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":245,"column":55,"nodeType":"867","messageId":"868","endLine":245,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":246,"column":44,"nodeType":"867","messageId":"868","endLine":246,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":264,"column":54,"nodeType":"867","messageId":"868","endLine":264,"endColumn":56},{"ruleId":"865","severity":1,"message":"866","line":265,"column":47,"nodeType":"867","messageId":"868","endLine":265,"endColumn":49},{"ruleId":"865","severity":1,"message":"866","line":327,"column":49,"nodeType":"867","messageId":"868","endLine":327,"endColumn":51},{"ruleId":"865","severity":1,"message":"866","line":303,"column":49,"nodeType":"867","messageId":"868","endLine":303,"endColumn":51},{"ruleId":"865","severity":1,"message":"866","line":304,"column":38,"nodeType":"867","messageId":"868","endLine":304,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":322,"column":51,"nodeType":"867","messageId":"868","endLine":322,"endColumn":53},{"ruleId":"865","severity":1,"message":"866","line":323,"column":40,"nodeType":"867","messageId":"868","endLine":323,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":341,"column":55,"nodeType":"867","messageId":"868","endLine":341,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":342,"column":44,"nodeType":"867","messageId":"868","endLine":342,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":361,"column":54,"nodeType":"867","messageId":"868","endLine":361,"endColumn":56},{"ruleId":"865","severity":1,"message":"866","line":362,"column":47,"nodeType":"867","messageId":"868","endLine":362,"endColumn":49},{"ruleId":"857","severity":1,"message":"858","line":378,"column":23,"nodeType":"859","messageId":"860","endLine":378,"endColumn":52},{"ruleId":"857","severity":1,"message":"858","line":379,"column":23,"nodeType":"859","messageId":"860","endLine":379,"endColumn":50},{"ruleId":"865","severity":1,"message":"866","line":435,"column":49,"nodeType":"867","messageId":"868","endLine":435,"endColumn":51},{"ruleId":"847","severity":1,"message":"888","line":33,"column":7,"nodeType":"849","messageId":"850","endLine":33,"endColumn":16},{"ruleId":"847","severity":1,"message":"933","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":13},{"ruleId":"847","severity":1,"message":"916","line":36,"column":8,"nodeType":"849","messageId":"850","endLine":36,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":38,"column":7,"nodeType":"849","messageId":"850","endLine":38,"endColumn":16},{"ruleId":"847","severity":1,"message":"933","line":2,"column":8,"nodeType":"849","messageId":"850","endLine":2,"endColumn":13},{"ruleId":"847","severity":1,"message":"934","line":14,"column":9,"nodeType":"849","messageId":"850","endLine":14,"endColumn":19},{"ruleId":"847","severity":1,"message":"935","line":80,"column":7,"nodeType":"849","messageId":"850","endLine":80,"endColumn":11},{"ruleId":"865","severity":1,"message":"866","line":185,"column":18,"nodeType":"867","messageId":"868","endLine":185,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":188,"column":18,"nodeType":"867","messageId":"868","endLine":188,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":191,"column":18,"nodeType":"867","messageId":"868","endLine":191,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":194,"column":18,"nodeType":"867","messageId":"868","endLine":194,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":202,"column":18,"nodeType":"867","messageId":"868","endLine":202,"endColumn":20},{"ruleId":"861","severity":1,"message":"880","line":212,"column":22,"nodeType":"863","messageId":"881","endLine":212,"endColumn":24},{"ruleId":"865","severity":1,"message":"866","line":216,"column":26,"nodeType":"867","messageId":"868","endLine":216,"endColumn":28},{"ruleId":"865","severity":1,"message":"866","line":221,"column":21,"nodeType":"867","messageId":"868","endLine":221,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":226,"column":19,"nodeType":"867","messageId":"868","endLine":226,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":296,"column":51,"nodeType":"867","messageId":"868","endLine":296,"endColumn":53},{"ruleId":"847","severity":1,"message":"935","line":80,"column":7,"nodeType":"849","messageId":"850","endLine":80,"endColumn":11},{"ruleId":"865","severity":1,"message":"866","line":184,"column":18,"nodeType":"867","messageId":"868","endLine":184,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":187,"column":18,"nodeType":"867","messageId":"868","endLine":187,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":190,"column":18,"nodeType":"867","messageId":"868","endLine":190,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":193,"column":18,"nodeType":"867","messageId":"868","endLine":193,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":201,"column":18,"nodeType":"867","messageId":"868","endLine":201,"endColumn":20},{"ruleId":"861","severity":1,"message":"880","line":211,"column":22,"nodeType":"863","messageId":"881","endLine":211,"endColumn":24},{"ruleId":"865","severity":1,"message":"866","line":215,"column":26,"nodeType":"867","messageId":"868","endLine":215,"endColumn":28},{"ruleId":"865","severity":1,"message":"866","line":220,"column":21,"nodeType":"867","messageId":"868","endLine":220,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":225,"column":19,"nodeType":"867","messageId":"868","endLine":225,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":295,"column":51,"nodeType":"867","messageId":"868","endLine":295,"endColumn":53},{"ruleId":"936","replacedBy":"937"},{"ruleId":"938","replacedBy":"939"},{"ruleId":"847","severity":1,"message":"848","line":1,"column":50,"nodeType":"849","messageId":"850","endLine":1,"endColumn":54},{"ruleId":"847","severity":1,"message":"851","line":1,"column":56,"nodeType":"849","messageId":"850","endLine":1,"endColumn":63},{"ruleId":"847","severity":1,"message":"883","line":1,"column":17,"nodeType":"849","messageId":"850","endLine":1,"endColumn":25},{"ruleId":"847","severity":1,"message":"884","line":1,"column":27,"nodeType":"849","messageId":"850","endLine":1,"endColumn":33},{"ruleId":"847","severity":1,"message":"885","line":1,"column":35,"nodeType":"849","messageId":"850","endLine":1,"endColumn":44},{"ruleId":"847","severity":1,"message":"886","line":1,"column":46,"nodeType":"849","messageId":"850","endLine":1,"endColumn":57},{"ruleId":"847","severity":1,"message":"869","line":151,"column":7,"nodeType":"849","messageId":"850","endLine":151,"endColumn":17},{"ruleId":"854","severity":1,"message":"870","line":340,"column":6,"nodeType":"849","endLine":340,"endColumn":15,"suggestions":"940"},{"ruleId":"857","severity":1,"message":"858","line":341,"column":7,"nodeType":"859","messageId":"860","endLine":341,"endColumn":58},{"ruleId":"857","severity":1,"message":"858","line":342,"column":7,"nodeType":"859","messageId":"860","endLine":342,"endColumn":81},{"ruleId":"857","severity":1,"message":"858","line":343,"column":7,"nodeType":"859","messageId":"860","endLine":343,"endColumn":79},{"ruleId":"861","severity":1,"message":"862","line":399,"column":46,"nodeType":"863","messageId":"864","endLine":399,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":400,"column":32,"nodeType":"867","messageId":"868","endLine":400,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":421,"column":46,"nodeType":"863","messageId":"864","endLine":421,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":423,"column":36,"nodeType":"867","messageId":"868","endLine":423,"endColumn":38},{"ruleId":"861","severity":1,"message":"862","line":445,"column":46,"nodeType":"863","messageId":"864","endLine":445,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":446,"column":40,"nodeType":"867","messageId":"868","endLine":446,"endColumn":42},{"ruleId":"861","severity":1,"message":"862","line":468,"column":44,"nodeType":"863","messageId":"864","endLine":468,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":469,"column":38,"nodeType":"867","messageId":"868","endLine":469,"endColumn":40},{"ruleId":"861","severity":1,"message":"862","line":490,"column":46,"nodeType":"863","messageId":"864","endLine":490,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":491,"column":42,"nodeType":"867","messageId":"868","endLine":491,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":512,"column":46,"nodeType":"863","messageId":"864","endLine":512,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":514,"column":42,"nodeType":"867","messageId":"868","endLine":514,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":535,"column":46,"nodeType":"863","messageId":"864","endLine":535,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":537,"column":42,"nodeType":"867","messageId":"868","endLine":537,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":558,"column":46,"nodeType":"863","messageId":"864","endLine":558,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":560,"column":42,"nodeType":"867","messageId":"868","endLine":560,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":581,"column":46,"nodeType":"863","messageId":"864","endLine":581,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":583,"column":42,"nodeType":"867","messageId":"868","endLine":583,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":604,"column":46,"nodeType":"863","messageId":"864","endLine":604,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":606,"column":42,"nodeType":"867","messageId":"868","endLine":606,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":627,"column":46,"nodeType":"863","messageId":"864","endLine":627,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":629,"column":42,"nodeType":"867","messageId":"868","endLine":629,"endColumn":44},{"ruleId":"861","severity":1,"message":"862","line":650,"column":46,"nodeType":"863","messageId":"864","endLine":650,"endColumn":48},{"ruleId":"865","severity":1,"message":"866","line":652,"column":42,"nodeType":"867","messageId":"868","endLine":652,"endColumn":44},{"ruleId":"865","severity":1,"message":"866","line":675,"column":30,"nodeType":"867","messageId":"868","endLine":675,"endColumn":32},{"ruleId":"847","severity":1,"message":"882","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":29},{"ruleId":"872","severity":1,"message":"873","line":201,"column":14,"nodeType":"874","messageId":"868","endLine":201,"endColumn":21},{"ruleId":"872","severity":1,"message":"875","line":202,"column":22,"nodeType":"874","messageId":"868","endLine":202,"endColumn":37},{"ruleId":"872","severity":1,"message":"876","line":203,"column":15,"nodeType":"874","messageId":"868","endLine":203,"endColumn":23},{"ruleId":"872","severity":1,"message":"877","line":204,"column":18,"nodeType":"874","messageId":"868","endLine":204,"endColumn":29},{"ruleId":"872","severity":1,"message":"878","line":205,"column":20,"nodeType":"874","messageId":"868","endLine":205,"endColumn":33},{"ruleId":"872","severity":1,"message":"879","line":206,"column":19,"nodeType":"874","messageId":"868","endLine":206,"endColumn":31},{"ruleId":"865","severity":1,"message":"866","line":217,"column":16,"nodeType":"867","messageId":"868","endLine":217,"endColumn":18},{"ruleId":"865","severity":1,"message":"866","line":228,"column":19,"nodeType":"867","messageId":"868","endLine":228,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":239,"column":19,"nodeType":"867","messageId":"868","endLine":239,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":250,"column":21,"nodeType":"867","messageId":"868","endLine":250,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":261,"column":21,"nodeType":"867","messageId":"868","endLine":261,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":272,"column":18,"nodeType":"867","messageId":"868","endLine":272,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":283,"column":18,"nodeType":"867","messageId":"868","endLine":283,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":294,"column":15,"nodeType":"867","messageId":"868","endLine":294,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":305,"column":15,"nodeType":"867","messageId":"868","endLine":305,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":316,"column":15,"nodeType":"867","messageId":"868","endLine":316,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":327,"column":18,"nodeType":"867","messageId":"868","endLine":327,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":339,"column":18,"nodeType":"867","messageId":"868","endLine":339,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":350,"column":15,"nodeType":"867","messageId":"868","endLine":350,"endColumn":17},{"ruleId":"861","severity":1,"message":"880","line":534,"column":32,"nodeType":"863","messageId":"881","endLine":534,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":541,"column":29,"nodeType":"867","messageId":"868","endLine":541,"endColumn":31},{"ruleId":"847","severity":1,"message":"852","line":160,"column":10,"nodeType":"849","messageId":"850","endLine":160,"endColumn":19},{"ruleId":"847","severity":1,"message":"853","line":160,"column":21,"nodeType":"849","messageId":"850","endLine":160,"endColumn":32},{"ruleId":"854","severity":1,"message":"855","line":207,"column":10,"nodeType":"849","endLine":207,"endColumn":19,"suggestions":"941"},{"ruleId":"857","severity":1,"message":"858","line":208,"column":15,"nodeType":"859","messageId":"860","endLine":208,"endColumn":66},{"ruleId":"857","severity":1,"message":"858","line":209,"column":15,"nodeType":"859","messageId":"860","endLine":209,"endColumn":89},{"ruleId":"861","severity":1,"message":"862","line":240,"column":36,"nodeType":"863","messageId":"864","endLine":240,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":242,"column":22,"nodeType":"867","messageId":"868","endLine":242,"endColumn":24},{"ruleId":"861","severity":1,"message":"862","line":259,"column":36,"nodeType":"863","messageId":"864","endLine":259,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":261,"column":26,"nodeType":"867","messageId":"868","endLine":261,"endColumn":28},{"ruleId":"861","severity":1,"message":"862","line":278,"column":36,"nodeType":"863","messageId":"864","endLine":278,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":280,"column":30,"nodeType":"867","messageId":"868","endLine":280,"endColumn":32},{"ruleId":"861","severity":1,"message":"862","line":297,"column":34,"nodeType":"863","messageId":"864","endLine":297,"endColumn":36},{"ruleId":"865","severity":1,"message":"866","line":299,"column":28,"nodeType":"867","messageId":"868","endLine":299,"endColumn":30},{"ruleId":"861","severity":1,"message":"862","line":316,"column":36,"nodeType":"863","messageId":"864","endLine":316,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":318,"column":32,"nodeType":"867","messageId":"868","endLine":318,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":335,"column":36,"nodeType":"863","messageId":"864","endLine":335,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":337,"column":32,"nodeType":"867","messageId":"868","endLine":337,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":354,"column":36,"nodeType":"863","messageId":"864","endLine":354,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":356,"column":32,"nodeType":"867","messageId":"868","endLine":356,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":373,"column":36,"nodeType":"863","messageId":"864","endLine":373,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":375,"column":32,"nodeType":"867","messageId":"868","endLine":375,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":392,"column":36,"nodeType":"863","messageId":"864","endLine":392,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":394,"column":32,"nodeType":"867","messageId":"868","endLine":394,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":411,"column":36,"nodeType":"863","messageId":"864","endLine":411,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":413,"column":32,"nodeType":"867","messageId":"868","endLine":413,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":430,"column":36,"nodeType":"863","messageId":"864","endLine":430,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":432,"column":32,"nodeType":"867","messageId":"868","endLine":432,"endColumn":34},{"ruleId":"861","severity":1,"message":"862","line":449,"column":36,"nodeType":"863","messageId":"864","endLine":449,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":451,"column":32,"nodeType":"867","messageId":"868","endLine":451,"endColumn":34},{"ruleId":"847","severity":1,"message":"885","line":1,"column":17,"nodeType":"849","messageId":"850","endLine":1,"endColumn":26},{"ruleId":"847","severity":1,"message":"883","line":1,"column":28,"nodeType":"849","messageId":"850","endLine":1,"endColumn":36},{"ruleId":"847","severity":1,"message":"887","line":3,"column":10,"nodeType":"849","messageId":"850","endLine":3,"endColumn":18},{"ruleId":"847","severity":1,"message":"883","line":2,"column":17,"nodeType":"849","messageId":"850","endLine":2,"endColumn":25},{"ruleId":"847","severity":1,"message":"885","line":2,"column":27,"nodeType":"849","messageId":"850","endLine":2,"endColumn":36},{"ruleId":"847","severity":1,"message":"916","line":38,"column":8,"nodeType":"849","messageId":"850","endLine":38,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":40,"column":9,"nodeType":"849","messageId":"850","endLine":40,"endColumn":18},{"ruleId":"847","severity":1,"message":"888","line":27,"column":7,"nodeType":"849","messageId":"850","endLine":27,"endColumn":16},{"ruleId":"847","severity":1,"message":"852","line":32,"column":12,"nodeType":"849","messageId":"850","endLine":32,"endColumn":21},{"ruleId":"847","severity":1,"message":"889","line":32,"column":23,"nodeType":"849","messageId":"850","endLine":32,"endColumn":35},{"ruleId":"847","severity":1,"message":"890","line":33,"column":12,"nodeType":"849","messageId":"850","endLine":33,"endColumn":24},{"ruleId":"847","severity":1,"message":"891","line":33,"column":26,"nodeType":"849","messageId":"850","endLine":33,"endColumn":41},{"ruleId":"847","severity":1,"message":"892","line":34,"column":12,"nodeType":"849","messageId":"850","endLine":34,"endColumn":24},{"ruleId":"847","severity":1,"message":"893","line":34,"column":26,"nodeType":"849","messageId":"850","endLine":34,"endColumn":41},{"ruleId":"847","severity":1,"message":"894","line":35,"column":12,"nodeType":"849","messageId":"850","endLine":35,"endColumn":26},{"ruleId":"847","severity":1,"message":"895","line":35,"column":28,"nodeType":"849","messageId":"850","endLine":35,"endColumn":45},{"ruleId":"847","severity":1,"message":"896","line":36,"column":12,"nodeType":"849","messageId":"850","endLine":36,"endColumn":26},{"ruleId":"847","severity":1,"message":"897","line":36,"column":28,"nodeType":"849","messageId":"850","endLine":36,"endColumn":45},{"ruleId":"847","severity":1,"message":"898","line":37,"column":12,"nodeType":"849","messageId":"850","endLine":37,"endColumn":23},{"ruleId":"847","severity":1,"message":"899","line":37,"column":25,"nodeType":"849","messageId":"850","endLine":37,"endColumn":39},{"ruleId":"847","severity":1,"message":"900","line":38,"column":12,"nodeType":"849","messageId":"850","endLine":38,"endColumn":23},{"ruleId":"847","severity":1,"message":"901","line":38,"column":25,"nodeType":"849","messageId":"850","endLine":38,"endColumn":39},{"ruleId":"847","severity":1,"message":"902","line":39,"column":12,"nodeType":"849","messageId":"850","endLine":39,"endColumn":20},{"ruleId":"847","severity":1,"message":"903","line":39,"column":22,"nodeType":"849","messageId":"850","endLine":39,"endColumn":33},{"ruleId":"847","severity":1,"message":"904","line":40,"column":12,"nodeType":"849","messageId":"850","endLine":40,"endColumn":20},{"ruleId":"847","severity":1,"message":"905","line":40,"column":22,"nodeType":"849","messageId":"850","endLine":40,"endColumn":33},{"ruleId":"847","severity":1,"message":"906","line":41,"column":12,"nodeType":"849","messageId":"850","endLine":41,"endColumn":20},{"ruleId":"847","severity":1,"message":"907","line":41,"column":22,"nodeType":"849","messageId":"850","endLine":41,"endColumn":33},{"ruleId":"847","severity":1,"message":"908","line":42,"column":12,"nodeType":"849","messageId":"850","endLine":42,"endColumn":23},{"ruleId":"847","severity":1,"message":"909","line":42,"column":25,"nodeType":"849","messageId":"850","endLine":42,"endColumn":39},{"ruleId":"847","severity":1,"message":"910","line":43,"column":12,"nodeType":"849","messageId":"850","endLine":43,"endColumn":23},{"ruleId":"847","severity":1,"message":"911","line":43,"column":25,"nodeType":"849","messageId":"850","endLine":43,"endColumn":39},{"ruleId":"847","severity":1,"message":"912","line":44,"column":12,"nodeType":"849","messageId":"850","endLine":44,"endColumn":20},{"ruleId":"847","severity":1,"message":"913","line":44,"column":22,"nodeType":"849","messageId":"850","endLine":44,"endColumn":33},{"ruleId":"847","severity":1,"message":"916","line":36,"column":8,"nodeType":"849","messageId":"850","endLine":36,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":38,"column":7,"nodeType":"849","messageId":"850","endLine":38,"endColumn":16},{"ruleId":"847","severity":1,"message":"942","line":28,"column":18,"nodeType":"849","messageId":"850","endLine":28,"endColumn":29},{"ruleId":"847","severity":1,"message":"934","line":31,"column":9,"nodeType":"849","messageId":"850","endLine":31,"endColumn":19},{"ruleId":"847","severity":1,"message":"943","line":3,"column":10,"nodeType":"849","messageId":"850","endLine":3,"endColumn":49},{"ruleId":"847","severity":1,"message":"934","line":26,"column":9,"nodeType":"849","messageId":"850","endLine":26,"endColumn":19},{"ruleId":"847","severity":1,"message":"852","line":27,"column":8,"nodeType":"849","messageId":"850","endLine":27,"endColumn":17},{"ruleId":"847","severity":1,"message":"944","line":28,"column":18,"nodeType":"849","messageId":"850","endLine":28,"endColumn":29},{"ruleId":"945","severity":1,"message":"946","line":62,"column":31,"nodeType":"947","endLine":62,"endColumn":42},{"ruleId":"847","severity":1,"message":"933","line":2,"column":8,"nodeType":"849","messageId":"850","endLine":2,"endColumn":13},{"ruleId":"847","severity":1,"message":"934","line":14,"column":9,"nodeType":"849","messageId":"850","endLine":14,"endColumn":19},{"ruleId":"847","severity":1,"message":"915","line":6,"column":7,"nodeType":"849","messageId":"850","endLine":6,"endColumn":13},{"ruleId":"847","severity":1,"message":"916","line":43,"column":8,"nodeType":"849","messageId":"850","endLine":43,"endColumn":17},{"ruleId":"847","severity":1,"message":"923","line":45,"column":9,"nodeType":"849","messageId":"850","endLine":45,"endColumn":18},{"ruleId":"847","severity":1,"message":"914","line":4,"column":10,"nodeType":"849","messageId":"850","endLine":4,"endColumn":19},{"ruleId":"847","severity":1,"message":"915","line":20,"column":7,"nodeType":"849","messageId":"850","endLine":20,"endColumn":13},{"ruleId":"847","severity":1,"message":"916","line":58,"column":12,"nodeType":"849","messageId":"850","endLine":58,"endColumn":21},{"ruleId":"847","severity":1,"message":"917","line":59,"column":12,"nodeType":"849","messageId":"850","endLine":59,"endColumn":21},{"ruleId":"847","severity":1,"message":"918","line":59,"column":23,"nodeType":"849","messageId":"850","endLine":59,"endColumn":35},{"ruleId":"847","severity":1,"message":"919","line":61,"column":10,"nodeType":"849","messageId":"850","endLine":61,"endColumn":21},{"ruleId":"847","severity":1,"message":"920","line":61,"column":23,"nodeType":"849","messageId":"850","endLine":61,"endColumn":37},{"ruleId":"847","severity":1,"message":"921","line":63,"column":10,"nodeType":"849","messageId":"850","endLine":63,"endColumn":19},{"ruleId":"847","severity":1,"message":"922","line":63,"column":21,"nodeType":"849","messageId":"850","endLine":63,"endColumn":33},{"ruleId":"847","severity":1,"message":"923","line":65,"column":11,"nodeType":"849","messageId":"850","endLine":65,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":98,"column":35,"nodeType":"867","messageId":"868","endLine":98,"endColumn":37},{"ruleId":"854","severity":1,"message":"924","line":128,"column":16,"nodeType":"925","endLine":128,"endColumn":18,"suggestions":"948"},{"ruleId":"847","severity":1,"message":"933","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":13},{"ruleId":"865","severity":1,"message":"866","line":303,"column":49,"nodeType":"867","messageId":"868","endLine":303,"endColumn":51},{"ruleId":"865","severity":1,"message":"866","line":304,"column":38,"nodeType":"867","messageId":"868","endLine":304,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":322,"column":51,"nodeType":"867","messageId":"868","endLine":322,"endColumn":53},{"ruleId":"865","severity":1,"message":"866","line":323,"column":40,"nodeType":"867","messageId":"868","endLine":323,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":341,"column":55,"nodeType":"867","messageId":"868","endLine":341,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":342,"column":44,"nodeType":"867","messageId":"868","endLine":342,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":361,"column":54,"nodeType":"867","messageId":"868","endLine":361,"endColumn":56},{"ruleId":"865","severity":1,"message":"866","line":362,"column":47,"nodeType":"867","messageId":"868","endLine":362,"endColumn":49},{"ruleId":"857","severity":1,"message":"858","line":378,"column":23,"nodeType":"859","messageId":"860","endLine":378,"endColumn":52},{"ruleId":"857","severity":1,"message":"858","line":379,"column":23,"nodeType":"859","messageId":"860","endLine":379,"endColumn":50},{"ruleId":"865","severity":1,"message":"866","line":435,"column":49,"nodeType":"867","messageId":"868","endLine":435,"endColumn":51},{"ruleId":"847","severity":1,"message":"927","line":3,"column":8,"nodeType":"849","messageId":"850","endLine":3,"endColumn":16},{"ruleId":"847","severity":1,"message":"928","line":8,"column":10,"nodeType":"849","messageId":"850","endLine":8,"endColumn":18},{"ruleId":"847","severity":1,"message":"929","line":10,"column":10,"nodeType":"849","messageId":"850","endLine":10,"endColumn":17},{"ruleId":"847","severity":1,"message":"930","line":11,"column":10,"nodeType":"849","messageId":"850","endLine":11,"endColumn":26},{"ruleId":"847","severity":1,"message":"884","line":6,"column":27,"nodeType":"849","messageId":"850","endLine":6,"endColumn":33},{"ruleId":"847","severity":1,"message":"886","line":6,"column":46,"nodeType":"849","messageId":"850","endLine":6,"endColumn":57},{"ruleId":"847","severity":1,"message":"931","line":155,"column":12,"nodeType":"849","messageId":"850","endLine":155,"endColumn":22},{"ruleId":"847","severity":1,"message":"932","line":155,"column":24,"nodeType":"849","messageId":"850","endLine":155,"endColumn":37},{"ruleId":"865","severity":1,"message":"866","line":207,"column":49,"nodeType":"867","messageId":"868","endLine":207,"endColumn":51},{"ruleId":"865","severity":1,"message":"866","line":208,"column":38,"nodeType":"867","messageId":"868","endLine":208,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":226,"column":51,"nodeType":"867","messageId":"868","endLine":226,"endColumn":53},{"ruleId":"865","severity":1,"message":"866","line":227,"column":40,"nodeType":"867","messageId":"868","endLine":227,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":245,"column":55,"nodeType":"867","messageId":"868","endLine":245,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":246,"column":44,"nodeType":"867","messageId":"868","endLine":246,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":264,"column":54,"nodeType":"867","messageId":"868","endLine":264,"endColumn":56},{"ruleId":"865","severity":1,"message":"866","line":265,"column":47,"nodeType":"867","messageId":"868","endLine":265,"endColumn":49},{"ruleId":"865","severity":1,"message":"866","line":327,"column":49,"nodeType":"867","messageId":"868","endLine":327,"endColumn":51},{"ruleId":"847","severity":1,"message":"888","line":33,"column":7,"nodeType":"849","messageId":"850","endLine":33,"endColumn":16},{"ruleId":"847","severity":1,"message":"935","line":80,"column":7,"nodeType":"849","messageId":"850","endLine":80,"endColumn":11},{"ruleId":"865","severity":1,"message":"866","line":185,"column":18,"nodeType":"867","messageId":"868","endLine":185,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":188,"column":18,"nodeType":"867","messageId":"868","endLine":188,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":191,"column":18,"nodeType":"867","messageId":"868","endLine":191,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":194,"column":18,"nodeType":"867","messageId":"868","endLine":194,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":202,"column":18,"nodeType":"867","messageId":"868","endLine":202,"endColumn":20},{"ruleId":"861","severity":1,"message":"880","line":212,"column":22,"nodeType":"863","messageId":"881","endLine":212,"endColumn":24},{"ruleId":"865","severity":1,"message":"866","line":216,"column":26,"nodeType":"867","messageId":"868","endLine":216,"endColumn":28},{"ruleId":"865","severity":1,"message":"866","line":221,"column":21,"nodeType":"867","messageId":"868","endLine":221,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":226,"column":19,"nodeType":"867","messageId":"868","endLine":226,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":296,"column":51,"nodeType":"867","messageId":"868","endLine":296,"endColumn":53},{"ruleId":"847","severity":1,"message":"935","line":80,"column":7,"nodeType":"849","messageId":"850","endLine":80,"endColumn":11},{"ruleId":"865","severity":1,"message":"866","line":184,"column":18,"nodeType":"867","messageId":"868","endLine":184,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":187,"column":18,"nodeType":"867","messageId":"868","endLine":187,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":190,"column":18,"nodeType":"867","messageId":"868","endLine":190,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":193,"column":18,"nodeType":"867","messageId":"868","endLine":193,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":201,"column":18,"nodeType":"867","messageId":"868","endLine":201,"endColumn":20},{"ruleId":"861","severity":1,"message":"880","line":211,"column":22,"nodeType":"863","messageId":"881","endLine":211,"endColumn":24},{"ruleId":"865","severity":1,"message":"866","line":215,"column":26,"nodeType":"867","messageId":"868","endLine":215,"endColumn":28},{"ruleId":"865","severity":1,"message":"866","line":220,"column":21,"nodeType":"867","messageId":"868","endLine":220,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":225,"column":19,"nodeType":"867","messageId":"868","endLine":225,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":295,"column":51,"nodeType":"867","messageId":"868","endLine":295,"endColumn":53},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'ride_name' is assigned a value but never used.","'setRideName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.ride_name] as a second argument to the useEffect Hook.",["949"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RideSelect' is assigned a value but never used.","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getAttractions, props.location.ride_name] as a second argument to the useEffect Hook.",["950"],"no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'IntervalsCountDisplay' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'Redirect' is defined but never used.","'styleBlue' is assigned a value but never used.","'setRide_name' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","'ChartLine' is defined but never used.","'Button' is assigned a value but never used.","'showModal' is assigned a value but never used.","'graphData' is assigned a value but never used.","'setGraphData' is assigned a value but never used.","'selectedFav' is assigned a value but never used.","'setSelectedFav' is assigned a value but never used.","'favStored' is assigned a value but never used.","'setFavStored' is assigned a value but never used.","'openModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFavGraph'. Either include it or remove the dependency array.","ArrayExpression",["951"],"'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'Axios' is defined but never used.","'styleLight' is assigned a value but never used.","'Form' is assigned a value but never used.","no-native-reassign",["952"],"no-negated-in-lhs",["953"],["954"],["955"],"'setStatList' is assigned a value but never used.","'MdSignalCellularConnectedNoInternet4Bar' is defined but never used.","'setRideList' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute",["956"],{"desc":"957","fix":"958"},{"desc":"959","fix":"960"},{"desc":"961","fix":"962"},"no-global-assign","no-unsafe-negation",{"desc":"959","fix":"963"},{"desc":"957","fix":"964"},{"desc":"961","fix":"965"},"Add dependencies array: [props.location.ride_name]",{"range":"966","text":"967"},"Add dependencies array: [getAttractions, props.location.ride_name]",{"range":"968","text":"969"},"Update the dependencies array to be: [getFavGraph]",{"range":"970","text":"971"},{"range":"972","text":"969"},{"range":"973","text":"967"},{"range":"974","text":"971"},[4464,4464],", [props.location.ride_name]",[8113,8113],", [getAttractions, props.location.ride_name]",[3011,3013],"[getFavGraph]",[8107,8107],[4458,4458],[3005,3007]]