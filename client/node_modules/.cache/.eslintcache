[{"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/index.js":"1","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/reportWebVitals.js":"2","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/App.js":"3","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/fire.js":"4","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/andon.js":"5","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/weather.js":"6","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/main.js":"7","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/attraction.js":"8","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/createpage.js":"9","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/editpage.js":"10","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/interval.js":"11","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/home.js":"12","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/rideInfo.js":"13","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/deletepage.js":"14","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/newAttraction.js":"15","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/graph.js":"16","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/historical.js":"17","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/login.js":"18","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/QuickToolsMain.js":"19","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainMiniAndon.js":"20","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainParkSection.js":"21","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainWeatherRadar.js":"22","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/General/Navbar.js":"23","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainCodeMenu.js":"24","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainGraphDisplay.js":"25","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/ParkwideIntervals.js":"26","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/BasicInfo.js":"27","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/IntervalsCountDisplay.js":"28","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js":"29","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/FileUpload/FileUpload.js":"30","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/QuickToolsGraph.js":"31","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/MiniGraph.js":"32","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/Options.js":"33","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/CollectedData.js":"34","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/QuickToolsPanel.js":"35","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/General/Bannerbar.js":"36","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/RideCheck.js":"37","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/AttractionManagerTable.js":"38","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/GraphUnits.js":"39","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/ChartLine.js":"40","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/FavoriteBar.js":"41","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/AttractionManagerTitle.js":"42","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/StatCheck.js":"43","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/DayCheck.js":"44","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/MapEnable.js":"45","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainInfoDisplay.js":"46","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainRidePerecentChange.js":"47","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/SubIntervals.js":"48","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainDownTime.js":"49","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/QuickToolsSummary.js":"50","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionModal.js":"51","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/FileUpload/Progress.js":"52","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/ParkwideModal.js":"53","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/globalStyles.js":"54"},{"size":479,"mtime":1618846707677,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":1618846707679,"results":"57","hashOfConfig":"56"},{"size":2066,"mtime":1618846707669,"results":"58","hashOfConfig":"56"},{"size":521,"mtime":1618846707677,"results":"59","hashOfConfig":"56"},{"size":327,"mtime":1618846707677,"results":"60","hashOfConfig":"56"},{"size":307,"mtime":1618846707679,"results":"61","hashOfConfig":"56"},{"size":1266,"mtime":1618846707679,"results":"62","hashOfConfig":"56"},{"size":351,"mtime":1618846707677,"results":"63","hashOfConfig":"56"},{"size":13429,"mtime":1618846707678,"results":"64","hashOfConfig":"56"},{"size":18865,"mtime":1618846707678,"results":"65","hashOfConfig":"56"},{"size":885,"mtime":1618846707678,"results":"66","hashOfConfig":"56"},{"size":612,"mtime":1618846707678,"results":"67","hashOfConfig":"56"},{"size":1695,"mtime":1618849398835,"results":"68","hashOfConfig":"56"},{"size":14252,"mtime":1618846707678,"results":"69","hashOfConfig":"56"},{"size":723,"mtime":1618846707679,"results":"70","hashOfConfig":"56"},{"size":2221,"mtime":1618846707678,"results":"71","hashOfConfig":"56"},{"size":341,"mtime":1618846707678,"results":"72","hashOfConfig":"56"},{"size":2055,"mtime":1618853523146,"results":"73","hashOfConfig":"56"},{"size":1612,"mtime":1618846707675,"results":"74","hashOfConfig":"56"},{"size":516,"mtime":1618846707675,"results":"75","hashOfConfig":"56"},{"size":558,"mtime":1618846707675,"results":"76","hashOfConfig":"56"},{"size":580,"mtime":1618846707675,"results":"77","hashOfConfig":"56"},{"size":1815,"mtime":1618846707670,"results":"78","hashOfConfig":"56"},{"size":952,"mtime":1618846707674,"results":"79","hashOfConfig":"56"},{"size":570,"mtime":1618846707674,"results":"80","hashOfConfig":"56"},{"size":4101,"mtime":1620584591555,"results":"81","hashOfConfig":"56"},{"size":5102,"mtime":1618849457588,"results":"82","hashOfConfig":"56"},{"size":2632,"mtime":1618846707673,"results":"83","hashOfConfig":"56"},{"size":5936,"mtime":1620532811860,"results":"84","hashOfConfig":"56"},{"size":2265,"mtime":1618846707669,"results":"85","hashOfConfig":"56"},{"size":1697,"mtime":1618846707676,"results":"86","hashOfConfig":"56"},{"size":346,"mtime":1618846707676,"results":"87","hashOfConfig":"56"},{"size":4001,"mtime":1618846707676,"results":"88","hashOfConfig":"56"},{"size":6853,"mtime":1618846707676,"results":"89","hashOfConfig":"56"},{"size":1722,"mtime":1618846707675,"results":"90","hashOfConfig":"56"},{"size":2096,"mtime":1618846707669,"results":"91","hashOfConfig":"56"},{"size":2092,"mtime":1618846707673,"results":"92","hashOfConfig":"56"},{"size":5615,"mtime":1618849426032,"results":"93","hashOfConfig":"56"},{"size":3177,"mtime":1618846707672,"results":"94","hashOfConfig":"56"},{"size":1283,"mtime":1618846707671,"results":"95","hashOfConfig":"56"},{"size":1224,"mtime":1618846707672,"results":"96","hashOfConfig":"56"},{"size":507,"mtime":1618846707675,"results":"97","hashOfConfig":"56"},{"size":2250,"mtime":1618846707673,"results":"98","hashOfConfig":"56"},{"size":2212,"mtime":1618846707672,"results":"99","hashOfConfig":"56"},{"size":1590,"mtime":1618846707672,"results":"100","hashOfConfig":"56"},{"size":3520,"mtime":1618846707675,"results":"101","hashOfConfig":"56"},{"size":2405,"mtime":1618846707675,"results":"102","hashOfConfig":"56"},{"size":1681,"mtime":1618846707676,"results":"103","hashOfConfig":"56"},{"size":571,"mtime":1618846707674,"results":"104","hashOfConfig":"56"},{"size":1769,"mtime":1618846707672,"results":"105","hashOfConfig":"56"},{"size":6784,"mtime":1620530773797,"results":"106","hashOfConfig":"56"},{"size":448,"mtime":1618846707669,"results":"107","hashOfConfig":"56"},{"size":6650,"mtime":1620525369179,"results":"108","hashOfConfig":"56"},{"size":211,"mtime":1618846707677,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"11cl81g",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/index.js",[],["240","241"],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/reportWebVitals.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/App.js",["242","243"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Home from './pages/home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n    { this.state.user ? (       <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/home' component={Home}/>\n      </Switch> ) : ( <Login/> ) }\n\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;\n","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/fire.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/andon.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/weather.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/main.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/attraction.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/createpage.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport FileUpload from '../components/FileUpload/FileUpload'; \nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const CreateLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 660px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 615px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  text-align: center;\n  border-bottom: 2px solid;\n  border-right: 2px solid;\n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 40%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    width: 30%;\n    height: 40%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 357px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst CreateButton = styled.button`\n    padding-right: 40%;\n    padding-left: 40%;\n    height: 8%;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function CreatePage() {\n\n\n//states\n//for getting attraction \nconst [ride_name, setRide_name] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n\n//for getting safety critcal information\nconst [maxWind, setMaxWind] = useState('');\nconst [minTemp, setMinTemp] = useState('');\nconst [powerRedundancy, setPowerRedundancy] = useState('');\nconst [numGates, setNumGates] = useState('');\n\n//for getting phone information\nconst [ridePrimary, setRidePrimary] = useState('');\nconst [rideSecondary, setRideSecondary] = useState('');\nconst [rideTertiary, setRideTertiary] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n\n\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\nconst submitAttraction = () =>{\n  Axios.post('http://localhost:3001/addAttraction', {\n    ride_name: ride_name,\n    dailyOpening: dailyOpening,\n    dailyClosing: dailyClosing,\n    theoryCapacity: theoryCapacity,\n    targetCapacity: targetCapacity,\n    minVehicles: minVehicles,\n    maxVehicles: maxVehicles,\n    maxSeats: maxSeats,\n    minStaff: minStaff,\n    maxStaff: maxStaff,\n    parkSection: parkSection,\n    weatherCode: weatherCode,\n    rideType: rideType,\n    maxWind: maxWind,\n    minTemp, minTemp,\n    powerRedundancy, powerRedundancy,\n    numGates, numGates,\n    ridePrimary, ridePrimary,\n    rideSecondary, rideSecondary,\n    rideTertiary, rideTertiary\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n    console.log(res); //response\n    setAttractionList(res.data);\n  });\n}\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <CreateBar> Create a new Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/CreatePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/CreatePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/CreatePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n    <EditBorder>\n      <InfoBar> Basic Information </InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n        <tr>\n        <td>Name</td>\n        <td>                 \n                <input type='text' name='ride_name' onChange={(e) => {\n                  setRide_name(e.target.value);\n                }}></input> </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n              <input type='text' name='dailyOpening' onChange={(e) => {\n                        setDailyOpening(e.target.value);\n                      }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n            <input type='text' name='dailyClosing' onChange={(e) => {\n                      setDailyClosing(e.target.value);\n                    }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n            <input type='number' name='theoryCapacity' onChange={(e) => {\n                          setTheoryCapacity(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n            <input type='number' name='targetCapcity' onChange={(e) => {\n                          setTargetCapacity(e.target.value);\n                        }}></input>  \n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Vehicles</td>\n        <th>\n            <input type='number' name='maxVehicles' onChange={(e) => {\n                          setMaxVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Vehicles</td>\n        <th>\n            <input type='number' name='minVehicles' onChange={(e) => {\n                          setMinVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n            <input type='number' name='maxSeats' onChange={(e) => {\n                          setMaxSeats(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Employees</td>\n        <th>\n            <input type='number' name='maxStaff' onChange={(e) => {\n                          setMaxStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Employees</td>\n        <th>\n            <input type='number' name='minStaff' onChange={(e) => {\n                          setMinStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n              <input type='text' name='parkSection' onChange={(e) => {\n                            setParkSection(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n\n\n        <tr>\n        <td>Type</td>\n        <th>\n            <input type='text' name='rideType' onChange={(e) => {\n                          setRideType(e.target.value);\n              }}></input>\n        </th>\n        </tr>\n        \n        </tbody>\n\n        </table>\n        <CreateButton>\n        <CreateLink to='/newAttraction' onClick={() => {\n            window.alert(`The ride: ${ride_name} has been created`)\n            submitAttraction();\n            setTimeout(function(){\n              window.location.reload(); \n          }, 0.1);\n        }}>Create Attraction</CreateLink></CreateButton>\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n    <Upload>\n        <FileUpload />  \n    </Upload>\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>\n                        <input type='text' name='weatherCode' onChange={(e) => {\n                          setWeatherCode(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>\n                        <input type='text' name='maxWind' onChange={(e) => {\n                          setMaxWind(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>\n                        <input type='text' name='minTemp' onChange={(e) => {\n                          setMinTemp(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>\n                        <input type='text' name='powerRedundancy' onChange={(e) => {\n                          setPowerRedundancy(e.target.value);\n                        }}></input>\n\n            </td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>              \n                        <input type='text' name='numGates' onChange={(e) => {\n                          setNumGates(e.target.value);\n                        }}></input>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>\n                      <input type='text' name='ridePrimary' onChange={(e) => {\n                          setRidePrimary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>\n                        <input type='text' name='rideSecondary' onChange={(e) => {\n                          setRideSecondary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>\n                        <input type='text' name='rideTeriary' onChange={(e) => {\n                            setRideTertiary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/editpage.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n`\n\nconst RideSelect = styled.select`\n    align: right;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function EditPage() {\n\n    //states\nconst [ride_name, setRideName] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n//for the drop down menu\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n      }).catch(err => console.log(err));\n      }\n\n\nconst editAttraction = () =>{\n  Axios.put('http://localhost:3001/editAttraction', {\n                ride_name: ride_name,\n                dailyOpening: dailyOpening,\n                dailyClosing: dailyClosing,\n                theoryCapacity: theoryCapacity,\n                targetCapacity: targetCapacity,\n                minVehicles: minVehicles,\n                maxVehicles: maxVehicles,\n                maxSeats: maxSeats,\n                minStaff: minStaff,\n                maxStaff: maxStaff,\n                parkSection: parkSection,\n                weatherCode: weatherCode,\n                rideType: rideType,\n\n                rideSelect: setRideSelect\n                \n                }).then(() =>{\n                  alert('successful insert');\n\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n              window.location.href='/newAttraction';\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    {useEffect(() =>{\n      {window.addEventListener('load', getAttractions())}\n    })}\n    <OuterBorder>\n    <CreateBar> Edit an Attraction\n\n          <Nav>\n         <NavMenu>\n             <NavLink to='/EditPage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/EditPage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/EditPage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}>\n                        <option>Select Attraction</option>\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n\n          </RideSelect>\n    <EditBorder>\n\n    <InfoBar> Basic Information</InfoBar>\n\n\n\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          <tr>\n          <td>Name</td>\n          <td>          \n\n              {attractionList.map((val, key) => {\n                    var ride_name;\n                    if (rideSelect == val.ride_name){\n                        ride_name = val.ride_name;\n                        return (\n                          <> \n                            <input type='text' name='ride_name' placeHolder={ride_name} onChange={(e) => {\n                                setRideName(e.target.value);\n                              }}\n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n\n          </td>\n          </tr>\n\n          <tr>\n          <td>Daily Opening</td>\n          <th> \n            \n              \n              {attractionList.map((val, key) => {\n                var dailyOpening;\n                if (rideSelect == val.ride_name){\n                    dailyOpening = val.dailyOpening;\n                    return (\n                      <> \n                        <input type='text' name='dailyOpening' placeHolder={dailyOpening} onChange={(e) => {\n                            setDailyOpening(e.target.value);\n                          }}\n                        ></input>  \n                      </>\n                    );\n                }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Daily Closing</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                    var dailyClosing;\n                    if (rideSelect == val.ride_name){\n                        dailyClosing = val.dailyClosing;\n                        return (\n                          <> \n                            <input type='text' name='dailyClosing' placeHolder={dailyClosing} onChange={(e) => {\n                                setDailyClosing(e.target.value);\n                              }}\n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Theoretical Capacity</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                        var theoryCapacity;\n                        if (rideSelect == val.ride_name){\n                            theoryCapacity = val.theoryCapacity;\n                            return (\n                              <> \n                                <input type='text' name='theoryCapacity' placeHolder={theoryCapacity} onChange={(e) => {\n                                    setTheoryCapacity(e.target.value);\n                                  }}\n                                ></input>  \n                              </>\n                            );\n                        }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Target Capacity</td>\n          <th> \n\n            {attractionList.map((val, key) => {\n                      var targetCapacity;\n                      if (rideSelect == val.ride_name){\n                          targetCapacity = val.targetCapacity;\n                          return (\n                            <> \n                              <input type='text' name='targetCapacity' placeHolder={targetCapacity} onChange={(e) => {\n                                  setTargetCapacity(e.target.value);\n                                }}\n                              ></input>  \n                            </>\n                          );\n                      }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxVehicles;\n                          if (rideSelect == val.ride_name){\n                              maxVehicles = val.maxVehicles;\n                              return (\n                                <> \n                                  <input type='text' name='maxVehicles' placeHolder={maxVehicles} onChange={(e) => {\n                                      setMaxVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minVehicles;\n                          if (rideSelect == val.ride_name){\n                              minVehicles = val.minVehicles;\n                              return (\n                                <> \n                                  <input type='text' name='minVehicle' placeHolder={minVehicles} onChange={(e) => {\n                                      setMinVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Seats per Vehicle</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxSeats;\n                          if (rideSelect == val.ride_name){\n                              maxSeats = val.maxSeats;\n                              return (\n                                <> \n                                  <input type='text' name='maxSeats' placeHolder={maxSeats} onChange={(e) => {\n                                      setMaxSeats(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxStaff;\n                          if (rideSelect == val.ride_name){\n                              maxStaff = val.maxStaff;\n                              return (\n                                <> \n                                  <input type='text' name='maxStaff' placeHolder={maxStaff} onChange={(e) => {\n                                      setMaxStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minStaff;\n                          if (rideSelect == val.ride_name){\n                              minStaff = val.minStaff;\n                              return (\n                                <> \n                                  <input type='text' name='minStaff' placeHolder={minStaff} onChange={(e) => {\n                                      setMinStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Park Section</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var parkSection;\n                          if (rideSelect == val.ride_name){\n                              parkSection = val.parkSection;\n                              return (\n                                <> \n                                  <input type='text' name='parkSection' placeHolder={parkSection} onChange={(e) => {\n                                      setParkSection(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Weather Code</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var weatherCode;\n                          if (rideSelect == val.ride_name){\n                              weatherCode = val.weatherCode;\n                              return (\n                                <> \n                                  <input type='text' name='weatherCode' placeHolder={weatherCode} onChange={(e) => {\n                                      setWeatherCode(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Type</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var rideType;\n                          if (rideSelect == val.ride_name){\n                              rideType = val.rideType;\n                              return (\n                                <> \n                                  <input type='text' name='rideType' placeHolder={rideType} onChange={(e) => {\n                                      setRideType(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          </tbody>\n\n        <EditButton onClick={(editAttraction)}>Edit Attraction</EditButton>\n\n        </table>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n      <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/interval.js",["290"],"import React from 'react'\nimport QuickToolsMain from '../components/Main/QuickToolsMain'\nimport IntervalsCountDisplay from '../components/Interval/IntervalsCountDisplay'\nimport Attraction from '../components/Interval/AttractionIntervals'\nimport ParkwideIntervals from '../components/Interval/ParkwideIntervals'\nimport MainCodeMenu, { MainCodeContainer } from '../components/Main/MainCodeMenu'\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nconst Interval = () => {\n    return (\n        <>  \n            <Navbar/>\n            <Banner/>\n            <QuickToolsMain></QuickToolsMain>\n            <MainCodeMenu></MainCodeMenu>\n            <IntervalsCountDisplay></IntervalsCountDisplay>\n            <Attraction></Attraction>\n            <ParkwideIntervals></ParkwideIntervals>\n        </>\n      \n      );\n}\n\nexport default Interval","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/home.js",["291"],"import React from 'react';\nimport fire from '../fire';\nimport { Redirect } from \"react-router\";\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 100px;\n`;\n\nclass Home extends React.Component {\n\n  logout() {\n    fire.auth().signOut().then(function() {\n        console.log('Signed Out');\n      }, function(error) {\n        console.error('Sign Out Error', error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div style={{textAlign: 'center'}}>\n        <Button onClick = {this.logout}>Logout</Button>\n      </div>\n    )\n  }\n}\n\nexport default Home;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/rideInfo.js",["292","293","294","295","296","297"],"\nimport React, { useState, useRef, useEffect, useCallback, Component } from 'react';\nimport BasicInfo from '../components/RideInfo/BasicInfo';\nimport CollectedData from '../components/RideInfo/CollectedData';\nimport QuickToolsGraph from '../components/RideInfo/QuickToolsGraph';\nimport Interval from '../components/RideInfo/SubIntervals';\nimport Options from '../components/RideInfo/Options';\nimport Graph from '../components/RideInfo/MiniGraph';\n\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\n\nconst RideSelect = styled.select`\n    align: right;\n`\n\n// //recieve data from backend to display\n// const GetAttractions = () => {\n\n  \n//   //console.log(res.data)\n//   useEffect(() => {\n      \n//       Axios.get('http://localhost:3001/getAttraction').then(res => {\n//       setAttractionList(res.data);\n//       console.log(res.data)\n//       }).catch(err => console.log(err));\n//       }, [])\n// }\n\n\nclass RideInfo extends Component {\n    \n\n    render () {\n\n    return (\n        <>\n\n\n        <BasicInfo ride_name={this.props.location.ride_name.ride}\n                   parkSection={this.props.location.parkSection}\n                   rideModel={this.props.location.rideModel}\n                   maxVehicles={this.props.location.maxVehicles}\n                   minVehicles={this.props.location.minVehicles}\n                   maxStaff={this.props.location.maxStaff}\n                   maxSeats={this.props.location.maxSeats}\n        ></BasicInfo>\n        <CollectedData></CollectedData>\n        <QuickToolsGraph></QuickToolsGraph>\n        <Interval> </Interval>\n        <Options></Options> \n        <Graph></Graph>\n        \n        </>\n      );\n    }\n}\n\nexport default RideInfo","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/deletepage.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  border-bottom: 25px solid lightgray;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n\nexport const DeleteLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\npadding-right: 40%;\npadding-left: 40%;\n`\n\nconst RideSelect = styled.select`\n    align: right;\n`\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage() {\n\n\n\n  //states\n  const [ride_name, setRide_name] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\n\nconst deleteAttraction = (ride_name) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${ride_name}`);\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/DeletePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/DeletePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/DeletePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </DeleteBar>\n    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}>\n                        <option>Select Attraction</option>\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n\n    </RideSelect>\n    <EditBorder>\n    <InfoBar> Basic Information</InfoBar>\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n\n        <tr>\n        <td>Name</td>\n        <td>                 \n        \n          <label>{attractionList.map((val, key) => {\n                var ride_name;\n                if (rideSelect == val.ride_name){\n                    ride_name = val.ride_name;\n                }\n              return (\n                  <> \n                    {ride_name}   \n                  </>\n              );\n              })}\n            </label>\n\n        </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n           \n          <label>{attractionList.map((val, key) => {\n              var dailyOpening;\n              if (rideSelect == val.ride_name){\n                  dailyOpening = val.dailyOpening;\n              }\n            return (\n                <> \n                  {dailyOpening}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n              }\n            return (\n                <> \n                  {theoryCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var targetCapacity;\n              if (rideSelect == val.ride_name){\n                  targetCapacity = val.targetCapacity;\n              }\n            return (\n                <> \n                  {targetCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var maxVehicles;\n              if (rideSelect == val.ride_name){\n                  maxVehicles = val.maxVehicles;\n              }\n            return (\n                <> \n                  {maxVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var minVehicles;\n              if (rideSelect == val.ride_name){\n                  minVehicles = val.minVehicles;\n              }\n            return (\n                <> \n                  {minVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n\n           <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var maxStaff;\n              if (rideSelect == val.ride_name){\n                  maxStaff = val.maxStaff;\n              }\n            return (\n                <> \n                  {maxStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var minStaff;\n              if (rideSelect == val.ride_name){\n                  minStaff = val.minStaff;\n              }\n            return (\n                <> \n                  {minStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var parkSection;\n              if (rideSelect == val.ride_name){\n                  parkSection = val.parkSection;\n              }\n            return (\n                <> \n                  {parkSection}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n          \n        <label>{attractionList.map((val, key) => {\n              var weatherCode;\n              if (rideSelect == val.ride_name){\n                  weatherCode = val.weatherCode;\n              }\n            return (\n                <> \n                  {weatherCode}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Type</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var rideType;\n              if (rideSelect == val.ride_name){\n                  rideType = val.rideType;\n              }\n            return (\n                <> \n                  {rideType}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n      \n        </tbody>\n\n          <DeleteButton onClick={() => {\n            deleteAttraction(rideSelect) //ride selected in drop down menu\n            window.alert(`The ride: ${ride_name} has been deleted`);\n            window.location.href='/newAttraction';\n          }}>Delete Attraction</DeleteButton>\n\n        </table>\n\n\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/newAttraction.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/graph.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/historical.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/pages/login.js",["342","343"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"password\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/QuickToolsMain.js",["344","345"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainMiniAndon.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainParkSection.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainWeatherRadar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/General/Navbar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainCodeMenu.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainGraphDisplay.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/ParkwideIntervals.js",["346","347","348","349","350","351","352","353","354","355","356","357","358"],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/BasicInfo.js",["359","360","361","362","363","364","365","366","367","368","369","370","371"],"import styled from 'styled-components';\nimport React, { useState, useRef, useEffect, useCallback, Component } from 'react';\nimport Axios from 'axios'\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 22%;\nheight: 600px;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nmargin: 0px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 600px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 40px;\nborder-bottom: 1px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Label1 = styled.div`\ntext-align: center;\nfont-size: 150%;\nalign-content: center;\nborder-bottom: 2px solid black;\nfont-weight: bold;\n`\n\nexport const Label2 = styled.div`\ntext-align: center;\nfont-size: 125%;\nalign-content: center;\nborder-bottom: 2px solid black;\n`\n\nconst RideSelect = styled.select`\n    align: right;\n`\nconst styleGray = {backgroundColor : '#AFAFAF'};\n\n\n\n\n\n//For some reason you have to put useState in a React component function\n// you cant put use state variable in a class or define them at the top level\nconst RideData = (props) => {\n    //for the drop down menu\n    const [rideSelect, setRideSelect] = useState('');\n    const [ride_name, setRideName] = useState('');\n    const [parkSection, setParkSection] = useState('');\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n    var ridePassed = props.ride;\n\n\n\n    return (\n\n        <td>{attractionList.map((val, key) => {\n            var parkSection;\n            if (ride_name == ridePassed){\n                parkSection = val.parkSection;\n                console.log(parkSection)\n            }\n          return (\n              <> \n              \n                <p>{console.log(parkSection)}</p> \n              </>\n          );\n          })}\n        </td>\n    );\n}\n\nclass BasicInfo extends Component {\n\n\n\n    render () {\n    return (\n        <Border>\n            \n            <Label2>Basic Information</Label2>\n            <InfoContainer>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Property</th>\n                            <th scope=\"col\">Value</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n\n                        \n                    \n                        <td>Name</td>   <td>   {this.props.ride_name}  </td>\n                    </tr>\n\n                    \n                    <tr>\n                        <td>Location</td>   <td>  {this.props.parkSection.parkSection}  </td>\n                    </tr>\n                    <tr>\n                        \n                        <td>Model</td>   <td>   {this.props.rideModel.rideModel}   </td>\n                    </tr>\n                    <tr>\n                        <td>Theoretical Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Target Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Vehicles</td>   <td>   {this.props.maxVehicles.maxVehicles}     </td>\n                    </tr>\n                    <tr>\n                        <td>Min Vehicles</td>   <td> {this.props.minVehicles.minVehicles}    </td>\n                    </tr>\n                    <tr>\n                        <td>Max Seats</td>   <td> {this.props.maxSeats.maxSeats}  </td>\n                    </tr>\n                    <tr>\n                        <td>Primary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Secondary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Tertiary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Staff</td>   <td> {this.props.maxStaff.maxStaff}    </td>\n                    </tr>\n                    <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     \n                    </tbody>\n\n                </table>\n            </InfoContainer>    \n \n        </Border>\n    )\n    }\n}\n\nexport default BasicInfo","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/IntervalsCountDisplay.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js",["372","373","374","375","376","377","378","379","380","381","382","383"],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/FileUpload/FileUpload.js",["384","385","386","387"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/QuickToolsGraph.js",["388","389"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\n background: transparent;\n border-left: 2px solid black;\n border-right: 2px solid black;\n border-bottom: 2px solid black;\n position: absolute;\n right: 0px;\n width: 16.5%;\n height: 210px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 16.66%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsGraph = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Daily Summary\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                    Weekly Summary\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                    Graphs To Review\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                    Significant Changes\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                    Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsGraph\n","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/MiniGraph.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/Options.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/CollectedData.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/QuickToolsPanel.js",["390","391","392","393"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nposition: absolute;\n  right: 0px;\n  width: 11.5%;\n  height: 250px;\n  margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding: 3px;\nfont-size: 20px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsPanel = () => {\nconst [showModal, setShowModal] = useState(false);\n\nconst openModal = () => {\nsetShowModal(prev => !prev);\n};\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <NavLink to = '/CreatePage'>\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\n                    </NavLink>\n\n                    <NavLink to = '/EditPage'>\n                    <QuickToolsButtons> Edit Attraction \n                    </QuickToolsButtons>\n                    </NavLink>\n\n                    <NavLink to = '/DeletePage'>\n                    <QuickToolsButtons>\n                            Delete Attraction\n                    </QuickToolsButtons>\n                    </NavLink>\n\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsPanel","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/General/Bannerbar.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/RideCheck.js",["394"],"import React, { useState, useEffect } from \"react\";\n\nfunction RideCheck() {\n  const [rideState, setRideState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let rideState = [\n      { id: 1, ridename: \"The Joker\"},\n      { id: 2, ridename: \"Superman\"},\n    ];\n\n    setRideState(\n      rideState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          ridename: d.ridename,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setRideState(\n                    rideState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n            </tr>\n          {rideState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.ridename}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setRideState(\n                      rideState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default RideCheck;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/AttractionManagerTable.js",["395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 600px;\n`;\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\nborder-top: 2px solid black;\noverflow-y: scroll;\noverflow: hidden;\n`\nexport const TH = styled.th`\nwidth: 7.69%;\nheight: 10px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 7.69%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\n\n\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    const [phoneList, setPhoneList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getPhoneInfo').then(res => {\n                setPhoneList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <Table className=\"sortable\">\n                    <TR>\n                        \n                        <TH>Ride Name</TH>\n                        <TH>Daily Opening</TH>\n                        <TH>Daily Closing</TH>\n                        <TH>Theoretical Capacity</TH>\n                        <TH>Target Capacity</TH>\n                        <TH>Minimum Vehicles</TH>\n                        <TH>Maximum Vehicles</TH>\n                        <TH>Maximum Seats</TH>\n                        <TH>Minimum Staff</TH>\n                        <TH>Maximum Staff</TH>\n                        <TH>Park Section</TH>\n                        <TH>Weather Code</TH>\n                        <TH>Type</TH>\n                    </TR>\n\n                        {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var parkSection = val.parkSection;\n                        var rideModel = val.rideType;\n                        var maxVehicles = val.maxVehicles;\n                        var minVehicles = val.minVehicles;\n                        var maxStaff = val.maxStaff;\n                        var maxSeats = val.maxSeats;\n\n                        return (\n                            <>\n                            <TR>\n                            <TD><NavLink to = {{\n                                pathname:'/rideInfo',\n                                ride_name: {ride},\n                                parkSection: {parkSection},\n                                rideModel: {rideModel},\n                                maxVehicles: {maxVehicles},\n                                minVehicles: {minVehicles},\n                                maxStaff: {maxStaff},\n                                maxSeats: {maxSeats}\n\n                            }}>{val.ride_name}</NavLink></TD> \n                            <TD>{val.dailyOpening}</TD>\n                            <TD>{val.dailyClosing}</TD>\n                            <TD>{val.theoryCapacity}</TD>\n                            <TD>{val.targetCapacity}</TD>\n                            <TD>{val.minVehicles}</TD>\n                            <TD>{val.maxVehicles}</TD>\n                            <TD>{val.maxSeats}</TD>\n                            <TD>{val.minStaff}</TD>\n                            <TD>{val.maxStaff}</TD>\n                            <TD>{val.parkSection}</TD>\n                            <TD>{val.weatherCode}</TD>\n                            <TD>{val.rideType}</TD>\n                            </TR>\n                            </>\n                        );\n                        })}\n\n            </Table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/GraphUnits.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/ChartLine.js",["428"],"import React, { Component } from 'react';\nimport LineChart from 'react-linechart';\n\nfunction ChartLine() {\n    const data = [\n        {\t\t\t\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n                { x: 1, y: 64 },\n                { x: 2, y: 61 },\n                { x: 3, y: 64 },\n                { x: 4, y: 62 },\n                { x: 5, y: 64 },\n                { x: 6, y: 60 },\n                { x: 7, y: 58 },\n                { x: 8, y: 59 },\n                { x: 9, y: 53 },\n                { x: 10, y: 54 },\n                { x: 11, y: 61 },\n                { x: 12, y: 60 },\n                { x: 13, y: 55 },\n                { x: 14, y: 60 },\n                { x: 15, y: 56 },\n                { x: 16, y: 60 },\n                { x: 17, y: 59.5 },\n                { x: 18, y: 63 },\n                { x: 19, y: 58 },\n                { x: 20, y: 54 },\n                { x: 21, y: 59 },\n                { x: 22, y: 64 },\n                { x: 23, y: 59 }\n            ]\n        }\n    ];\n    return (\n        <div>\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine\n","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/FavoriteBar.js",["429","430","431"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nconst FavoriteBar = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n    return (\n        <>\n        <SideNav>\n           <FavButton>My Favorite1</FavButton>\n           <FavButton>My Favorite2 </FavButton>\n           <FavButton>My Favorite3</FavButton>\n           <FavButton>My Favorite4</FavButton>\n           <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/NewAttraction/AttractionManagerTitle.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/StatCheck.js",["432"],"import React, { useState, useEffect } from \"react\";\n\nfunction StatCheck() {\n  const [statState, setStatState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Number of Employees\"},\n      { id: 4, statistic: \"Operating Vehicles\"},\n      { id: 5, statistic: \"Downtime Events\"},\n    ];\n\n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setStatState(\n                    statState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default StatCheck;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/DayCheck.js",["433"],"import React, { useState, useEffect } from \"react\";\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default DayCheck;","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/MapEnable.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainInfoDisplay.js",["434","435"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainRidePerecentChange.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/RideInfo/SubIntervals.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Main/MainDownTime.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Graph/QuickToolsSummary.js",["436","437","438"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionModal.js",["439","440","441","442"],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/FileUpload/Progress.js",[],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/ParkwideModal.js",["443","444","445","446","447"],"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/globalStyles.js",[],{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","severity":1,"message":"453","line":1,"column":50,"nodeType":"454","messageId":"455","endLine":1,"endColumn":54},{"ruleId":"452","severity":1,"message":"456","line":1,"column":56,"nodeType":"454","messageId":"455","endLine":1,"endColumn":63},{"ruleId":"452","severity":1,"message":"457","line":1,"column":27,"nodeType":"454","messageId":"455","endLine":1,"endColumn":33},{"ruleId":"452","severity":1,"message":"458","line":1,"column":35,"nodeType":"454","messageId":"455","endLine":1,"endColumn":44},{"ruleId":"452","severity":1,"message":"459","line":1,"column":46,"nodeType":"454","messageId":"455","endLine":1,"endColumn":57},{"ruleId":"452","severity":1,"message":"460","line":3,"column":10,"nodeType":"454","messageId":"455","endLine":3,"endColumn":19},{"ruleId":"452","severity":1,"message":"461","line":3,"column":21,"nodeType":"454","messageId":"455","endLine":3,"endColumn":29},{"ruleId":"452","severity":1,"message":"462","line":5,"column":10,"nodeType":"454","messageId":"455","endLine":5,"endColumn":17},{"ruleId":"452","severity":1,"message":"463","line":184,"column":8,"nodeType":"454","messageId":"455","endLine":184,"endColumn":22},{"ruleId":"464","severity":1,"message":"465","line":205,"column":14,"nodeType":"466","messageId":"467","endLine":205,"endColumn":21},{"ruleId":"464","severity":1,"message":"468","line":206,"column":22,"nodeType":"466","messageId":"467","endLine":206,"endColumn":37},{"ruleId":"464","severity":1,"message":"469","line":207,"column":15,"nodeType":"466","messageId":"467","endLine":207,"endColumn":23},{"ruleId":"464","severity":1,"message":"470","line":208,"column":18,"nodeType":"466","messageId":"467","endLine":208,"endColumn":29},{"ruleId":"464","severity":1,"message":"471","line":209,"column":20,"nodeType":"466","messageId":"467","endLine":209,"endColumn":33},{"ruleId":"464","severity":1,"message":"472","line":210,"column":19,"nodeType":"466","messageId":"467","endLine":210,"endColumn":31},{"ruleId":"452","severity":1,"message":"473","line":218,"column":7,"nodeType":"454","messageId":"455","endLine":218,"endColumn":21},{"ruleId":"452","severity":1,"message":"457","line":1,"column":27,"nodeType":"454","messageId":"455","endLine":1,"endColumn":33},{"ruleId":"452","severity":1,"message":"459","line":1,"column":46,"nodeType":"454","messageId":"455","endLine":1,"endColumn":57},{"ruleId":"452","severity":1,"message":"460","line":3,"column":10,"nodeType":"454","messageId":"455","endLine":3,"endColumn":19},{"ruleId":"452","severity":1,"message":"461","line":3,"column":21,"nodeType":"454","messageId":"455","endLine":3,"endColumn":29},{"ruleId":"452","severity":1,"message":"462","line":5,"column":10,"nodeType":"454","messageId":"455","endLine":5,"endColumn":17},{"ruleId":"474","severity":1,"message":"475","line":222,"column":7,"nodeType":"476","messageId":"477","endLine":222,"endColumn":58},{"ruleId":"478","severity":1,"message":"479","line":275,"column":46,"nodeType":"480","messageId":"481","endLine":275,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":277,"column":36,"nodeType":"484","messageId":"467","endLine":277,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":299,"column":46,"nodeType":"480","messageId":"481","endLine":299,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":301,"column":32,"nodeType":"484","messageId":"467","endLine":301,"endColumn":34},{"ruleId":"478","severity":1,"message":"479","line":321,"column":46,"nodeType":"480","messageId":"481","endLine":321,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":323,"column":36,"nodeType":"484","messageId":"467","endLine":323,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":343,"column":46,"nodeType":"480","messageId":"481","endLine":343,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":345,"column":40,"nodeType":"484","messageId":"467","endLine":345,"endColumn":42},{"ruleId":"478","severity":1,"message":"479","line":365,"column":44,"nodeType":"480","messageId":"481","endLine":365,"endColumn":46},{"ruleId":"482","severity":1,"message":"483","line":367,"column":38,"nodeType":"484","messageId":"467","endLine":367,"endColumn":40},{"ruleId":"478","severity":1,"message":"479","line":387,"column":46,"nodeType":"480","messageId":"481","endLine":387,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":389,"column":42,"nodeType":"484","messageId":"467","endLine":389,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":409,"column":46,"nodeType":"480","messageId":"481","endLine":409,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":411,"column":42,"nodeType":"484","messageId":"467","endLine":411,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":431,"column":46,"nodeType":"480","messageId":"481","endLine":431,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":433,"column":42,"nodeType":"484","messageId":"467","endLine":433,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":453,"column":46,"nodeType":"480","messageId":"481","endLine":453,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":455,"column":42,"nodeType":"484","messageId":"467","endLine":455,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":475,"column":46,"nodeType":"480","messageId":"481","endLine":475,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":477,"column":42,"nodeType":"484","messageId":"467","endLine":477,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":497,"column":46,"nodeType":"480","messageId":"481","endLine":497,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":499,"column":42,"nodeType":"484","messageId":"467","endLine":499,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":519,"column":46,"nodeType":"480","messageId":"481","endLine":519,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":521,"column":42,"nodeType":"484","messageId":"467","endLine":521,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":541,"column":46,"nodeType":"480","messageId":"481","endLine":541,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":543,"column":42,"nodeType":"484","messageId":"467","endLine":543,"endColumn":44},{"ruleId":"452","severity":1,"message":"485","line":6,"column":24,"nodeType":"454","messageId":"455","endLine":6,"endColumn":41},{"ruleId":"452","severity":1,"message":"486","line":3,"column":10,"nodeType":"454","messageId":"455","endLine":3,"endColumn":18},{"ruleId":"452","severity":1,"message":"487","line":2,"column":17,"nodeType":"454","messageId":"455","endLine":2,"endColumn":25},{"ruleId":"452","severity":1,"message":"457","line":2,"column":27,"nodeType":"454","messageId":"455","endLine":2,"endColumn":33},{"ruleId":"452","severity":1,"message":"458","line":2,"column":35,"nodeType":"454","messageId":"455","endLine":2,"endColumn":44},{"ruleId":"452","severity":1,"message":"459","line":2,"column":46,"nodeType":"454","messageId":"455","endLine":2,"endColumn":57},{"ruleId":"452","severity":1,"message":"488","line":11,"column":8,"nodeType":"454","messageId":"455","endLine":11,"endColumn":13},{"ruleId":"452","severity":1,"message":"489","line":14,"column":7,"nodeType":"454","messageId":"455","endLine":14,"endColumn":17},{"ruleId":"452","severity":1,"message":"457","line":1,"column":27,"nodeType":"454","messageId":"455","endLine":1,"endColumn":33},{"ruleId":"452","severity":1,"message":"459","line":1,"column":46,"nodeType":"454","messageId":"455","endLine":1,"endColumn":57},{"ruleId":"452","severity":1,"message":"460","line":3,"column":10,"nodeType":"454","messageId":"455","endLine":3,"endColumn":19},{"ruleId":"452","severity":1,"message":"461","line":3,"column":21,"nodeType":"454","messageId":"455","endLine":3,"endColumn":29},{"ruleId":"452","severity":1,"message":"462","line":5,"column":10,"nodeType":"454","messageId":"455","endLine":5,"endColumn":17},{"ruleId":"452","severity":1,"message":"490","line":162,"column":21,"nodeType":"454","messageId":"455","endLine":162,"endColumn":33},{"ruleId":"452","severity":1,"message":"491","line":163,"column":10,"nodeType":"454","messageId":"455","endLine":163,"endColumn":22},{"ruleId":"452","severity":1,"message":"492","line":163,"column":24,"nodeType":"454","messageId":"455","endLine":163,"endColumn":39},{"ruleId":"452","severity":1,"message":"493","line":164,"column":10,"nodeType":"454","messageId":"455","endLine":164,"endColumn":22},{"ruleId":"452","severity":1,"message":"494","line":164,"column":24,"nodeType":"454","messageId":"455","endLine":164,"endColumn":39},{"ruleId":"452","severity":1,"message":"495","line":165,"column":10,"nodeType":"454","messageId":"455","endLine":165,"endColumn":24},{"ruleId":"452","severity":1,"message":"496","line":165,"column":26,"nodeType":"454","messageId":"455","endLine":165,"endColumn":43},{"ruleId":"452","severity":1,"message":"497","line":166,"column":10,"nodeType":"454","messageId":"455","endLine":166,"endColumn":24},{"ruleId":"452","severity":1,"message":"498","line":166,"column":26,"nodeType":"454","messageId":"455","endLine":166,"endColumn":43},{"ruleId":"452","severity":1,"message":"499","line":167,"column":10,"nodeType":"454","messageId":"455","endLine":167,"endColumn":21},{"ruleId":"452","severity":1,"message":"500","line":167,"column":23,"nodeType":"454","messageId":"455","endLine":167,"endColumn":37},{"ruleId":"452","severity":1,"message":"501","line":168,"column":10,"nodeType":"454","messageId":"455","endLine":168,"endColumn":21},{"ruleId":"452","severity":1,"message":"502","line":168,"column":23,"nodeType":"454","messageId":"455","endLine":168,"endColumn":37},{"ruleId":"452","severity":1,"message":"503","line":169,"column":10,"nodeType":"454","messageId":"455","endLine":169,"endColumn":18},{"ruleId":"452","severity":1,"message":"504","line":169,"column":20,"nodeType":"454","messageId":"455","endLine":169,"endColumn":31},{"ruleId":"452","severity":1,"message":"505","line":170,"column":10,"nodeType":"454","messageId":"455","endLine":170,"endColumn":18},{"ruleId":"452","severity":1,"message":"506","line":170,"column":20,"nodeType":"454","messageId":"455","endLine":170,"endColumn":31},{"ruleId":"452","severity":1,"message":"507","line":171,"column":10,"nodeType":"454","messageId":"455","endLine":171,"endColumn":18},{"ruleId":"452","severity":1,"message":"508","line":171,"column":20,"nodeType":"454","messageId":"455","endLine":171,"endColumn":31},{"ruleId":"452","severity":1,"message":"509","line":172,"column":10,"nodeType":"454","messageId":"455","endLine":172,"endColumn":21},{"ruleId":"452","severity":1,"message":"510","line":172,"column":23,"nodeType":"454","messageId":"455","endLine":172,"endColumn":37},{"ruleId":"452","severity":1,"message":"511","line":173,"column":10,"nodeType":"454","messageId":"455","endLine":173,"endColumn":21},{"ruleId":"452","severity":1,"message":"512","line":173,"column":23,"nodeType":"454","messageId":"455","endLine":173,"endColumn":37},{"ruleId":"452","severity":1,"message":"513","line":174,"column":10,"nodeType":"454","messageId":"455","endLine":174,"endColumn":18},{"ruleId":"452","severity":1,"message":"514","line":174,"column":20,"nodeType":"454","messageId":"455","endLine":174,"endColumn":31},{"ruleId":"474","severity":1,"message":"475","line":234,"column":15,"nodeType":"476","messageId":"477","endLine":234,"endColumn":66},{"ruleId":"482","severity":1,"message":"483","line":252,"column":32,"nodeType":"484","messageId":"467","endLine":252,"endColumn":34},{"ruleId":"482","severity":1,"message":"483","line":272,"column":30,"nodeType":"484","messageId":"467","endLine":272,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":292,"column":30,"nodeType":"484","messageId":"467","endLine":292,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":312,"column":30,"nodeType":"484","messageId":"467","endLine":312,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":332,"column":30,"nodeType":"484","messageId":"467","endLine":332,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":352,"column":30,"nodeType":"484","messageId":"467","endLine":352,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":372,"column":30,"nodeType":"484","messageId":"467","endLine":372,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":392,"column":30,"nodeType":"484","messageId":"467","endLine":392,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":412,"column":30,"nodeType":"484","messageId":"467","endLine":412,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":432,"column":30,"nodeType":"484","messageId":"467","endLine":432,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":452,"column":30,"nodeType":"484","messageId":"467","endLine":452,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":472,"column":30,"nodeType":"484","messageId":"467","endLine":472,"endColumn":32},{"ruleId":"482","severity":1,"message":"483","line":492,"column":30,"nodeType":"484","messageId":"467","endLine":492,"endColumn":32},{"ruleId":"452","severity":1,"message":"458","line":1,"column":17,"nodeType":"454","messageId":"455","endLine":1,"endColumn":26},{"ruleId":"452","severity":1,"message":"487","line":1,"column":28,"nodeType":"454","messageId":"455","endLine":1,"endColumn":36},{"ruleId":"452","severity":1,"message":"515","line":38,"column":8,"nodeType":"454","messageId":"455","endLine":38,"endColumn":17},{"ruleId":"452","severity":1,"message":"516","line":40,"column":9,"nodeType":"454","messageId":"455","endLine":40,"endColumn":18},{"ruleId":"452","severity":1,"message":"457","line":6,"column":27,"nodeType":"454","messageId":"455","endLine":6,"endColumn":33},{"ruleId":"452","severity":1,"message":"459","line":6,"column":46,"nodeType":"454","messageId":"455","endLine":6,"endColumn":57},{"ruleId":"452","severity":1,"message":"517","line":100,"column":7,"nodeType":"454","messageId":"455","endLine":100,"endColumn":12},{"ruleId":"452","severity":1,"message":"518","line":129,"column":16,"nodeType":"454","messageId":"455","endLine":129,"endColumn":28},{"ruleId":"452","severity":1,"message":"519","line":129,"column":30,"nodeType":"454","messageId":"455","endLine":129,"endColumn":45},{"ruleId":"452","severity":1,"message":"520","line":130,"column":16,"nodeType":"454","messageId":"455","endLine":130,"endColumn":26},{"ruleId":"452","severity":1,"message":"521","line":130,"column":28,"nodeType":"454","messageId":"455","endLine":130,"endColumn":41},{"ruleId":"452","severity":1,"message":"522","line":131,"column":16,"nodeType":"454","messageId":"455","endLine":131,"endColumn":25},{"ruleId":"452","severity":1,"message":"523","line":131,"column":27,"nodeType":"454","messageId":"455","endLine":131,"endColumn":34},{"ruleId":"452","severity":1,"message":"524","line":132,"column":16,"nodeType":"454","messageId":"455","endLine":132,"endColumn":25},{"ruleId":"452","severity":1,"message":"525","line":132,"column":27,"nodeType":"454","messageId":"455","endLine":132,"endColumn":39},{"ruleId":"452","severity":1,"message":"526","line":133,"column":16,"nodeType":"454","messageId":"455","endLine":133,"endColumn":25},{"ruleId":"452","severity":1,"message":"527","line":133,"column":27,"nodeType":"454","messageId":"455","endLine":133,"endColumn":39},{"ruleId":"452","severity":1,"message":"457","line":2,"column":27,"nodeType":"454","messageId":"455","endLine":2,"endColumn":33},{"ruleId":"452","severity":1,"message":"458","line":2,"column":35,"nodeType":"454","messageId":"455","endLine":2,"endColumn":44},{"ruleId":"452","severity":1,"message":"459","line":2,"column":46,"nodeType":"454","messageId":"455","endLine":2,"endColumn":57},{"ruleId":"452","severity":1,"message":"488","line":3,"column":8,"nodeType":"454","messageId":"455","endLine":3,"endColumn":13},{"ruleId":"452","severity":1,"message":"489","line":75,"column":7,"nodeType":"454","messageId":"455","endLine":75,"endColumn":17},{"ruleId":"452","severity":1,"message":"528","line":86,"column":7,"nodeType":"454","messageId":"455","endLine":86,"endColumn":15},{"ruleId":"452","severity":1,"message":"529","line":88,"column":12,"nodeType":"454","messageId":"455","endLine":88,"endColumn":22},{"ruleId":"452","severity":1,"message":"530","line":88,"column":24,"nodeType":"454","messageId":"455","endLine":88,"endColumn":37},{"ruleId":"452","severity":1,"message":"531","line":89,"column":23,"nodeType":"454","messageId":"455","endLine":89,"endColumn":34},{"ruleId":"452","severity":1,"message":"509","line":90,"column":12,"nodeType":"454","messageId":"455","endLine":90,"endColumn":23},{"ruleId":"452","severity":1,"message":"510","line":90,"column":25,"nodeType":"454","messageId":"455","endLine":90,"endColumn":39},{"ruleId":"452","severity":1,"message":"532","line":93,"column":28,"nodeType":"454","messageId":"455","endLine":93,"endColumn":45},{"ruleId":"482","severity":1,"message":"483","line":104,"column":27,"nodeType":"484","messageId":"467","endLine":104,"endColumn":29},{"ruleId":"452","severity":1,"message":"517","line":104,"column":7,"nodeType":"454","messageId":"455","endLine":104,"endColumn":12},{"ruleId":"452","severity":1,"message":"518","line":135,"column":16,"nodeType":"454","messageId":"455","endLine":135,"endColumn":28},{"ruleId":"452","severity":1,"message":"519","line":135,"column":30,"nodeType":"454","messageId":"455","endLine":135,"endColumn":45},{"ruleId":"452","severity":1,"message":"520","line":136,"column":16,"nodeType":"454","messageId":"455","endLine":136,"endColumn":26},{"ruleId":"452","severity":1,"message":"521","line":136,"column":28,"nodeType":"454","messageId":"455","endLine":136,"endColumn":41},{"ruleId":"452","severity":1,"message":"522","line":137,"column":16,"nodeType":"454","messageId":"455","endLine":137,"endColumn":25},{"ruleId":"452","severity":1,"message":"523","line":137,"column":27,"nodeType":"454","messageId":"455","endLine":137,"endColumn":34},{"ruleId":"452","severity":1,"message":"524","line":138,"column":16,"nodeType":"454","messageId":"455","endLine":138,"endColumn":25},{"ruleId":"452","severity":1,"message":"525","line":138,"column":27,"nodeType":"454","messageId":"455","endLine":138,"endColumn":39},{"ruleId":"452","severity":1,"message":"526","line":139,"column":16,"nodeType":"454","messageId":"455","endLine":139,"endColumn":25},{"ruleId":"452","severity":1,"message":"527","line":139,"column":27,"nodeType":"454","messageId":"455","endLine":139,"endColumn":39},{"ruleId":"533","severity":1,"message":"534","line":208,"column":16,"nodeType":"535","endLine":208,"endColumn":18,"suggestions":"536"},{"ruleId":"452","severity":1,"message":"537","line":3,"column":8,"nodeType":"454","messageId":"455","endLine":3,"endColumn":16},{"ruleId":"452","severity":1,"message":"538","line":8,"column":10,"nodeType":"454","messageId":"455","endLine":8,"endColumn":18},{"ruleId":"452","severity":1,"message":"539","line":10,"column":10,"nodeType":"454","messageId":"455","endLine":10,"endColumn":17},{"ruleId":"452","severity":1,"message":"540","line":11,"column":10,"nodeType":"454","messageId":"455","endLine":11,"endColumn":26},{"ruleId":"452","severity":1,"message":"515","line":37,"column":8,"nodeType":"454","messageId":"455","endLine":37,"endColumn":17},{"ruleId":"452","severity":1,"message":"516","line":39,"column":9,"nodeType":"454","messageId":"455","endLine":39,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":3,"column":19,"nodeType":"454","messageId":"455","endLine":3,"endColumn":23},{"ruleId":"452","severity":1,"message":"541","line":5,"column":7,"nodeType":"454","messageId":"455","endLine":5,"endColumn":13},{"ruleId":"452","severity":1,"message":"515","line":42,"column":8,"nodeType":"454","messageId":"455","endLine":42,"endColumn":17},{"ruleId":"452","severity":1,"message":"516","line":44,"column":7,"nodeType":"454","messageId":"455","endLine":44,"endColumn":16},{"ruleId":"452","severity":1,"message":"542","line":6,"column":9,"nodeType":"454","messageId":"455","endLine":6,"endColumn":19},{"ruleId":"452","severity":1,"message":"457","line":1,"column":27,"nodeType":"454","messageId":"455","endLine":1,"endColumn":33},{"ruleId":"452","severity":1,"message":"459","line":1,"column":46,"nodeType":"454","messageId":"455","endLine":1,"endColumn":57},{"ruleId":"452","severity":1,"message":"453","line":2,"column":19,"nodeType":"454","messageId":"455","endLine":2,"endColumn":23},{"ruleId":"452","severity":1,"message":"460","line":3,"column":10,"nodeType":"454","messageId":"455","endLine":3,"endColumn":19},{"ruleId":"452","severity":1,"message":"461","line":3,"column":21,"nodeType":"454","messageId":"455","endLine":3,"endColumn":29},{"ruleId":"452","severity":1,"message":"462","line":5,"column":10,"nodeType":"454","messageId":"455","endLine":5,"endColumn":17},{"ruleId":"452","severity":1,"message":"543","line":65,"column":12,"nodeType":"454","messageId":"455","endLine":65,"endColumn":21},{"ruleId":"452","severity":1,"message":"490","line":65,"column":23,"nodeType":"454","messageId":"455","endLine":65,"endColumn":35},{"ruleId":"452","severity":1,"message":"491","line":66,"column":12,"nodeType":"454","messageId":"455","endLine":66,"endColumn":24},{"ruleId":"452","severity":1,"message":"492","line":66,"column":26,"nodeType":"454","messageId":"455","endLine":66,"endColumn":41},{"ruleId":"452","severity":1,"message":"493","line":67,"column":12,"nodeType":"454","messageId":"455","endLine":67,"endColumn":24},{"ruleId":"452","severity":1,"message":"494","line":67,"column":26,"nodeType":"454","messageId":"455","endLine":67,"endColumn":41},{"ruleId":"452","severity":1,"message":"495","line":68,"column":12,"nodeType":"454","messageId":"455","endLine":68,"endColumn":26},{"ruleId":"452","severity":1,"message":"496","line":68,"column":28,"nodeType":"454","messageId":"455","endLine":68,"endColumn":45},{"ruleId":"452","severity":1,"message":"497","line":69,"column":12,"nodeType":"454","messageId":"455","endLine":69,"endColumn":26},{"ruleId":"452","severity":1,"message":"498","line":69,"column":28,"nodeType":"454","messageId":"455","endLine":69,"endColumn":45},{"ruleId":"452","severity":1,"message":"499","line":70,"column":12,"nodeType":"454","messageId":"455","endLine":70,"endColumn":23},{"ruleId":"452","severity":1,"message":"500","line":70,"column":25,"nodeType":"454","messageId":"455","endLine":70,"endColumn":39},{"ruleId":"452","severity":1,"message":"501","line":71,"column":12,"nodeType":"454","messageId":"455","endLine":71,"endColumn":23},{"ruleId":"452","severity":1,"message":"502","line":71,"column":25,"nodeType":"454","messageId":"455","endLine":71,"endColumn":39},{"ruleId":"452","severity":1,"message":"503","line":72,"column":12,"nodeType":"454","messageId":"455","endLine":72,"endColumn":20},{"ruleId":"452","severity":1,"message":"504","line":72,"column":22,"nodeType":"454","messageId":"455","endLine":72,"endColumn":33},{"ruleId":"452","severity":1,"message":"505","line":73,"column":12,"nodeType":"454","messageId":"455","endLine":73,"endColumn":20},{"ruleId":"452","severity":1,"message":"506","line":73,"column":22,"nodeType":"454","messageId":"455","endLine":73,"endColumn":33},{"ruleId":"452","severity":1,"message":"507","line":74,"column":12,"nodeType":"454","messageId":"455","endLine":74,"endColumn":20},{"ruleId":"452","severity":1,"message":"508","line":74,"column":22,"nodeType":"454","messageId":"455","endLine":74,"endColumn":33},{"ruleId":"452","severity":1,"message":"509","line":75,"column":12,"nodeType":"454","messageId":"455","endLine":75,"endColumn":23},{"ruleId":"452","severity":1,"message":"510","line":75,"column":25,"nodeType":"454","messageId":"455","endLine":75,"endColumn":39},{"ruleId":"452","severity":1,"message":"511","line":76,"column":12,"nodeType":"454","messageId":"455","endLine":76,"endColumn":23},{"ruleId":"452","severity":1,"message":"512","line":76,"column":25,"nodeType":"454","messageId":"455","endLine":76,"endColumn":39},{"ruleId":"452","severity":1,"message":"513","line":77,"column":12,"nodeType":"454","messageId":"455","endLine":77,"endColumn":20},{"ruleId":"452","severity":1,"message":"514","line":77,"column":22,"nodeType":"454","messageId":"455","endLine":77,"endColumn":33},{"ruleId":"452","severity":1,"message":"544","line":84,"column":12,"nodeType":"454","messageId":"455","endLine":84,"endColumn":21},{"ruleId":"452","severity":1,"message":"545","line":1,"column":17,"nodeType":"454","messageId":"455","endLine":1,"endColumn":26},{"ruleId":"452","severity":1,"message":"541","line":4,"column":7,"nodeType":"454","messageId":"455","endLine":4,"endColumn":13},{"ruleId":"452","severity":1,"message":"515","line":42,"column":12,"nodeType":"454","messageId":"455","endLine":42,"endColumn":21},{"ruleId":"452","severity":1,"message":"516","line":44,"column":11,"nodeType":"454","messageId":"455","endLine":44,"endColumn":20},{"ruleId":"452","severity":1,"message":"542","line":6,"column":9,"nodeType":"454","messageId":"455","endLine":6,"endColumn":19},{"ruleId":"452","severity":1,"message":"542","line":6,"column":9,"nodeType":"454","messageId":"455","endLine":6,"endColumn":19},{"ruleId":"452","severity":1,"message":"487","line":2,"column":17,"nodeType":"454","messageId":"455","endLine":2,"endColumn":25},{"ruleId":"452","severity":1,"message":"458","line":2,"column":27,"nodeType":"454","messageId":"455","endLine":2,"endColumn":36},{"ruleId":"452","severity":1,"message":"541","line":4,"column":7,"nodeType":"454","messageId":"455","endLine":4,"endColumn":13},{"ruleId":"452","severity":1,"message":"515","line":41,"column":8,"nodeType":"454","messageId":"455","endLine":41,"endColumn":17},{"ruleId":"452","severity":1,"message":"516","line":43,"column":9,"nodeType":"454","messageId":"455","endLine":43,"endColumn":18},{"ruleId":"452","severity":1,"message":"526","line":120,"column":10,"nodeType":"454","messageId":"455","endLine":120,"endColumn":19},{"ruleId":"452","severity":1,"message":"527","line":120,"column":21,"nodeType":"454","messageId":"455","endLine":120,"endColumn":33},{"ruleId":"452","severity":1,"message":"546","line":121,"column":10,"nodeType":"454","messageId":"455","endLine":121,"endColumn":22},{"ruleId":"452","severity":1,"message":"547","line":121,"column":24,"nodeType":"454","messageId":"455","endLine":121,"endColumn":39},{"ruleId":"452","severity":1,"message":"548","line":6,"column":8,"nodeType":"454","messageId":"455","endLine":6,"endColumn":20},{"ruleId":"452","severity":1,"message":"526","line":121,"column":10,"nodeType":"454","messageId":"455","endLine":121,"endColumn":19},{"ruleId":"452","severity":1,"message":"527","line":121,"column":21,"nodeType":"454","messageId":"455","endLine":121,"endColumn":33},{"ruleId":"452","severity":1,"message":"546","line":122,"column":10,"nodeType":"454","messageId":"455","endLine":122,"endColumn":22},{"ruleId":"452","severity":1,"message":"549","line":181,"column":9,"nodeType":"454","messageId":"455","endLine":181,"endColumn":21},"no-native-reassign",["550"],"no-negated-in-lhs",["551"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","'MdClose' is defined but never used.","'attractionList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","unexpected","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","'getAttractions' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'MainCodeContainer' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'RideSelect' is assigned a value but never used.","'setRide_name' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'CardH' is assigned a value but never used.","'startingTime' is assigned a value but never used.","'setStartingTime' is assigned a value but never used.","'endingTime' is assigned a value but never used.","'setEndingTime' is assigned a value but never used.","'timeValue' is assigned a value but never used.","'setTime' is assigned a value but never used.","'typeState' is assigned a value but never used.","'setTypeState' is assigned a value but never used.","'unitState' is assigned a value but never used.","'setUnitState' is assigned a value but never used.","'RideData' is assigned a value but never used.","'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'setRideName' is assigned a value but never used.","'setAttractionList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rideSelect'. Either include it or remove the dependency array.","ArrayExpression",["552"],"'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'Button' is assigned a value but never used.","'styleLight' is assigned a value but never used.","'ride_name' is assigned a value but never used.","'phoneList' is assigned a value but never used.","'Component' is defined but never used.","'intervalList' is assigned a value but never used.","'setIntervalList' is assigned a value but never used.","'IntervalPage' is defined but never used.","'getIntervals' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"553","fix":"554"},"Update the dependencies array to be: [rideSelect]",{"range":"555","text":"556"},[4984,4986],"[rideSelect]"]