[{"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js":"1","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js":"2","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js":"3","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js":"4","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js":"5","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js":"6","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js":"7","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js":"8","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js":"9","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js":"10","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js":"11","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js":"12","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js":"13","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js":"14","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js":"15","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js":"16","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js":"17","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js":"18","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js":"19","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js":"20","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js":"21","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js":"22","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js":"23","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js":"24","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js":"25","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js":"26","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js":"27","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js":"28","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js":"29","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js":"30","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js":"31","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js":"32","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js":"33","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js":"34","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js":"35","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js":"36","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js":"37","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js":"38","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js":"39","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js":"40","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js":"41","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js":"42","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js":"43","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js":"44","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js":"45","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js":"46","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js":"47","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js":"48","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js":"49","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js":"50","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js":"51","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js":"52","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js":"53","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js":"54","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js":"55","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js":"56"},{"size":479,"mtime":1620923128000,"results":"57","hashOfConfig":"58"},{"size":2076,"mtime":1620923128000,"results":"59","hashOfConfig":"58"},{"size":327,"mtime":1620923128000,"results":"60","hashOfConfig":"58"},{"size":1266,"mtime":1620923128000,"results":"61","hashOfConfig":"58"},{"size":341,"mtime":1620923128000,"results":"62","hashOfConfig":"58"},{"size":307,"mtime":1620923128000,"results":"63","hashOfConfig":"58"},{"size":2220,"mtime":1620923128000,"results":"64","hashOfConfig":"58"},{"size":20508,"mtime":1622751581980,"results":"65","hashOfConfig":"58"},{"size":351,"mtime":1620923128000,"results":"66","hashOfConfig":"58"},{"size":12976,"mtime":1622662861248,"results":"67","hashOfConfig":"58"},{"size":16553,"mtime":1622754510680,"results":"68","hashOfConfig":"58"},{"size":723,"mtime":1620923128000,"results":"69","hashOfConfig":"58"},{"size":722,"mtime":1622749034654,"results":"70","hashOfConfig":"58"},{"size":1817,"mtime":1620923128000,"results":"71","hashOfConfig":"58"},{"size":2096,"mtime":1620923128000,"results":"72","hashOfConfig":"58"},{"size":952,"mtime":1620923128000,"results":"73","hashOfConfig":"58"},{"size":1612,"mtime":1620923128000,"results":"74","hashOfConfig":"58"},{"size":3520,"mtime":1620923128000,"results":"75","hashOfConfig":"58"},{"size":570,"mtime":1620923128000,"results":"76","hashOfConfig":"58"},{"size":516,"mtime":1620923128000,"results":"77","hashOfConfig":"58"},{"size":580,"mtime":1620923128000,"results":"78","hashOfConfig":"58"},{"size":571,"mtime":1620923128000,"results":"79","hashOfConfig":"58"},{"size":558,"mtime":1620923128000,"results":"80","hashOfConfig":"58"},{"size":2405,"mtime":1620923128000,"results":"81","hashOfConfig":"58"},{"size":2591,"mtime":1620968392536,"results":"82","hashOfConfig":"58"},{"size":1590,"mtime":1620923128000,"results":"83","hashOfConfig":"58"},{"size":2720,"mtime":1620968388765,"results":"84","hashOfConfig":"58"},{"size":2430,"mtime":1620923128000,"results":"85","hashOfConfig":"58"},{"size":1769,"mtime":1620923128000,"results":"86","hashOfConfig":"58"},{"size":3177,"mtime":1620923128000,"results":"87","hashOfConfig":"58"},{"size":1224,"mtime":1620923128000,"results":"88","hashOfConfig":"58"},{"size":4734,"mtime":1620968391456,"results":"89","hashOfConfig":"58"},{"size":4191,"mtime":1622233828715,"results":"90","hashOfConfig":"58"},{"size":1225,"mtime":1622750300262,"results":"91","hashOfConfig":"58"},{"size":507,"mtime":1620923128000,"results":"92","hashOfConfig":"58"},{"size":2284,"mtime":1620968465147,"results":"93","hashOfConfig":"58"},{"size":10887,"mtime":1622749673953,"results":"94","hashOfConfig":"58"},{"size":14987,"mtime":1622749775140,"results":"95","hashOfConfig":"58"},{"size":211,"mtime":1620923128000,"results":"96","hashOfConfig":"58"},{"size":8634,"mtime":1622748715221,"results":"97","hashOfConfig":"58"},{"size":8637,"mtime":1622748742358,"results":"98","hashOfConfig":"58"},{"size":1058,"mtime":1622662918732,"results":"99","hashOfConfig":"58"},{"size":4001,"mtime":1620923128000,"results":"100","hashOfConfig":"58"},{"size":1696,"mtime":1622231293814,"results":"101","hashOfConfig":"58"},{"size":6853,"mtime":1620923128000,"results":"102","hashOfConfig":"58"},{"size":3829,"mtime":1622581424374,"results":"103","hashOfConfig":"58"},{"size":1681,"mtime":1620923128000,"results":"104","hashOfConfig":"58"},{"size":346,"mtime":1620923128000,"results":"105","hashOfConfig":"58"},{"size":2265,"mtime":1620923128000,"results":"106","hashOfConfig":"58"},{"size":448,"mtime":1620923128000,"results":"107","hashOfConfig":"58"},{"size":521,"mtime":1620923128000,"results":"108","hashOfConfig":"58"},{"size":362,"mtime":1620923128000,"results":"109","hashOfConfig":"58"},{"size":2051,"mtime":1620923128000,"results":"110","hashOfConfig":"58"},{"size":997,"mtime":1620923128000,"results":"111","hashOfConfig":"58"},{"size":4356,"mtime":1620708951894,"results":"112","hashOfConfig":"58"},{"size":2392,"mtime":1622660983059,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"k88cjp",{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js",[],["248","249"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js",["250","251"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Logout from './pages/logout';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n      \n    { this.state.user ? (  <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/logout' component={Logout}/>\n      </Switch> ) : ( <Login /> ) }\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst RideSelect = styled.select`\n    text-align: right;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function EditPage(props) {\n  \n\n    //states\nconst [ride_name, setRideName] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n//for the drop down menu\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n      }).catch(err => console.log(err));\n      }\n\n\nconst editAttraction = () =>{\n  Axios.put('http://localhost:3001/editAttraction', {\n                ride_name: ride_name,\n                dailyOpening: dailyOpening,\n                dailyClosing: dailyClosing,\n                theoryCapacity: theoryCapacity,\n                targetCapacity: targetCapacity,\n                minVehicles: minVehicles,\n                maxVehicles: maxVehicles,\n                maxSeats: maxSeats,\n                minStaff: minStaff,\n                maxStaff: maxStaff,\n                parkSection: parkSection,\n                weatherCode: weatherCode,\n                rideType: rideType,\n\n                rideSelect: setRideSelect\n                \n                }).then(() =>{\n                  alert('successful insert');\n\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n              window.location.href='/newAttraction';\n};\n\nvar emptyBoxArray = [];\nconst checkEmpty = () => {\n  var empty = false;\n\n  if(dailyOpening == '') {\n    alert(\"Daily Opening is empty\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  if(dailyClosing == '') {\n    alert(\"Daily Closing is empty\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  if(theoryCapacity == '') {\n    alert(\"Theoretical Capacity is empty\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  if(targetCapacity == '') {\n    alert(\"Target Capacity is empty\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  if(maxVehicles == '') {\n    alert(\"Max Vehicles is empty\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  if(minVehicles == '') {\n    alert(\"Min Vehicles is empty\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  if(maxSeats == '') {\n    alert(\"Max seats is empty\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  if(maxStaff == '') {\n    alert(\"Max Staff is empty\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  if(minStaff == '') {\n    alert(\"Min Staff is empty\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  if(parkSection == '') {\n    alert(\"Park Section is empty\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  if(weatherCode == '') {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  if(rideType == '') {\n    alert(\"Ride Type is empty\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    \n    {useEffect(() =>{\n      {window.addEventListener('load', getAttractions())}\n      {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n      {window.addEventListener('load', setRideName(props.location.ride_name))}\n      \n    })}\n    <OuterBorder>\n    <CreateBar> Edit an Attraction\n          <Nav>\n         <NavMenu>\n             <NavLink to='/EditPage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/EditPage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/EditPage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n  \n    <EditBorder>\n\n    <InfoBar> Basic Information</InfoBar>\n\n\n\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          <tr>\n          <td>Name</td>\n          <td>          \n\n              \n                          <> \n                          <label> {props.location.ride_name} </label>\n                          </>\n                    \n        \n\n\n          </td>\n          </tr>\n\n          <tr>\n          <td>Daily Opening</td>\n          <th> \n            \n              \n              {attractionList.map((val, key) => {\n                var dailyOpening;\n                if (rideSelect == val.ride_name){\n                    dailyOpening = val.dailyOpening;\n                    return (\n                      <> \n                        <input type='time' id='dailyOpeningID' name='dailyOpening' placeholder={dailyOpening} onChange={(e) => {\n                            setDailyOpening(e.target.value);\n                          }}\n                        ></input>  \n                      </>\n                    );\n                }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Daily Closing</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                    var dailyClosing;\n                    if (rideSelect == val.ride_name){\n                        dailyClosing = val.dailyClosing;\n                        return (\n                          <> \n                            <input type='time' id='dailyClosingID' name='dailyClosing' placeHolder={dailyClosing} onChange={(e) => {\n                                setDailyClosing(e.target.value);\n                              }}\n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Theoretical Capacity</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                        var theoryCapacity;\n                        if (rideSelect == val.ride_name){\n                            theoryCapacity = val.theoryCapacity;\n                            return (\n                              <> \n                                <input type='text' id='theoryCapacityID' name='theoryCapacity' placeHolder={theoryCapacity} onChange={(e) => {\n                                    setTheoryCapacity(e.target.value);\n                                  }}\n                                ></input>  \n                              </>\n                            );\n                        }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Target Capacity</td>\n          <th> \n\n            {attractionList.map((val, key) => {\n                      var targetCapacity;\n                      if (rideSelect == val.ride_name){\n                          targetCapacity = val.targetCapacity;\n                          return (\n                            <> \n                              <input type='text' id='targetCapacityID' name='targetCapacity' placeHolder={targetCapacity} onChange={(e) => {\n                                  setTargetCapacity(e.target.value);\n                                }}\n                              ></input>  \n                            </>\n                          );\n                      }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxVehicles;\n                          if (rideSelect == val.ride_name){\n                              maxVehicles = val.maxVehicles;\n                              return (\n                                <> \n                                  <input type='text' id='maxVehiclesID' name='maxVehicles' placeHolder={maxVehicles} onChange={(e) => {\n                                      setMaxVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minVehicles;\n                          if (rideSelect == val.ride_name){\n                              minVehicles = val.minVehicles;\n                              return (\n                                <> \n                                  <input type='text' id='minVehiclesID' name='minVehicle' placeHolder={minVehicles} onChange={(e) => {\n                                      setMinVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Seats per Vehicle</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxSeats;\n                          if (rideSelect == val.ride_name){\n                              maxSeats = val.maxSeats;\n                              return (\n                                <> \n                                  <input type='text' id='maxSeatsID' name='maxSeats' placeHolder={maxSeats} onChange={(e) => {\n                                      setMaxSeats(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxStaff;\n                          if (rideSelect == val.ride_name){\n                              maxStaff = val.maxStaff;\n                              return (\n                                <> \n                                  <input type='text' id='maxStaffID' name='maxStaff' placeHolder={maxStaff} onChange={(e) => {\n                                      setMaxStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minStaff;\n                          if (rideSelect == val.ride_name){\n                              minStaff = val.minStaff;\n                              return (\n                                <> \n                                  <input type='text' id='minStaffID' name='minStaff' placeHolder={minStaff} onChange={(e) => {\n                                      setMinStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Park Section</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var parkSection;\n                          if (rideSelect == val.ride_name){\n                              parkSection = val.parkSection;\n                              return (\n                                <> \n                                  <input type='text' id='parkSectionID' name='parkSection' placeHolder={parkSection} onChange={(e) => {\n                                      setParkSection(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Weather Code</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var weatherCode;\n                          if (rideSelect == val.ride_name){\n                              weatherCode = val.weatherCode;\n                              return (\n                                <> \n                                  <input type='text' id='weatherCodeID' name='weatherCode' placeHolder={weatherCode} onChange={(e) => {\n                                      setWeatherCode(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Type</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var rideType;\n                          if (rideSelect == val.ride_name){\n                              rideType = val.rideType;\n                              return (\n                                <> \n                                  <input type='text' id='rideTypeID' name='rideType' placeHolder={rideType} onChange={(e) => {\n                                      setRideType(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          </tbody>\n\n        \n\n        </table>\n        <EditButton onClick={() => { \n            if(checkEmpty() == true){\n              window.alert(\"Data entry error\")\n              changeInputColor(emptyBoxArray);\n              console.log(emptyBoxArray);\n            }\n            else { \n              window.alert(`The ride: ${ride_name} has been edited`);\n              editAttraction();\n        }}}>Edit Attraction</EditButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n      <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  border-bottom: 25px solid lightgray;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n\nexport const DeleteLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\n\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage(props) {\n\n\n\n  //states\n  const [ride_name, setRideName] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\n\nconst deleteAttraction = (ride_name) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${rideSelect}`);\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/DeletePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/DeletePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/DeletePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </DeleteBar>\n    \n    <EditBorder>\n    <InfoBar> Basic Information</InfoBar>\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n              {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n<tr>\n<td>Name</td>\n<td>          \n\n    \n                <> \n                <label> {props.location.ride_name} </label>\n                </>\n          \n\n\n\n</td>\n</tr>\n\n<tr>\n<td>Daily Opening</td>\n<th> \n  \n    \n    {attractionList.map((val, key) => {\n      var dailyOpening;\n      if (rideSelect == val.ride_name){\n          dailyOpening = val.dailyOpening;\n          return (\n            <> \n              <label> {dailyOpening} </label>\n            </>\n          );\n      }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Daily Closing</td>\n<th> \n\n    {attractionList.map((val, key) => {\n          var dailyClosing;\n          if (rideSelect == val.ride_name){\n              dailyClosing = val.dailyClosing;\n              return (\n                <> \n                  <label> {dailyClosing} </label>\n                </>\n              );\n          }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Theoretical Capacity</td>\n<th> \n\n    {attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n                  return (\n                    <> \n                      <label> {theoryCapacity} </label>\n                    </>\n                  );\n              }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Target Capacity</td>\n<th> \n\n  {attractionList.map((val, key) => {\n            var targetCapacity;\n            if (rideSelect == val.ride_name){\n                targetCapacity = val.targetCapacity;\n                return (\n                  <> \n                    <label> {targetCapacity} </label>\n                  </>\n                );\n            }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxVehicles;\n                if (rideSelect == val.ride_name){\n                    maxVehicles = val.maxVehicles;\n                    return (\n                      <> \n                        <label> {maxVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minVehicles;\n                if (rideSelect == val.ride_name){\n                    minVehicles = val.minVehicles;\n                    return (\n                      <> \n                        <label> {minVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Seats per Vehicle</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxSeats;\n                if (rideSelect == val.ride_name){\n                    maxSeats = val.maxSeats;\n                    return (\n                      <> \n                        <label> {maxSeats} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxStaff;\n                if (rideSelect == val.ride_name){\n                    maxStaff = val.maxStaff;\n                    return (\n                      <> \n                        <label> {maxStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minStaff;\n                if (rideSelect == val.ride_name){\n                    minStaff = val.minStaff;\n                    return (\n                      <> \n                        <label> {minStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Park Section</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var parkSection;\n                if (rideSelect == val.ride_name){\n                    parkSection = val.parkSection;\n                    return (\n                      <> \n                        <label> {parkSection} </label>  \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Weather Code</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var weatherCode;\n                if (rideSelect == val.ride_name){\n                    weatherCode = val.weatherCode;\n                    return (\n                      <> \n                        <label> {weatherCode} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Type</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var rideType;\n                if (rideSelect == val.ride_name){\n                    rideType = val.rideType;\n                    return (\n                      <> \n                        <label> {rideType} </label> \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n</tbody>\n\n          \n\n        </table>\n\n        <DeleteButton onClick={() => {\n            deleteAttraction(ride_name) //ride selected in drop down menu\n            window.alert(`The ride: ${props.location.ride_name} has been deleted`);\n            window.location.href='/newAttraction';\n          }}>Delete Attraction</DeleteButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js",["369","370"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js",["371","372"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js",["373","374","375","376","377"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { MdSignalCellularConnectedNoInternet4Bar } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nconst sendRideName = (rideList) =>{\n  Axios.post('http://localhost:3001/sendRideNameBackend', {\n    rideList: rideList\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nfunction RideCheck() {\n  \n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  //recieve data from backend to display\n\n\n\n  //recieve data from backend to display\nconst GetAttractions = () => {\n      //console.log(res.data)\n      useEffect(() => {\n          Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n          }).catch(err => console.log(err));\n          }, [])\n}\n\n  \n  return (\n    <div>\n      {window.addEventListener('load', GetAttractions())}\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n\n                {attractionList.map((val, key) => {\n                  return (\n                    <>     \n                   \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td><input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n                console.log(rideList)\n                sendRideName(rideList);\n                setTimeout(function(){\n                  window.location.reload(); \n                 }, 2);\n      }\n      }>Submit</SubmitButton>\n    </div>\n  );\n}\nexport default RideCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js",["378","379"],"import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\n\nfunction StatCheck() {\n\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ];\n\n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n\n                  onClick={() => {\n                    console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        console.log(statList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default StatCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js",["380","381"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport styled from 'styled-components';\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default DayCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js",["382","383","384"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js",["385","386","387"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nconst FavoriteBar = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n    return (\n        <>\n        <SideNav>\n           <FavButton>My Favorite1</FavButton>\n           <FavButton>My Favorite2 </FavButton>\n           <FavButton>My Favorite3</FavButton>\n           <FavButton>My Favorite4</FavButton>\n           <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js",["388","389","390","391","392","393","394","395","396","397"],"import React, { Component, useState, useEffect} from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n        \n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    let index = 0;\n    var rList = [];\n    var wList = [];\n    var tList = [];\n    var asList = [];\n    var adList = [];\n    var timeList = [];\n    var dateList = [];\n\n\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            var time = val.ts;\n            time = time.substring(11,19)\n            var date= val.ts;\n            date = date.substring(0,10)\n            index = index + 1;\n            console.log(\"Ride name = \", val.ride_name);\n            console.log(\"Time = \", time);\n            console.log(\"Date = \", date);\n            rList.push(val.ride_name);\n            timeList.push(time);\n            dateList.push(date)\n            console.log(\"Wait Time = \", val.WaitTime);\n            wList.push(val.WaitTime);\n        \n            console.log(\"Throughput = \", val.Throughput)\n            tList.push(val.Throughput);\n\n\n            console.log(\"Available Seats = \", val.AvailableSeats)\n            asList.push(val.AvailableSeats);\n            console.log(\"Available Down = \", val.AvailableDown)\n            adList.push( val.AvailableDown);\n\n            console.log('');\n     }\n     })}\n\n     const compareRide = () => {\n        for(var i = 0; i < index; i++) {\n            //check box list is compared with collected data\n            if(rideList.includes(rList[i])) {\n                console.log(\"Matched \", rList[i]);\n                //each variable is compared with the selected stat\n                if(statList.includes(\"Wait Time\"))\n                {\n                    //locate variable\n                    if(wList[i] != -1) {\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n                     } \n                }\n                if(statList.includes(\"Throughput\"))\n                {\n                     //locate variable\n                    if(tList[i] != -1) {\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n                    }\n                }\n                if(statList.includes(\"Available Seats\"))\n                {\n                     //locate variable\n                    if(asList[i] != -1) {\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n                    }\n                }   \n                if(statList.includes(\"Available Down\"))\n                {\n                     //locate variable\n                    if(adList[i] != -1) {\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n                    }\n                }\n\n                \n                console.log('');\n            }\n        }\n    }\n     \n    const data = [\n        {\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n  \n            ]\n        }\n    ];  \n\n    return (\n\n        <div>\n\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {console.log(\"Amount of rides \", index)}\n            {console.log(\"Ride names = \", rList)}\n            {console.log(\"TimeList = \", timeList)}\n            {console.log(\"DateList = \", dateList)}\n            {console.log(\"WaitList = \", wList)}\n            {console.log(\"ThroughputList = \", tList)}\n            {console.log(\"AvailableSeatList = \", asList)}\n            {console.log(\"AvailableDownList = \", adList)}\n\n\n            {compareRide()}\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.5%;\nheight: 83.5%;\n`;\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr style = {styleGray}>\n                        <th scope=\"col\">Ride Name</th>\n                        <th scope=\"col\">Daily Opening</th>\n                        <th scope=\"col\">Daily Closing</th>\n                        <th scope=\"col\">Theoretical Capacity</th>\n                        <th scope=\"col\">Target Capacity</th>\n                        <th scope=\"col\">Minimum Vehicles</th>\n                        <th scope=\"col\">Maximum Vehicles</th>\n                        <th scope=\"col\">Maximum Seats</th>\n                        <th scope=\"col\">Minimum Staff</th>\n                        <th scope=\"col\">Maximum Staff</th>\n                        <th scope=\"col\">Park Section</th>\n                        <th scope=\"col\">Weather Code</th>\n                        <th scope=\"col\">Type</th>\n                    </tr>\n                </thead>\n\n                {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        return (\n                <tbody>\n                    <tr>\n                        <td><NavLink to = {{\n                            pathname:'/rideInfo',\n                            ride_name: {ride}\n                            \n                        }}>{val.ride_name}</NavLink></td>\n                        <td>{val.dailyOpening}</td>\n                        <td>{val.dailyClosing}</td>\n                        <td>{val.theoryCapacity}</td>\n                        <td>{val.targetCapacity}</td>\n                        <td>{val.minVehicles}</td>\n                        <td>{val.maxVehicles}</td>\n                        <td>{val.maxSeats}</td>\n                        <td>{val.minStaff}</td>\n                        <td>{val.maxStaff}</td>\n                        <td>{val.parkSection}</td>\n                        <td>{val.weatherCode}</td>\n                        <td>{val.rideType}</td>\n                    </tr>\n                </tbody>\n                        );\n                    })}\n                \n            </table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js",["425","426"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\n\n\nposition: absolute;\n  top: 68px;\n  right: 5px;\n  width: 11.5%;\n  height: 12%;\n  margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 30%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\npadding: 3px;\nfont-size: 20px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 88%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsPanel = () => {\nconst [showModal, setShowModal] = useState(false);\n\nconst openModal = () => {\nsetShowModal(prev => !prev);\n};\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <NavLink to = '/CreatePage'>\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\n                    </NavLink>\n\n\n\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsPanel","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js",["427"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://localhost:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay\n",["428","429"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js",["430","431","432","433","434","435","436","437","438","439","440","441","442"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .9%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\n\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`\nconst ParkwideIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const [parkIntervalList, setParkIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState('');\n\n    const deleteInterval = (id) => {\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n        };\n    \n    //edit info\n    const [WaitTime, setWaitTime] = useState('');\n    const [Throughput, setThroughput] = useState('');\n    const [AvailableSeats, setAvailableSeats] = useState('');\n    const [AvailableDown, setAvailableDown] = useState('');\n\n    const editParkInterval = (id) =>{\n        Axios.put('http://localhost:3001/editParkInterval', {\n\n            id: id,\n            WaitTime: WaitTime,\n            Throughput: Throughput,\n            AvailableSeats: AvailableSeats,\n            AvailableDown: AvailableDown\n                        \n            }).then(() =>{\n            alert('successful insert');\n\n        }).then( () => {\n            console.log(\"Successfully sent to port 3001\");\n        });\n        };\n        \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n            {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n            {parkIntervalList.map((val, key) => {\n                    var id = val.id;\n                    var emptyArrayTest = `emptyArray${id}`;\n                    emptyArrayTest = [];\n\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                        if (WaitTime == ''){\n                            console.log(`waitTime${id}`)\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                            if (Throughput == ''){\n                                emptyArrayTest.push(`throughput${id}`)\n                            }\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            if (AvailableSeats == ''){\n                                emptyArrayTest.push(`available${id}`)\n                            }\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n\n                        if (val.checkedAvailableDown == true){\n                            if (AvailableDown == ''){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/></CardTime>\n \n                        <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    console.log(id)\n\n                                    var wait = `waitTime${id}`;\n                                    var throughput = `throughput${id}`;\n                                    var seats = `available${id}`;\n                                    var down = `down${id}`;\n\n                                    var refresh = 0;\n                                    console.log(emptyArrayTest);\n                                    if(emptyArrayTest.includes(wait)){\n                                        document.getElementById(wait).style.background = 'pink';\n                                        alert(\"Error! Wait time is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(throughput)){\n                                        document.getElementById(throughput).style.background = 'pink';\n                                        alert(\"Error! Throughput is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(seats)){\n                                        document.getElementById(seats).style.background = 'pink';\n                                        alert(\"Error! Available Seats is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(down)){\n                                        document.getElementById(down).style.background = 'pink';\n                                        alert(\"Error! Available Down is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if (refresh == 0){\n                                        setTimeout(function(){\n                                            window.location.reload(); \n                                           }, 2);\n                                           editParkInterval(id);\n                                    }\n\n                                }}>Submit</SubmitButton>\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js",["443","444","445","446","447","448","449","450","451","452","453"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\noverflow: hidden;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\noverflow: auto;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  overflow: hidden;\n`\n\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 15px;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n`\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const styleGray = {backgroundColor : '#AFAFAF'};\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n\n        //states\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n        var cardCount = 0;\n        var currentRide = '';\n\n\n        //state to get all attractions\n        const [attractionList, setAttractionList] = useState([]);\n        //recieve data from backend to display\n        const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n          //edit info\n          const [WaitTime, setWaitTime] = useState('');\n          const [Throughput, setThroughput] = useState('');\n          const [AvailableSeats, setAvailableSeats] = useState('');\n          const [AvailableDown, setAvailableDown] = useState('');\n\n          const editInterval = (id, rideName) =>{\n            Axios.put('http://localhost:3001/editInterval', {\n\n                id: id,\n                ride_name: rideName,\n                WaitTime: WaitTime,\n                Throughput: Throughput,\n                AvailableSeats: AvailableSeats,\n                AvailableDown: AvailableDown\n                          \n                }).then(() =>{\n                alert('successful insert');\n\n            }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n            });\n          };\n         \n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n\n                    var emptyArrayTest = `emptyArray${id}`;\n\n                    emptyArrayTest = [];\n\n\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                        if (WaitTime == ''){\n                            console.log(`waitTime${id}`)\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        if (Throughput == ''){\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                        if (AvailableSeats == ''){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n\n\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n\n                        if (val.checkedAvailableDown == true){\n                            if (AvailableDown == ''){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                      {currentRide = val.ride_name}\n                      {cardCount = cardCount + 1}\n                        return (\n                            <>\n\n                            \n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n\n\n                                <SubmitButton  onClick={() =>{\n\n                                    console.log(id)\n\n                                    var wait = `waitTime${id}`;\n                                    var throughput = `throughput${id}`;\n                                    var seats = `available${id}`;\n                                    var down = `down${id}`;\n\n                                    var refresh = 0;\n                                    console.log(emptyArrayTest);\n                                    if(emptyArrayTest.includes(wait)){\n                                        document.getElementById(wait).style.background = 'pink';\n                                        alert(\"Error! Wait time is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(throughput)){\n                                        document.getElementById(throughput).style.background = 'pink';\n                                        alert(\"Error! Throughput is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(seats)){\n                                        document.getElementById(seats).style.background = 'pink';\n                                        alert(\"Error! Available Seats is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if(emptyArrayTest.includes(down)){\n                                        document.getElementById(down).style.background = 'pink';\n                                        alert(\"Error! Available Down is empty.\")\n                                        refresh = 1;\n                                    }\n                                    if (refresh == 0){\n                                        setTimeout(function(){\n                                            window.location.reload(); \n                                           }, 2);\n                                        editInterval(id, val.ride_name)\n                                    }\n\n\n                                    // document.getElementById('3').style.background = \"pink\";\n\n                                    //editInterval(id, val.ride_name)\n                                    // window.location.reload();\n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n            <Border>\n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr><td>{currentRide}</td><td>{cardCount}</td></tr>\n                    </tbody>\n\n                    {/* {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                 \n                        return(\n                    <tbody>\n                        <tr><td>{ride}</td><td>{cardCount}</td></tr>\n                    </tbody>\n                        );\n                    })} */}\n\n             \n                </table>\n                </InfoContainer>    \n\n            </Border>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js",["454","455","456","457","458","459","460","461","462","463","464"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\nwidth: 11%;\n`\nexport const AttractionModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js",["465","466","467","468","469","470","471","472","473","474","475"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\nwidth: 11%;\n`\nexport const ParkwideModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addParkInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js",["476","477"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js",["478","479","480","481"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js",["482","483"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"text\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js",["484","485","486","487","488","489","490","491","492","493","494","495","496"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js",[],{"ruleId":"497","replacedBy":"498"},{"ruleId":"499","replacedBy":"500"},{"ruleId":"501","severity":1,"message":"502","line":1,"column":50,"nodeType":"503","messageId":"504","endLine":1,"endColumn":54},{"ruleId":"501","severity":1,"message":"505","line":1,"column":56,"nodeType":"503","messageId":"504","endLine":1,"endColumn":63},{"ruleId":"501","severity":1,"message":"506","line":151,"column":7,"nodeType":"503","messageId":"504","endLine":151,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":222,"column":19,"nodeType":"509","messageId":"510","endLine":222,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":227,"column":19,"nodeType":"509","messageId":"510","endLine":227,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":232,"column":21,"nodeType":"509","messageId":"510","endLine":232,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":237,"column":21,"nodeType":"509","messageId":"510","endLine":237,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":242,"column":18,"nodeType":"509","messageId":"510","endLine":242,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":247,"column":18,"nodeType":"509","messageId":"510","endLine":247,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":252,"column":15,"nodeType":"509","messageId":"510","endLine":252,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":257,"column":15,"nodeType":"509","messageId":"510","endLine":257,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":262,"column":15,"nodeType":"509","messageId":"510","endLine":262,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":267,"column":18,"nodeType":"509","messageId":"510","endLine":267,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":272,"column":18,"nodeType":"509","messageId":"510","endLine":272,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":277,"column":15,"nodeType":"509","messageId":"510","endLine":277,"endColumn":17},{"ruleId":"511","severity":1,"message":"512","line":296,"column":6,"nodeType":"503","endLine":296,"endColumn":15,"suggestions":"513"},{"ruleId":"514","severity":1,"message":"515","line":297,"column":7,"nodeType":"516","messageId":"517","endLine":297,"endColumn":58},{"ruleId":"514","severity":1,"message":"515","line":298,"column":7,"nodeType":"516","messageId":"517","endLine":298,"endColumn":81},{"ruleId":"514","severity":1,"message":"515","line":299,"column":7,"nodeType":"516","messageId":"517","endLine":299,"endColumn":79},{"ruleId":"518","severity":1,"message":"519","line":355,"column":46,"nodeType":"520","messageId":"521","endLine":355,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":357,"column":32,"nodeType":"509","messageId":"510","endLine":357,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":377,"column":46,"nodeType":"520","messageId":"521","endLine":377,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":379,"column":36,"nodeType":"509","messageId":"510","endLine":379,"endColumn":38},{"ruleId":"518","severity":1,"message":"519","line":399,"column":46,"nodeType":"520","messageId":"521","endLine":399,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":401,"column":40,"nodeType":"509","messageId":"510","endLine":401,"endColumn":42},{"ruleId":"518","severity":1,"message":"519","line":421,"column":44,"nodeType":"520","messageId":"521","endLine":421,"endColumn":46},{"ruleId":"507","severity":1,"message":"508","line":423,"column":38,"nodeType":"509","messageId":"510","endLine":423,"endColumn":40},{"ruleId":"518","severity":1,"message":"519","line":443,"column":46,"nodeType":"520","messageId":"521","endLine":443,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":445,"column":42,"nodeType":"509","messageId":"510","endLine":445,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":465,"column":46,"nodeType":"520","messageId":"521","endLine":465,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":467,"column":42,"nodeType":"509","messageId":"510","endLine":467,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":487,"column":46,"nodeType":"520","messageId":"521","endLine":487,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":489,"column":42,"nodeType":"509","messageId":"510","endLine":489,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":509,"column":46,"nodeType":"520","messageId":"521","endLine":509,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":511,"column":42,"nodeType":"509","messageId":"510","endLine":511,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":531,"column":46,"nodeType":"520","messageId":"521","endLine":531,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":533,"column":42,"nodeType":"509","messageId":"510","endLine":533,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":553,"column":46,"nodeType":"520","messageId":"521","endLine":553,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":555,"column":42,"nodeType":"509","messageId":"510","endLine":555,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":575,"column":46,"nodeType":"520","messageId":"521","endLine":575,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":577,"column":42,"nodeType":"509","messageId":"510","endLine":577,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":597,"column":46,"nodeType":"520","messageId":"521","endLine":597,"endColumn":48},{"ruleId":"507","severity":1,"message":"508","line":599,"column":42,"nodeType":"509","messageId":"510","endLine":599,"endColumn":44},{"ruleId":"507","severity":1,"message":"508","line":621,"column":29,"nodeType":"509","messageId":"510","endLine":621,"endColumn":31},{"ruleId":"501","severity":1,"message":"522","line":1,"column":27,"nodeType":"503","messageId":"504","endLine":1,"endColumn":33},{"ruleId":"501","severity":1,"message":"523","line":1,"column":46,"nodeType":"503","messageId":"504","endLine":1,"endColumn":57},{"ruleId":"501","severity":1,"message":"524","line":160,"column":21,"nodeType":"503","messageId":"504","endLine":160,"endColumn":32},{"ruleId":"501","severity":1,"message":"525","line":161,"column":10,"nodeType":"503","messageId":"504","endLine":161,"endColumn":22},{"ruleId":"501","severity":1,"message":"526","line":161,"column":24,"nodeType":"503","messageId":"504","endLine":161,"endColumn":39},{"ruleId":"501","severity":1,"message":"527","line":162,"column":10,"nodeType":"503","messageId":"504","endLine":162,"endColumn":22},{"ruleId":"501","severity":1,"message":"528","line":162,"column":24,"nodeType":"503","messageId":"504","endLine":162,"endColumn":39},{"ruleId":"501","severity":1,"message":"529","line":163,"column":10,"nodeType":"503","messageId":"504","endLine":163,"endColumn":24},{"ruleId":"501","severity":1,"message":"530","line":163,"column":26,"nodeType":"503","messageId":"504","endLine":163,"endColumn":43},{"ruleId":"501","severity":1,"message":"531","line":164,"column":10,"nodeType":"503","messageId":"504","endLine":164,"endColumn":24},{"ruleId":"501","severity":1,"message":"532","line":164,"column":26,"nodeType":"503","messageId":"504","endLine":164,"endColumn":43},{"ruleId":"501","severity":1,"message":"533","line":165,"column":10,"nodeType":"503","messageId":"504","endLine":165,"endColumn":21},{"ruleId":"501","severity":1,"message":"534","line":165,"column":23,"nodeType":"503","messageId":"504","endLine":165,"endColumn":37},{"ruleId":"501","severity":1,"message":"535","line":166,"column":10,"nodeType":"503","messageId":"504","endLine":166,"endColumn":21},{"ruleId":"501","severity":1,"message":"536","line":166,"column":23,"nodeType":"503","messageId":"504","endLine":166,"endColumn":37},{"ruleId":"501","severity":1,"message":"537","line":167,"column":10,"nodeType":"503","messageId":"504","endLine":167,"endColumn":18},{"ruleId":"501","severity":1,"message":"538","line":167,"column":20,"nodeType":"503","messageId":"504","endLine":167,"endColumn":31},{"ruleId":"501","severity":1,"message":"539","line":168,"column":10,"nodeType":"503","messageId":"504","endLine":168,"endColumn":18},{"ruleId":"501","severity":1,"message":"540","line":168,"column":20,"nodeType":"503","messageId":"504","endLine":168,"endColumn":31},{"ruleId":"501","severity":1,"message":"541","line":169,"column":10,"nodeType":"503","messageId":"504","endLine":169,"endColumn":18},{"ruleId":"501","severity":1,"message":"542","line":169,"column":20,"nodeType":"503","messageId":"504","endLine":169,"endColumn":31},{"ruleId":"501","severity":1,"message":"543","line":170,"column":10,"nodeType":"503","messageId":"504","endLine":170,"endColumn":21},{"ruleId":"501","severity":1,"message":"544","line":170,"column":23,"nodeType":"503","messageId":"504","endLine":170,"endColumn":37},{"ruleId":"501","severity":1,"message":"545","line":171,"column":10,"nodeType":"503","messageId":"504","endLine":171,"endColumn":21},{"ruleId":"501","severity":1,"message":"546","line":171,"column":23,"nodeType":"503","messageId":"504","endLine":171,"endColumn":37},{"ruleId":"501","severity":1,"message":"547","line":172,"column":10,"nodeType":"503","messageId":"504","endLine":172,"endColumn":18},{"ruleId":"501","severity":1,"message":"548","line":172,"column":20,"nodeType":"503","messageId":"504","endLine":172,"endColumn":31},{"ruleId":"511","severity":1,"message":"549","line":218,"column":10,"nodeType":"503","endLine":218,"endColumn":19,"suggestions":"550"},{"ruleId":"514","severity":1,"message":"515","line":219,"column":15,"nodeType":"516","messageId":"517","endLine":219,"endColumn":66},{"ruleId":"514","severity":1,"message":"515","line":220,"column":15,"nodeType":"516","messageId":"517","endLine":220,"endColumn":89},{"ruleId":"518","severity":1,"message":"519","line":251,"column":36,"nodeType":"520","messageId":"521","endLine":251,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":253,"column":22,"nodeType":"509","messageId":"510","endLine":253,"endColumn":24},{"ruleId":"518","severity":1,"message":"519","line":270,"column":36,"nodeType":"520","messageId":"521","endLine":270,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":272,"column":26,"nodeType":"509","messageId":"510","endLine":272,"endColumn":28},{"ruleId":"518","severity":1,"message":"519","line":289,"column":36,"nodeType":"520","messageId":"521","endLine":289,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":291,"column":30,"nodeType":"509","messageId":"510","endLine":291,"endColumn":32},{"ruleId":"518","severity":1,"message":"519","line":308,"column":34,"nodeType":"520","messageId":"521","endLine":308,"endColumn":36},{"ruleId":"507","severity":1,"message":"508","line":310,"column":28,"nodeType":"509","messageId":"510","endLine":310,"endColumn":30},{"ruleId":"518","severity":1,"message":"519","line":327,"column":36,"nodeType":"520","messageId":"521","endLine":327,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":329,"column":32,"nodeType":"509","messageId":"510","endLine":329,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":346,"column":36,"nodeType":"520","messageId":"521","endLine":346,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":348,"column":32,"nodeType":"509","messageId":"510","endLine":348,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":365,"column":36,"nodeType":"520","messageId":"521","endLine":365,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":367,"column":32,"nodeType":"509","messageId":"510","endLine":367,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":384,"column":36,"nodeType":"520","messageId":"521","endLine":384,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":386,"column":32,"nodeType":"509","messageId":"510","endLine":386,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":403,"column":36,"nodeType":"520","messageId":"521","endLine":403,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":405,"column":32,"nodeType":"509","messageId":"510","endLine":405,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":422,"column":36,"nodeType":"520","messageId":"521","endLine":422,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":424,"column":32,"nodeType":"509","messageId":"510","endLine":424,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":441,"column":36,"nodeType":"520","messageId":"521","endLine":441,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":443,"column":32,"nodeType":"509","messageId":"510","endLine":443,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":460,"column":36,"nodeType":"520","messageId":"521","endLine":460,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":462,"column":32,"nodeType":"509","messageId":"510","endLine":462,"endColumn":34},{"ruleId":"551","severity":1,"message":"552","line":201,"column":14,"nodeType":"553","messageId":"510","endLine":201,"endColumn":21},{"ruleId":"551","severity":1,"message":"554","line":202,"column":22,"nodeType":"553","messageId":"510","endLine":202,"endColumn":37},{"ruleId":"551","severity":1,"message":"555","line":203,"column":15,"nodeType":"553","messageId":"510","endLine":203,"endColumn":23},{"ruleId":"551","severity":1,"message":"556","line":204,"column":18,"nodeType":"553","messageId":"510","endLine":204,"endColumn":29},{"ruleId":"551","severity":1,"message":"557","line":205,"column":20,"nodeType":"553","messageId":"510","endLine":205,"endColumn":33},{"ruleId":"551","severity":1,"message":"558","line":206,"column":19,"nodeType":"553","messageId":"510","endLine":206,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":217,"column":16,"nodeType":"509","messageId":"510","endLine":217,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":222,"column":19,"nodeType":"509","messageId":"510","endLine":222,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":227,"column":19,"nodeType":"509","messageId":"510","endLine":227,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":232,"column":21,"nodeType":"509","messageId":"510","endLine":232,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":237,"column":21,"nodeType":"509","messageId":"510","endLine":237,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":242,"column":18,"nodeType":"509","messageId":"510","endLine":242,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":247,"column":18,"nodeType":"509","messageId":"510","endLine":247,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":252,"column":15,"nodeType":"509","messageId":"510","endLine":252,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":257,"column":15,"nodeType":"509","messageId":"510","endLine":257,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":262,"column":15,"nodeType":"509","messageId":"510","endLine":262,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":267,"column":18,"nodeType":"509","messageId":"510","endLine":267,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":272,"column":18,"nodeType":"509","messageId":"510","endLine":272,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":277,"column":15,"nodeType":"509","messageId":"510","endLine":277,"endColumn":17},{"ruleId":"518","severity":1,"message":"559","line":455,"column":30,"nodeType":"520","messageId":"560","endLine":455,"endColumn":32},{"ruleId":"507","severity":1,"message":"508","line":462,"column":29,"nodeType":"509","messageId":"510","endLine":462,"endColumn":31},{"ruleId":"501","severity":1,"message":"561","line":38,"column":8,"nodeType":"503","messageId":"504","endLine":38,"endColumn":17},{"ruleId":"501","severity":1,"message":"562","line":40,"column":9,"nodeType":"503","messageId":"504","endLine":40,"endColumn":18},{"ruleId":"501","severity":1,"message":"563","line":2,"column":17,"nodeType":"503","messageId":"504","endLine":2,"endColumn":25},{"ruleId":"501","severity":1,"message":"564","line":2,"column":27,"nodeType":"503","messageId":"504","endLine":2,"endColumn":36},{"ruleId":"501","severity":1,"message":"565","line":3,"column":10,"nodeType":"503","messageId":"504","endLine":3,"endColumn":49},{"ruleId":"501","severity":1,"message":"566","line":26,"column":9,"nodeType":"503","messageId":"504","endLine":26,"endColumn":19},{"ruleId":"501","severity":1,"message":"567","line":27,"column":8,"nodeType":"503","messageId":"504","endLine":27,"endColumn":17},{"ruleId":"501","severity":1,"message":"568","line":28,"column":18,"nodeType":"503","messageId":"504","endLine":28,"endColumn":29},{"ruleId":"569","severity":1,"message":"570","line":62,"column":31,"nodeType":"571","endLine":62,"endColumn":42},{"ruleId":"501","severity":1,"message":"572","line":28,"column":18,"nodeType":"503","messageId":"504","endLine":28,"endColumn":29},{"ruleId":"501","severity":1,"message":"566","line":31,"column":9,"nodeType":"503","messageId":"504","endLine":31,"endColumn":19},{"ruleId":"501","severity":1,"message":"573","line":2,"column":8,"nodeType":"503","messageId":"504","endLine":2,"endColumn":13},{"ruleId":"501","severity":1,"message":"566","line":14,"column":9,"nodeType":"503","messageId":"504","endLine":14,"endColumn":19},{"ruleId":"501","severity":1,"message":"574","line":4,"column":7,"nodeType":"503","messageId":"504","endLine":4,"endColumn":13},{"ruleId":"501","severity":1,"message":"561","line":41,"column":8,"nodeType":"503","messageId":"504","endLine":41,"endColumn":17},{"ruleId":"501","severity":1,"message":"562","line":43,"column":9,"nodeType":"503","messageId":"504","endLine":43,"endColumn":18},{"ruleId":"501","severity":1,"message":"574","line":4,"column":7,"nodeType":"503","messageId":"504","endLine":4,"endColumn":13},{"ruleId":"501","severity":1,"message":"561","line":42,"column":12,"nodeType":"503","messageId":"504","endLine":42,"endColumn":21},{"ruleId":"501","severity":1,"message":"562","line":44,"column":11,"nodeType":"503","messageId":"504","endLine":44,"endColumn":20},{"ruleId":"501","severity":1,"message":"575","line":1,"column":17,"nodeType":"503","messageId":"504","endLine":1,"endColumn":26},{"ruleId":"514","severity":1,"message":"515","line":49,"column":5,"nodeType":"516","messageId":"517","endLine":76,"endColumn":9},{"ruleId":"518","severity":1,"message":"559","line":49,"column":30,"nodeType":"520","messageId":"560","endLine":49,"endColumn":32},{"ruleId":"507","severity":1,"message":"576","line":87,"column":33,"nodeType":"509","messageId":"510","endLine":87,"endColumn":35},{"ruleId":"507","severity":1,"message":"576","line":94,"column":33,"nodeType":"509","messageId":"510","endLine":94,"endColumn":35},{"ruleId":"507","severity":1,"message":"576","line":101,"column":34,"nodeType":"509","messageId":"510","endLine":101,"endColumn":36},{"ruleId":"507","severity":1,"message":"576","line":108,"column":34,"nodeType":"509","messageId":"510","endLine":108,"endColumn":36},{"ruleId":"514","severity":1,"message":"515","line":133,"column":13,"nodeType":"516","messageId":"517","endLine":133,"endColumn":61},{"ruleId":"514","severity":1,"message":"515","line":134,"column":13,"nodeType":"516","messageId":"517","endLine":134,"endColumn":65},{"ruleId":"514","severity":1,"message":"515","line":135,"column":13,"nodeType":"516","messageId":"517","endLine":135,"endColumn":61},{"ruleId":"501","severity":1,"message":"577","line":27,"column":7,"nodeType":"503","messageId":"504","endLine":27,"endColumn":16},{"ruleId":"501","severity":1,"message":"567","line":32,"column":12,"nodeType":"503","messageId":"504","endLine":32,"endColumn":21},{"ruleId":"501","severity":1,"message":"578","line":32,"column":23,"nodeType":"503","messageId":"504","endLine":32,"endColumn":35},{"ruleId":"501","severity":1,"message":"525","line":33,"column":12,"nodeType":"503","messageId":"504","endLine":33,"endColumn":24},{"ruleId":"501","severity":1,"message":"526","line":33,"column":26,"nodeType":"503","messageId":"504","endLine":33,"endColumn":41},{"ruleId":"501","severity":1,"message":"527","line":34,"column":12,"nodeType":"503","messageId":"504","endLine":34,"endColumn":24},{"ruleId":"501","severity":1,"message":"528","line":34,"column":26,"nodeType":"503","messageId":"504","endLine":34,"endColumn":41},{"ruleId":"501","severity":1,"message":"529","line":35,"column":12,"nodeType":"503","messageId":"504","endLine":35,"endColumn":26},{"ruleId":"501","severity":1,"message":"530","line":35,"column":28,"nodeType":"503","messageId":"504","endLine":35,"endColumn":45},{"ruleId":"501","severity":1,"message":"531","line":36,"column":12,"nodeType":"503","messageId":"504","endLine":36,"endColumn":26},{"ruleId":"501","severity":1,"message":"532","line":36,"column":28,"nodeType":"503","messageId":"504","endLine":36,"endColumn":45},{"ruleId":"501","severity":1,"message":"533","line":37,"column":12,"nodeType":"503","messageId":"504","endLine":37,"endColumn":23},{"ruleId":"501","severity":1,"message":"534","line":37,"column":25,"nodeType":"503","messageId":"504","endLine":37,"endColumn":39},{"ruleId":"501","severity":1,"message":"535","line":38,"column":12,"nodeType":"503","messageId":"504","endLine":38,"endColumn":23},{"ruleId":"501","severity":1,"message":"536","line":38,"column":25,"nodeType":"503","messageId":"504","endLine":38,"endColumn":39},{"ruleId":"501","severity":1,"message":"537","line":39,"column":12,"nodeType":"503","messageId":"504","endLine":39,"endColumn":20},{"ruleId":"501","severity":1,"message":"538","line":39,"column":22,"nodeType":"503","messageId":"504","endLine":39,"endColumn":33},{"ruleId":"501","severity":1,"message":"539","line":40,"column":12,"nodeType":"503","messageId":"504","endLine":40,"endColumn":20},{"ruleId":"501","severity":1,"message":"540","line":40,"column":22,"nodeType":"503","messageId":"504","endLine":40,"endColumn":33},{"ruleId":"501","severity":1,"message":"541","line":41,"column":12,"nodeType":"503","messageId":"504","endLine":41,"endColumn":20},{"ruleId":"501","severity":1,"message":"542","line":41,"column":22,"nodeType":"503","messageId":"504","endLine":41,"endColumn":33},{"ruleId":"501","severity":1,"message":"543","line":42,"column":12,"nodeType":"503","messageId":"504","endLine":42,"endColumn":23},{"ruleId":"501","severity":1,"message":"544","line":42,"column":25,"nodeType":"503","messageId":"504","endLine":42,"endColumn":39},{"ruleId":"501","severity":1,"message":"545","line":43,"column":12,"nodeType":"503","messageId":"504","endLine":43,"endColumn":23},{"ruleId":"501","severity":1,"message":"546","line":43,"column":25,"nodeType":"503","messageId":"504","endLine":43,"endColumn":39},{"ruleId":"501","severity":1,"message":"547","line":44,"column":12,"nodeType":"503","messageId":"504","endLine":44,"endColumn":20},{"ruleId":"501","severity":1,"message":"548","line":44,"column":22,"nodeType":"503","messageId":"504","endLine":44,"endColumn":33},{"ruleId":"501","severity":1,"message":"561","line":38,"column":8,"nodeType":"503","messageId":"504","endLine":38,"endColumn":17},{"ruleId":"501","severity":1,"message":"562","line":40,"column":7,"nodeType":"503","messageId":"504","endLine":40,"endColumn":16},{"ruleId":"501","severity":1,"message":"577","line":33,"column":7,"nodeType":"503","messageId":"504","endLine":33,"endColumn":16},{"ruleId":"497","replacedBy":"579"},{"ruleId":"499","replacedBy":"580"},{"ruleId":"501","severity":1,"message":"522","line":6,"column":27,"nodeType":"503","messageId":"504","endLine":6,"endColumn":33},{"ruleId":"501","severity":1,"message":"523","line":6,"column":46,"nodeType":"503","messageId":"504","endLine":6,"endColumn":57},{"ruleId":"501","severity":1,"message":"581","line":155,"column":12,"nodeType":"503","messageId":"504","endLine":155,"endColumn":22},{"ruleId":"501","severity":1,"message":"582","line":155,"column":24,"nodeType":"503","messageId":"504","endLine":155,"endColumn":37},{"ruleId":"507","severity":1,"message":"508","line":207,"column":49,"nodeType":"509","messageId":"510","endLine":207,"endColumn":51},{"ruleId":"507","severity":1,"message":"508","line":208,"column":38,"nodeType":"509","messageId":"510","endLine":208,"endColumn":40},{"ruleId":"507","severity":1,"message":"508","line":224,"column":51,"nodeType":"509","messageId":"510","endLine":224,"endColumn":53},{"ruleId":"507","severity":1,"message":"508","line":225,"column":44,"nodeType":"509","messageId":"510","endLine":225,"endColumn":46},{"ruleId":"507","severity":1,"message":"508","line":239,"column":55,"nodeType":"509","messageId":"510","endLine":239,"endColumn":57},{"ruleId":"507","severity":1,"message":"508","line":240,"column":48,"nodeType":"509","messageId":"510","endLine":240,"endColumn":50},{"ruleId":"507","severity":1,"message":"508","line":254,"column":54,"nodeType":"509","messageId":"510","endLine":254,"endColumn":56},{"ruleId":"507","severity":1,"message":"508","line":255,"column":47,"nodeType":"509","messageId":"510","endLine":255,"endColumn":49},{"ruleId":"507","severity":1,"message":"508","line":313,"column":49,"nodeType":"509","messageId":"510","endLine":313,"endColumn":51},{"ruleId":"507","severity":1,"message":"508","line":304,"column":49,"nodeType":"509","messageId":"510","endLine":304,"endColumn":51},{"ruleId":"507","severity":1,"message":"508","line":305,"column":38,"nodeType":"509","messageId":"510","endLine":305,"endColumn":40},{"ruleId":"507","severity":1,"message":"508","line":321,"column":51,"nodeType":"509","messageId":"510","endLine":321,"endColumn":53},{"ruleId":"507","severity":1,"message":"508","line":322,"column":40,"nodeType":"509","messageId":"510","endLine":322,"endColumn":42},{"ruleId":"507","severity":1,"message":"508","line":337,"column":55,"nodeType":"509","messageId":"510","endLine":337,"endColumn":57},{"ruleId":"507","severity":1,"message":"508","line":338,"column":44,"nodeType":"509","messageId":"510","endLine":338,"endColumn":46},{"ruleId":"507","severity":1,"message":"508","line":354,"column":54,"nodeType":"509","messageId":"510","endLine":354,"endColumn":56},{"ruleId":"507","severity":1,"message":"508","line":355,"column":47,"nodeType":"509","messageId":"510","endLine":355,"endColumn":49},{"ruleId":"514","severity":1,"message":"515","line":368,"column":23,"nodeType":"516","messageId":"517","endLine":368,"endColumn":52},{"ruleId":"514","severity":1,"message":"515","line":369,"column":23,"nodeType":"516","messageId":"517","endLine":369,"endColumn":50},{"ruleId":"507","severity":1,"message":"508","line":425,"column":49,"nodeType":"509","messageId":"510","endLine":425,"endColumn":51},{"ruleId":"501","severity":1,"message":"583","line":80,"column":7,"nodeType":"503","messageId":"504","endLine":80,"endColumn":11},{"ruleId":"507","severity":1,"message":"508","line":184,"column":18,"nodeType":"509","messageId":"510","endLine":184,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":187,"column":18,"nodeType":"509","messageId":"510","endLine":187,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":190,"column":18,"nodeType":"509","messageId":"510","endLine":190,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":193,"column":18,"nodeType":"509","messageId":"510","endLine":193,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":201,"column":18,"nodeType":"509","messageId":"510","endLine":201,"endColumn":20},{"ruleId":"518","severity":1,"message":"559","line":206,"column":22,"nodeType":"520","messageId":"560","endLine":206,"endColumn":24},{"ruleId":"507","severity":1,"message":"508","line":210,"column":26,"nodeType":"509","messageId":"510","endLine":210,"endColumn":28},{"ruleId":"507","severity":1,"message":"508","line":215,"column":21,"nodeType":"509","messageId":"510","endLine":215,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":220,"column":19,"nodeType":"509","messageId":"510","endLine":220,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":290,"column":51,"nodeType":"509","messageId":"510","endLine":290,"endColumn":53},{"ruleId":"501","severity":1,"message":"583","line":80,"column":7,"nodeType":"503","messageId":"504","endLine":80,"endColumn":11},{"ruleId":"507","severity":1,"message":"508","line":185,"column":18,"nodeType":"509","messageId":"510","endLine":185,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":188,"column":18,"nodeType":"509","messageId":"510","endLine":188,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":191,"column":18,"nodeType":"509","messageId":"510","endLine":191,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":194,"column":18,"nodeType":"509","messageId":"510","endLine":194,"endColumn":20},{"ruleId":"507","severity":1,"message":"508","line":202,"column":18,"nodeType":"509","messageId":"510","endLine":202,"endColumn":20},{"ruleId":"518","severity":1,"message":"559","line":207,"column":22,"nodeType":"520","messageId":"560","endLine":207,"endColumn":24},{"ruleId":"507","severity":1,"message":"508","line":211,"column":26,"nodeType":"509","messageId":"510","endLine":211,"endColumn":28},{"ruleId":"507","severity":1,"message":"508","line":216,"column":21,"nodeType":"509","messageId":"510","endLine":216,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":221,"column":19,"nodeType":"509","messageId":"510","endLine":221,"endColumn":21},{"ruleId":"507","severity":1,"message":"508","line":291,"column":51,"nodeType":"509","messageId":"510","endLine":291,"endColumn":53},{"ruleId":"501","severity":1,"message":"561","line":37,"column":8,"nodeType":"503","messageId":"504","endLine":37,"endColumn":17},{"ruleId":"501","severity":1,"message":"562","line":39,"column":9,"nodeType":"503","messageId":"504","endLine":39,"endColumn":18},{"ruleId":"501","severity":1,"message":"584","line":3,"column":8,"nodeType":"503","messageId":"504","endLine":3,"endColumn":16},{"ruleId":"501","severity":1,"message":"585","line":8,"column":10,"nodeType":"503","messageId":"504","endLine":8,"endColumn":18},{"ruleId":"501","severity":1,"message":"586","line":10,"column":10,"nodeType":"503","messageId":"504","endLine":10,"endColumn":17},{"ruleId":"501","severity":1,"message":"587","line":11,"column":10,"nodeType":"503","messageId":"504","endLine":11,"endColumn":26},{"ruleId":"501","severity":1,"message":"564","line":1,"column":17,"nodeType":"503","messageId":"504","endLine":1,"endColumn":26},{"ruleId":"501","severity":1,"message":"563","line":1,"column":28,"nodeType":"503","messageId":"504","endLine":1,"endColumn":36},{"ruleId":"501","severity":1,"message":"573","line":5,"column":8,"nodeType":"503","messageId":"504","endLine":5,"endColumn":13},{"ruleId":"501","severity":1,"message":"567","line":117,"column":10,"nodeType":"503","messageId":"504","endLine":117,"endColumn":19},{"ruleId":"501","severity":1,"message":"524","line":117,"column":21,"nodeType":"503","messageId":"504","endLine":117,"endColumn":32},{"ruleId":"501","severity":1,"message":"588","line":118,"column":10,"nodeType":"503","messageId":"504","endLine":118,"endColumn":22},{"ruleId":"501","severity":1,"message":"589","line":118,"column":24,"nodeType":"503","messageId":"504","endLine":118,"endColumn":39},{"ruleId":"501","severity":1,"message":"590","line":119,"column":10,"nodeType":"503","messageId":"504","endLine":119,"endColumn":20},{"ruleId":"501","severity":1,"message":"591","line":119,"column":22,"nodeType":"503","messageId":"504","endLine":119,"endColumn":35},{"ruleId":"501","severity":1,"message":"592","line":120,"column":10,"nodeType":"503","messageId":"504","endLine":120,"endColumn":19},{"ruleId":"501","severity":1,"message":"593","line":121,"column":21,"nodeType":"503","messageId":"504","endLine":121,"endColumn":33},{"ruleId":"501","severity":1,"message":"594","line":122,"column":10,"nodeType":"503","messageId":"504","endLine":122,"endColumn":19},{"ruleId":"501","severity":1,"message":"595","line":122,"column":21,"nodeType":"503","messageId":"504","endLine":122,"endColumn":33},{"ruleId":"501","severity":1,"message":"596","line":123,"column":10,"nodeType":"503","messageId":"504","endLine":123,"endColumn":22},{"ruleId":"501","severity":1,"message":"597","line":123,"column":24,"nodeType":"503","messageId":"504","endLine":123,"endColumn":39},"no-native-reassign",["598"],"no-negated-in-lhs",["599"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'RideSelect' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getAttractions, props.location.ride_name] as a second argument to the useEffect Hook.",["600"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","'useCallback' is defined but never used.","'setRideName' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.ride_name] as a second argument to the useEffect Hook.",["601"],"no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'MdSignalCellularConnectedNoInternet4Bar' is defined but never used.","'styleLight' is assigned a value but never used.","'ride_name' is assigned a value but never used.","'setRideList' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'setStatList' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is assigned a value but never used.","'Component' is defined but never used.","Expected '!==' and instead saw '!='.","'styleBlue' is assigned a value but never used.","'setRide_name' is assigned a value but never used.",["598"],["599"],"'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'Form' is assigned a value but never used.","'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'startingTime' is assigned a value but never used.","'setStartingTime' is assigned a value but never used.","'endingTime' is assigned a value but never used.","'setEndingTime' is assigned a value but never used.","'timeValue' is assigned a value but never used.","'setTypeState' is assigned a value but never used.","'unitState' is assigned a value but never used.","'setUnitState' is assigned a value but never used.","'intervalList' is assigned a value but never used.","'setIntervalList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},"Add dependencies array: [getAttractions, props.location.ride_name]",{"range":"606","text":"607"},"Add dependencies array: [props.location.ride_name]",{"range":"608","text":"609"},[7327,7327],", [getAttractions, props.location.ride_name]",[5118,5118],", [props.location.ride_name]"]