[{"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/index.js":"1","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/reportWebVitals.js":"2","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/App.js":"3","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/editpage.js":"4","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/historical.js":"5","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/graph.js":"6","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/attraction.js":"7","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/deletepage.js":"8","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/andon.js":"9","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/createpage.js":"10","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/interval.js":"11","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/newAttraction.js":"12","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/weather.js":"13","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/main.js":"14","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/StatCheck.js":"15","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js":"16","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/GraphUnits.js":"17","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/FavoriteBar.js":"18","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js":"19","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/MapEnable.js":"20","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/DayCheck.js":"21","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/RideCheck.js":"22","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainInfoDisplay.js":"23","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainGraphDisplay.js":"24","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/QuickToolsMain.js":"25","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainCodeMenu.js":"26","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js":"27","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainWeatherRadar.js":"28","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainDownTime.js":"29","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js":"30","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js":"31","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainParkSection.js":"32","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js":"33","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js":"34","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js":"35","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js":"36","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainMiniAndon.js":"37","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/globalStyles.js":"38","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/rideInfo.js":"39","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/BasicInfo.js":"40","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/CollectedData.js":"41","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/General/Bannerbar.js":"42","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/General/Navbar.js":"43","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsGraph.js":"44","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/SubIntervals.js":"45","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/Options.js":"46","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/MiniGraph.js":"47","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionModal.js":"48","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/ParkwideModal.js":"49","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/FileUpload/FileUpload.js":"50","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/FileUpload/Progress.js":"51","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/fire.js":"52","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/login.js":"53","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/logout.js":"54","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js":"55"},{"size":479,"mtime":1620884551000,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1620884551000,"results":"58","hashOfConfig":"57"},{"size":2076,"mtime":1620884551000,"results":"59","hashOfConfig":"57"},{"size":18137,"mtime":1622664712417,"results":"60","hashOfConfig":"57"},{"size":341,"mtime":1620884551000,"results":"61","hashOfConfig":"57"},{"size":2220,"mtime":1620888742359,"results":"62","hashOfConfig":"57"},{"size":351,"mtime":1620884551000,"results":"63","hashOfConfig":"57"},{"size":12954,"mtime":1622663883347,"results":"64","hashOfConfig":"57"},{"size":327,"mtime":1620884551000,"results":"65","hashOfConfig":"57"},{"size":15702,"mtime":1622663881485,"results":"66","hashOfConfig":"57"},{"size":803,"mtime":1620921509321,"results":"67","hashOfConfig":"57"},{"size":723,"mtime":1620884551000,"results":"68","hashOfConfig":"57"},{"size":307,"mtime":1620884551000,"results":"69","hashOfConfig":"57"},{"size":1266,"mtime":1620884551000,"results":"70","hashOfConfig":"57"},{"size":2720,"mtime":1620884551000,"results":"71","hashOfConfig":"57"},{"size":1769,"mtime":1620884551000,"results":"72","hashOfConfig":"57"},{"size":3177,"mtime":1620884551000,"results":"73","hashOfConfig":"57"},{"size":1224,"mtime":1620884551000,"results":"74","hashOfConfig":"57"},{"size":4725,"mtime":1620923676993,"results":"75","hashOfConfig":"57"},{"size":1590,"mtime":1620884551000,"results":"76","hashOfConfig":"57"},{"size":2430,"mtime":1620884551000,"results":"77","hashOfConfig":"57"},{"size":2591,"mtime":1620884551000,"results":"78","hashOfConfig":"57"},{"size":3520,"mtime":1620884551000,"results":"79","hashOfConfig":"57"},{"size":570,"mtime":1620884551000,"results":"80","hashOfConfig":"57"},{"size":1612,"mtime":1620884551000,"results":"81","hashOfConfig":"57"},{"size":952,"mtime":1620884551000,"results":"82","hashOfConfig":"57"},{"size":2405,"mtime":1620884551000,"results":"83","hashOfConfig":"57"},{"size":580,"mtime":1620884551000,"results":"84","hashOfConfig":"57"},{"size":571,"mtime":1620884551000,"results":"85","hashOfConfig":"57"},{"size":2284,"mtime":1620921171269,"results":"86","hashOfConfig":"57"},{"size":14970,"mtime":1622748499069,"results":"87","hashOfConfig":"57"},{"size":558,"mtime":1620884551000,"results":"88","hashOfConfig":"57"},{"size":8030,"mtime":1620922414428,"results":"89","hashOfConfig":"57"},{"size":1244,"mtime":1622663636483,"results":"90","hashOfConfig":"57"},{"size":4173,"mtime":1622228900546,"results":"91","hashOfConfig":"57"},{"size":507,"mtime":1620884551000,"results":"92","hashOfConfig":"57"},{"size":516,"mtime":1620884551000,"results":"93","hashOfConfig":"57"},{"size":211,"mtime":1620884551000,"results":"94","hashOfConfig":"57"},{"size":1058,"mtime":1622663889110,"results":"95","hashOfConfig":"57"},{"size":3829,"mtime":1622663879195,"results":"96","hashOfConfig":"57"},{"size":6853,"mtime":1620884551000,"results":"97","hashOfConfig":"57"},{"size":2096,"mtime":1620884551000,"results":"98","hashOfConfig":"57"},{"size":1817,"mtime":1620884551000,"results":"99","hashOfConfig":"57"},{"size":1696,"mtime":1622663877806,"results":"100","hashOfConfig":"57"},{"size":1681,"mtime":1620884551000,"results":"101","hashOfConfig":"57"},{"size":4001,"mtime":1620884551000,"results":"102","hashOfConfig":"57"},{"size":346,"mtime":1620884551000,"results":"103","hashOfConfig":"57"},{"size":8636,"mtime":1622578006920,"results":"104","hashOfConfig":"57"},{"size":8639,"mtime":1622578405251,"results":"105","hashOfConfig":"57"},{"size":2265,"mtime":1620884551000,"results":"106","hashOfConfig":"57"},{"size":448,"mtime":1620884551000,"results":"107","hashOfConfig":"57"},{"size":521,"mtime":1620884551000,"results":"108","hashOfConfig":"57"},{"size":2051,"mtime":1620884551000,"results":"109","hashOfConfig":"57"},{"size":997,"mtime":1620884551000,"results":"110","hashOfConfig":"57"},{"size":2303,"mtime":1622663876248,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"tzivk9",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/index.js",[],["244","245"],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/reportWebVitals.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/App.js",["246","247"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Logout from './pages/logout';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n      \n    { this.state.user ? (  <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/logout' component={Logout}/>\n      </Switch> ) : ( <Login /> ) }\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/editpage.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst RideSelect = styled.select`\n    text-align: right;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function EditPage(props) {\n  \n\n    //states\nconst [ride_name, setRideName] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n//for the drop down menu\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n      }).catch(err => console.log(err));\n      }\n\n\nconst editAttraction = () =>{\n  Axios.put('http://localhost:3001/editAttraction', {\n                ride_name: ride_name,\n                dailyOpening: dailyOpening,\n                dailyClosing: dailyClosing,\n                theoryCapacity: theoryCapacity,\n                targetCapacity: targetCapacity,\n                minVehicles: minVehicles,\n                maxVehicles: maxVehicles,\n                maxSeats: maxSeats,\n                minStaff: minStaff,\n                maxStaff: maxStaff,\n                parkSection: parkSection,\n                weatherCode: weatherCode,\n                rideType: rideType,\n\n                rideSelect: setRideSelect\n                \n                }).then(() =>{\n                  alert('successful insert');\n\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n              window.location.href='/newAttraction';\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    \n    {useEffect(() =>{\n      {window.addEventListener('load', getAttractions())}\n      {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n      {window.addEventListener('load', setRideName(props.location.ride_name))}\n      \n    })}\n    <OuterBorder>\n    <CreateBar> Edit an Attraction\n          <Nav>\n         <NavMenu>\n             <NavLink to='/EditPage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/EditPage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/EditPage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n  \n    <EditBorder>\n\n    <InfoBar> Basic Information</InfoBar>\n\n\n\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          <tr>\n          <td>Name</td>\n          <td>          \n\n              \n                          <> \n                          <label> {props.location.ride_name} </label>\n                          </>\n                    \n        \n\n\n          </td>\n          </tr>\n\n          <tr>\n          <td>Daily Opening</td>\n          <th> \n            \n              \n              {attractionList.map((val, key) => {\n                var dailyOpening;\n                if (rideSelect == val.ride_name){\n                    dailyOpening = val.dailyOpening;\n                    return (\n                      <> \n                        <input type='time' name='dailyOpening' placeholder={dailyOpening} onChange={(e) => {\n                            setDailyOpening(e.target.value);\n                          }}\n                        ></input>  \n                      </>\n                    );\n                }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Daily Closing</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                    var dailyClosing;\n                    if (rideSelect == val.ride_name){\n                        dailyClosing = val.dailyClosing;\n                        return (\n                          <> \n                            <input type='time' name='dailyClosing' placeHolder={dailyClosing} onChange={(e) => {\n                                setDailyClosing(e.target.value);\n                              }}\n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Theoretical Capacity</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                        var theoryCapacity;\n                        if (rideSelect == val.ride_name){\n                            theoryCapacity = val.theoryCapacity;\n                            return (\n                              <> \n                                <input type='text' name='theoryCapacity' placeHolder={theoryCapacity} onChange={(e) => {\n                                    setTheoryCapacity(e.target.value);\n                                  }}\n                                ></input>  \n                              </>\n                            );\n                        }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Target Capacity</td>\n          <th> \n\n            {attractionList.map((val, key) => {\n                      var targetCapacity;\n                      if (rideSelect == val.ride_name){\n                          targetCapacity = val.targetCapacity;\n                          return (\n                            <> \n                              <input type='text' name='targetCapacity' placeHolder={targetCapacity} onChange={(e) => {\n                                  setTargetCapacity(e.target.value);\n                                }}\n                              ></input>  \n                            </>\n                          );\n                      }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxVehicles;\n                          if (rideSelect == val.ride_name){\n                              maxVehicles = val.maxVehicles;\n                              return (\n                                <> \n                                  <input type='text' name='maxVehicles' placeHolder={maxVehicles} onChange={(e) => {\n                                      setMaxVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minVehicles;\n                          if (rideSelect == val.ride_name){\n                              minVehicles = val.minVehicles;\n                              return (\n                                <> \n                                  <input type='text' name='minVehicle' placeHolder={minVehicles} onChange={(e) => {\n                                      setMinVehicles(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Seats per Vehicle</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxSeats;\n                          if (rideSelect == val.ride_name){\n                              maxSeats = val.maxSeats;\n                              return (\n                                <> \n                                  <input type='text' name='maxSeats' placeHolder={maxSeats} onChange={(e) => {\n                                      setMaxSeats(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxStaff;\n                          if (rideSelect == val.ride_name){\n                              maxStaff = val.maxStaff;\n                              return (\n                                <> \n                                  <input type='text' name='maxStaff' placeHolder={maxStaff} onChange={(e) => {\n                                      setMaxStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minStaff;\n                          if (rideSelect == val.ride_name){\n                              minStaff = val.minStaff;\n                              return (\n                                <> \n                                  <input type='text' name='minStaff' placeHolder={minStaff} onChange={(e) => {\n                                      setMinStaff(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Park Section</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var parkSection;\n                          if (rideSelect == val.ride_name){\n                              parkSection = val.parkSection;\n                              return (\n                                <> \n                                  <input type='text' name='parkSection' placeHolder={parkSection} onChange={(e) => {\n                                      setParkSection(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Weather Code</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var weatherCode;\n                          if (rideSelect == val.ride_name){\n                              weatherCode = val.weatherCode;\n                              return (\n                                <> \n                                  <input type='text' name='weatherCode' placeHolder={weatherCode} onChange={(e) => {\n                                      setWeatherCode(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Type</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var rideType;\n                          if (rideSelect == val.ride_name){\n                              rideType = val.rideType;\n                              return (\n                                <> \n                                  <input type='text' name='rideType' placeHolder={rideType} onChange={(e) => {\n                                      setRideType(e.target.value);\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          </tbody>\n\n        \n\n        </table>\n        <EditButton onClick={(editAttraction)}>Edit Attraction</EditButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n      <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/historical.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/graph.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/attraction.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/deletepage.js",["277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { useState,useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  border-bottom: 25px solid lightgray;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n\nexport const DeleteLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\n\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage(props) {\n\n\n\n  //states\n  const [ride_name, setRideName] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\n\nconst deleteAttraction = (ride_name) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${rideSelect}`);\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/DeletePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/DeletePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/DeletePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </DeleteBar>\n    \n    <EditBorder>\n    <InfoBar> Basic Information</InfoBar>\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n              {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n<tr>\n<td>Name</td>\n<td>          \n\n    \n                <> \n                <label> {props.location.ride_name} </label>\n                </>\n          \n\n\n\n</td>\n</tr>\n\n<tr>\n<td>Daily Opening</td>\n<th> \n  \n    \n    {attractionList.map((val, key) => {\n      var dailyOpening;\n      if (rideSelect == val.ride_name){\n          dailyOpening = val.dailyOpening;\n          return (\n            <> \n              <label> {dailyOpening} </label>\n            </>\n          );\n      }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Daily Closing</td>\n<th> \n\n    {attractionList.map((val, key) => {\n          var dailyClosing;\n          if (rideSelect == val.ride_name){\n              dailyClosing = val.dailyClosing;\n              return (\n                <> \n                  <label> {dailyClosing} </label>\n                </>\n              );\n          }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Theoretical Capacity</td>\n<th> \n\n    {attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n                  return (\n                    <> \n                      <label> {theoryCapacity} </label>\n                    </>\n                  );\n              }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Target Capacity</td>\n<th> \n\n  {attractionList.map((val, key) => {\n            var targetCapacity;\n            if (rideSelect == val.ride_name){\n                targetCapacity = val.targetCapacity;\n                return (\n                  <> \n                    <label> {targetCapacity} </label>\n                  </>\n                );\n            }\n    })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxVehicles;\n                if (rideSelect == val.ride_name){\n                    maxVehicles = val.maxVehicles;\n                    return (\n                      <> \n                        <label> {maxVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Vehicles</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minVehicles;\n                if (rideSelect == val.ride_name){\n                    minVehicles = val.minVehicles;\n                    return (\n                      <> \n                        <label> {minVehicles} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Seats per Vehicle</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxSeats;\n                if (rideSelect == val.ride_name){\n                    maxSeats = val.maxSeats;\n                    return (\n                      <> \n                        <label> {maxSeats} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Max Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var maxStaff;\n                if (rideSelect == val.ride_name){\n                    maxStaff = val.maxStaff;\n                    return (\n                      <> \n                        <label> {maxStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Min Employees</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var minStaff;\n                if (rideSelect == val.ride_name){\n                    minStaff = val.minStaff;\n                    return (\n                      <> \n                        <label> {minStaff} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Park Section</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var parkSection;\n                if (rideSelect == val.ride_name){\n                    parkSection = val.parkSection;\n                    return (\n                      <> \n                        <label> {parkSection} </label>  \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Weather Code</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var weatherCode;\n                if (rideSelect == val.ride_name){\n                    weatherCode = val.weatherCode;\n                    return (\n                      <> \n                        <label> {weatherCode} </label>\n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n<tr>\n<td>Type</td>\n<th>\n\n    {attractionList.map((val, key) => {\n                var rideType;\n                if (rideSelect == val.ride_name){\n                    rideType = val.rideType;\n                    return (\n                      <> \n                        <label> {rideType} </label> \n                      </>\n                    );\n                }\n      })}\n\n</th>\n</tr>\n\n</tbody>\n\n          \n\n        </table>\n\n        <DeleteButton onClick={() => {\n            deleteAttraction(ride_name) //ride selected in drop down menu\n            window.alert(`The ride: ${props.location.ride_name} has been deleted`);\n            window.location.href='/newAttraction';\n          }}>Delete Attraction</DeleteButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/andon.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/createpage.js",["329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link} from 'react-router-dom';\nimport FileUpload from '../components/FileUpload/FileUpload'; \nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nimport { useHistory } from 'react-router-dom';\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const CreateLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 660px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 615px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow-y: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  text-align: center;\n  border-bottom: 2px solid;\n  width: 113%;\n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 40%;\n    width: 30%;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    width: 30%;\n    height: 40%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst ReportInfo = styled.div`\n    overflow-y: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 357px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst CreateButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function CreatePage() {\n\n\n//states\n//for getting attraction \nconst [ride_name, setRide_name] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n\n//for getting safety critcal information\nconst [maxWind, setMaxWind] = useState('');\nconst [minTemp, setMinTemp] = useState('');\nconst [powerRedundancy, setPowerRedundancy] = useState('');\nconst [numGates, setNumGates] = useState('');\n\n//for getting phone information\nconst [ridePrimary, setRidePrimary] = useState('');\nconst [rideSecondary, setRideSecondary] = useState('');\nconst [rideTertiary, setRideTertiary] = useState('');\n\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\nconst submitAttraction = () =>{\n  Axios.post('http://localhost:3001/addAttraction', {\n    ride_name: ride_name,\n    dailyOpening: dailyOpening,\n    dailyClosing: dailyClosing,\n    theoryCapacity: theoryCapacity,\n    targetCapacity: targetCapacity,\n    minVehicles: minVehicles,\n    maxVehicles: maxVehicles,\n    maxSeats: maxSeats,\n    minStaff: minStaff,\n    maxStaff: maxStaff,\n    parkSection: parkSection,\n    weatherCode: weatherCode,\n    rideType: rideType,\n    maxWind: maxWind,\n    minTemp, minTemp,\n    powerRedundancy, powerRedundancy,\n    numGates, numGates,\n    ridePrimary, ridePrimary,\n    rideSecondary, rideSecondary,\n    rideTertiary, rideTertiary\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nvar emptyBoxArray = [];\nconst checkEmpty = () => {\n  var empty = false;\n  if(ride_name == '') {\n    alert(\"Ride name is empty\");\n    emptyBoxArray.push('ride_nameID');\n    empty = true;\n  }\n  if(dailyOpening == '') {\n    alert(\"Daily Opening is empty\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  if(dailyClosing == '') {\n    alert(\"Daily Closing is empty\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  if(theoryCapacity == '') {\n    alert(\"Theoretical Capacity is empty\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  if(targetCapacity == '') {\n    alert(\"Target Capacity is empty\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  if(maxVehicles == '') {\n    alert(\"Max Vehicles is empty\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  if(minVehicles == '') {\n    alert(\"Min Vehicles is empty\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  if(maxSeats == '') {\n    alert(\"Max seats is empty\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  if(maxStaff == '') {\n    alert(\"Max Staff is empty\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  if(minStaff == '') {\n    alert(\"Min Staff is empty\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  if(parkSection == '') {\n    alert(\"Park Section is empty\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  if(weatherCode == '') {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  if(rideType == '') {\n    alert(\"Ride Type is empty\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nlet history = useHistory();\n\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\nreturn (\n  \n    <>\n    \n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <CreateBar> Create a new Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/CreatePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/CreatePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/CreatePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n    <EditBorder>\n      <InfoBar> Basic Information </InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n        <tr>\n        <td>Name</td>\n        <td>              \n                <input id='ride_nameID' type='text' name='ride_name' onChange={(e) => {\n                  setRide_name(e.target.value);\n                }}></input> </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n              <input id='dailyOpeningID' type='time' name='dailyOpening' onChange={(e) => {\n                        setDailyOpening(e.target.value);\n                      }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n            <input id='dailyClosingID' type='time' name='dailyClosing' onChange={(e) => {\n                      setDailyClosing(e.target.value);\n                    }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n            <input id='theoryCapacityID' type='number' name='theoryCapacity' onChange={(e) => {\n                          setTheoryCapacity(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n            <input id='targetCapacityID' type='number' name='targetCapcity' onChange={(e) => {\n                          setTargetCapacity(e.target.value);\n                        }}></input>  \n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Vehicles</td>\n        <th>\n            <input id='maxVehiclesID' type='number' name='maxVehicles' onChange={(e) => {\n                          setMaxVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Vehicles</td>\n        <th>\n            <input id='minVehiclesID'type='number' name='minVehicles' onChange={(e) => {\n                          setMinVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n            <input id='maxSeatsID' type='number' name='maxSeats' onChange={(e) => {\n                          setMaxSeats(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Employees</td>\n        <th>\n            <input id='maxStaffID' type='number' name='maxStaff' onChange={(e) => {\n                          setMaxStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Employees</td>\n        <th>\n            <input id='minStaffID' type='number' name='minStaff' onChange={(e) => {\n                          setMinStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n              <input id='parkSectionID' type='text' name='parkSection' onChange={(e) => {\n                            setParkSection(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n              <input id='weatherCodeID' type='text' name='weatherCode' onChange={(e) => {\n                            setWeatherCode(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n        <tr>\n        <td>Type</td>\n        <th>\n            <input id='rideTypeID' type='text' name='rideType' onChange={(e) => {\n                          setRideType(e.target.value);\n              }}></input>\n        </th>\n        </tr>\n        \n        </tbody>\n\n        </table>\n        <CreateButton onClick={() => { \n            if(checkEmpty() == true){\n              window.alert(\"Data entry error\")\n              changeInputColor(emptyBoxArray);\n              console.log(emptyBoxArray);\n            }\n            else { \n              window.alert(`The ride: ${ride_name} has been created`)\n              submitAttraction();\n              history.push('/newAttraction')\n        }\n        }}>Create Attraction</CreateButton>\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n    <Upload>\n        <FileUpload />  \n    </Upload>\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>\n                        <input type='text' name='weatherCode' onChange={(e) => {\n                          setWeatherCode(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>\n                        <input type='text' name='maxWind' onChange={(e) => {\n                          setMaxWind(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>\n                        <input type='text' name='minTemp' onChange={(e) => {\n                          setMinTemp(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>\n                        <input type='text' name='powerRedundancy' onChange={(e) => {\n                          setPowerRedundancy(e.target.value);\n                        }}></input>\n\n            </td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>              \n                        <input type='text' name='numGates' onChange={(e) => {\n                          setNumGates(e.target.value);\n                        }}></input>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>\n                      <input type='text' name='ridePrimary' onChange={(e) => {\n                          setRidePrimary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>\n                        <input type='text' name='rideSecondary' onChange={(e) => {\n                          setRideSecondary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>\n                        <input type='text' name='rideTeriary' onChange={(e) => {\n                            setRideTertiary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/interval.js",["349"],"import React from 'react'\nimport QuickToolsMain from '../components/Main/QuickToolsMain'\nimport IntervalsCountDisplay from '../components/Interval/IntervalsCountDisplay'\nimport Attraction from '../components/Interval/AttractionIntervals'\nimport ParkwideIntervals from '../components/Interval/ParkwideIntervals'\nimport MainCodeMenu from '../components/Main/MainCodeMenu'\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nconst Interval = () => {\n    return (\n        <>  \n            <Navbar/>\n            <Banner/>\n            <QuickToolsMain></QuickToolsMain>\n            <MainCodeMenu></MainCodeMenu>\n            <Attraction></Attraction>\n            <ParkwideIntervals></ParkwideIntervals>\n        </>\n      \n      );\n}\n\nexport default  Interval","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/newAttraction.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/weather.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/main.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/StatCheck.js",["350","351"],"import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\n\nfunction StatCheck() {\n\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ];\n\n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n\n                  onClick={() => {\n                    console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        console.log(statList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default StatCheck;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/QuickToolsSummary.js",["352","353","354"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/GraphUnits.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/FavoriteBar.js",["355","356","357"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nconst FavoriteBar = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n    return (\n        <>\n        <SideNav>\n           <FavButton>My Favorite1</FavButton>\n           <FavButton>My Favorite2 </FavButton>\n           <FavButton>My Favorite3</FavButton>\n           <FavButton>My Favorite4</FavButton>\n           <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js",["358","359","360","361","362","363","364","365","366","367"],"import React, { Component, useState, useEffect} from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    let index = 0;\n    var rList = [];\n    var wList = [];\n    var tList = [];\n    var asList = [];\n    var adList = [];\n    var timeList = [];\n    var dateList = [];\n\n\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            var time = val.ts;\n            time = time.substring(11,19)\n            var date= val.ts;\n            date = date.substring(0,10)\n            index = index + 1;\n            console.log(\"Ride name = \", val.ride_name);\n            console.log(\"Time = \", time);\n            console.log(\"Date = \", date);\n            rList.push(val.ride_name);\n            timeList.push(time);\n            dateList.push(date)\n            console.log(\"Wait Time = \", val.WaitTime);\n            wList.push(val.WaitTime);\n        \n            console.log(\"Throughput = \", val.Throughput)\n            tList.push(val.Throughput);\n\n\n            console.log(\"Available Seats = \", val.AvailableSeats)\n            asList.push(val.AvailableSeats);\n            console.log(\"Available Down = \", val.AvailableDown)\n            adList.push( val.AvailableDown);\n\n            console.log('');\n     }\n     })}\n\n     const compareRide = () => {\n        for(var i = 0; i < index; i++) {\n            //check box list is compared with collected data\n            if(rideList.includes(rList[i])) {\n                console.log(\"Matched \", rList[i]);\n                //each variable is compared with the selected stat\n                if(statList.includes(\"Wait Time\"))\n                {\n                    //locate variable\n                    if(wList[i] != -1) {\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n                     } \n                }\n                if(statList.includes(\"Throughput\"))\n                {\n                     //locate variable\n                    if(tList[i] != -1) {\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n                    }\n                }\n                if(statList.includes(\"Available Seats\"))\n                {\n                     //locate variable\n                    if(asList[i] != -1) {\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n                    }\n                }   \n                if(statList.includes(\"Available Down\"))\n                {\n                     //locate variable\n                    if(adList[i] != -1) {\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n                    }\n                }\n\n                \n                console.log('');\n            }\n        }\n    }\n     \n    const data = [\n        {\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n  \n            ]\n        }\n    ];  \n\n    return (\n\n        <div>\n\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {console.log(\"Amount of rides \", index)}\n            {console.log(\"Ride names = \", rList)}\n            {console.log(\"TimeList = \", timeList)}\n            {console.log(\"DateList = \", dateList)}\n            {console.log(\"WaitList = \", wList)}\n            {console.log(\"ThroughputList = \", tList)}\n            {console.log(\"AvailableSeatList = \", asList)}\n            {console.log(\"AvailableDownList = \", adList)}\n\n\n            {compareRide()}\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/MapEnable.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/DayCheck.js",["368","369"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport styled from 'styled-components';\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default DayCheck;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/RideCheck.js",["370","371","372","373","374"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { MdSignalCellularConnectedNoInternet4Bar } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nconst sendRideName = (rideList) =>{\n  Axios.post('http://localhost:3001/sendRideNameBackend', {\n    rideList: rideList\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nfunction RideCheck() {\n  \n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  //recieve data from backend to display\n\n\n\n  //recieve data from backend to display\nconst GetAttractions = () => {\n      //console.log(res.data)\n      useEffect(() => {\n          Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n          }).catch(err => console.log(err));\n          }, [])\n}\n\n  \n  return (\n    <div>\n      {window.addEventListener('load', GetAttractions())}\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n\n                {attractionList.map((val, key) => {\n                  return (\n                    <>     \n                   \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td><input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n                console.log(rideList)\n                sendRideName(rideList);\n                setTimeout(function(){\n                  window.location.reload(); \n                 }, 2);\n      }\n      }>Submit</SubmitButton>\n    </div>\n  );\n}\nexport default RideCheck;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainInfoDisplay.js",["375","376"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainGraphDisplay.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/QuickToolsMain.js",["377","378"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainCodeMenu.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainRidePerecentChange.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainWeatherRadar.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainDownTime.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js",["379"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://localhost:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay\n","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js",["380","381","382","383","384","385","386","387","388","389"],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainParkSection.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/ParkwideIntervals.js",["390","391","392","393","394","395","396","397"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .9%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\n\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n\n`\n\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`\nconst ParkwideIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const [parkIntervalList, setParkIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState('');\n\n    const deleteInterval = (id) => {\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n        };\n    \n    //edit info\n    const [WaitTime, setWaitTime] = useState('');\n    const [Throughput, setThroughput] = useState('');\n    const [AvailableSeats, setAvailableSeats] = useState('');\n    const [AvailableDown, setAvailableDown] = useState('');\n\n    const editParkInterval = (id) =>{\n        Axios.put('http://localhost:3001/editParkInterval', {\n\n            id: id,\n            WaitTime: WaitTime,\n            Throughput: Throughput,\n            AvailableSeats: AvailableSeats,\n            AvailableDown: AvailableDown\n                        \n            }).then(() =>{\n            alert('successful insert');\n\n        }).then( () => {\n            console.log(\"Successfully sent to port 3001\");\n        });\n        };\n        \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n            {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n            {parkIntervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/></CardTime>\n \n                        <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    editParkInterval(id);\n                                    window.location.reload(); \n                                }}>Submit</SubmitButton>\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/QuickToolsPanel.js",["398","399"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nposition: absolute;\n  right: 5px;\n  width: 11.5%;\n  height: 250px;\n  margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding: 3px;\nfont-size: 20px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsPanel = () => {\nconst [showModal, setShowModal] = useState(false);\n\nconst openModal = () => {\nsetShowModal(prev => !prev);\n};\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <NavLink to = '/CreatePage'>\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\n                    </NavLink>\n\n\n\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsPanel","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.5%;\nheight: 83.5%;\n`;\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr style = {styleGray}>\n                        <th scope=\"col\">Ride Name</th>\n                        <th scope=\"col\">Daily Opening</th>\n                        <th scope=\"col\">Daily Closing</th>\n                        <th scope=\"col\">Theoretical Capacity</th>\n                        <th scope=\"col\">Target Capacity</th>\n                        <th scope=\"col\">Minimum Vehicles</th>\n                        <th scope=\"col\">Maximum Vehicles</th>\n                        <th scope=\"col\">Maximum Seats</th>\n                        <th scope=\"col\">Minimum Staff</th>\n                        <th scope=\"col\">Maximum Staff</th>\n                        <th scope=\"col\">Park Section</th>\n                        <th scope=\"col\">Weather Code</th>\n                        <th scope=\"col\">Type</th>\n                    </tr>\n                </thead>\n\n                {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        return (\n                <tbody>\n                    <tr>\n                        <td><NavLink to = {{\n                            pathname:'/rideInfo',\n                            ride_name: {ride}\n                            \n                        }}>{val.ride_name}</NavLink></td>\n                        <td>{val.dailyOpening}</td>\n                        <td>{val.dailyClosing}</td>\n                        <td>{val.theoryCapacity}</td>\n                        <td>{val.targetCapacity}</td>\n                        <td>{val.minVehicles}</td>\n                        <td>{val.maxVehicles}</td>\n                        <td>{val.maxSeats}</td>\n                        <td>{val.minStaff}</td>\n                        <td>{val.maxStaff}</td>\n                        <td>{val.parkSection}</td>\n                        <td>{val.weatherCode}</td>\n                        <td>{val.rideType}</td>\n                    </tr>\n                </tbody>\n                        );\n                    })}\n                \n            </table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTitle.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Main/MainMiniAndon.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/globalStyles.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/rideInfo.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/BasicInfo.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/CollectedData.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/General/Bannerbar.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/General/Navbar.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsGraph.js",["427","428"],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/SubIntervals.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/Options.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/MiniGraph.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionModal.js",["429","430","431","432","433","434","435","436","437","438","439"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\n\nwidth: 11%;\n`\nexport const AttractionModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/ParkwideModal.js",["440","441","442","443","444","445","446","447","448","449","450"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst Form = styled.form`\n\nwidth: 11%;\n`\nexport const ParkwideModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addParkInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      document.getElementById(element).style.backgroundColor = \"pink\";\n      if(element == 'dataID'){\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      if(element == 'timeValueID'){\n        document.getElementById(\"timeID\").style.color = \"red\";\n      }\n      if(element == 'startingTimeID'){\n        document.getElementById(\"startingID\").style.color = \"red\";\n      }\n      if(element == 'endingTimeID'){\n        document.getElementById(\"endingID\").style.color = \"red\";\n      }\n    }\n  }\nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form id='timeID' >Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID' >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n     \n                <input \n                  id = 'dataID'\n                  class=\"checkbox\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                  </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form id='startingID'>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form id='endingID'>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/FileUpload/FileUpload.js",["451","452","453","454"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/FileUpload/Progress.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/fire.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/login.js",["455","456"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"text\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/logout.js",[],"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/RideInfo/QuickToolsBasicInfo.js",[],{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"461","severity":1,"message":"462","line":1,"column":50,"nodeType":"463","messageId":"464","endLine":1,"endColumn":54},{"ruleId":"461","severity":1,"message":"465","line":1,"column":56,"nodeType":"463","messageId":"464","endLine":1,"endColumn":63},{"ruleId":"461","severity":1,"message":"466","line":151,"column":7,"nodeType":"463","messageId":"464","endLine":151,"endColumn":17},{"ruleId":"467","severity":1,"message":"468","line":223,"column":6,"nodeType":"463","endLine":223,"endColumn":15,"suggestions":"469"},{"ruleId":"470","severity":1,"message":"471","line":224,"column":7,"nodeType":"472","messageId":"473","endLine":224,"endColumn":58},{"ruleId":"470","severity":1,"message":"471","line":225,"column":7,"nodeType":"472","messageId":"473","endLine":225,"endColumn":81},{"ruleId":"470","severity":1,"message":"471","line":226,"column":7,"nodeType":"472","messageId":"473","endLine":226,"endColumn":79},{"ruleId":"474","severity":1,"message":"475","line":282,"column":46,"nodeType":"476","messageId":"477","endLine":282,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":284,"column":32,"nodeType":"480","messageId":"481","endLine":284,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":304,"column":46,"nodeType":"476","messageId":"477","endLine":304,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":306,"column":36,"nodeType":"480","messageId":"481","endLine":306,"endColumn":38},{"ruleId":"474","severity":1,"message":"475","line":326,"column":46,"nodeType":"476","messageId":"477","endLine":326,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":328,"column":40,"nodeType":"480","messageId":"481","endLine":328,"endColumn":42},{"ruleId":"474","severity":1,"message":"475","line":348,"column":44,"nodeType":"476","messageId":"477","endLine":348,"endColumn":46},{"ruleId":"478","severity":1,"message":"479","line":350,"column":38,"nodeType":"480","messageId":"481","endLine":350,"endColumn":40},{"ruleId":"474","severity":1,"message":"475","line":370,"column":46,"nodeType":"476","messageId":"477","endLine":370,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":372,"column":42,"nodeType":"480","messageId":"481","endLine":372,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":392,"column":46,"nodeType":"476","messageId":"477","endLine":392,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":394,"column":42,"nodeType":"480","messageId":"481","endLine":394,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":414,"column":46,"nodeType":"476","messageId":"477","endLine":414,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":416,"column":42,"nodeType":"480","messageId":"481","endLine":416,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":436,"column":46,"nodeType":"476","messageId":"477","endLine":436,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":438,"column":42,"nodeType":"480","messageId":"481","endLine":438,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":458,"column":46,"nodeType":"476","messageId":"477","endLine":458,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":460,"column":42,"nodeType":"480","messageId":"481","endLine":460,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":480,"column":46,"nodeType":"476","messageId":"477","endLine":480,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":482,"column":42,"nodeType":"480","messageId":"481","endLine":482,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":502,"column":46,"nodeType":"476","messageId":"477","endLine":502,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":504,"column":42,"nodeType":"480","messageId":"481","endLine":504,"endColumn":44},{"ruleId":"474","severity":1,"message":"475","line":524,"column":46,"nodeType":"476","messageId":"477","endLine":524,"endColumn":48},{"ruleId":"478","severity":1,"message":"479","line":526,"column":42,"nodeType":"480","messageId":"481","endLine":526,"endColumn":44},{"ruleId":"461","severity":1,"message":"482","line":160,"column":21,"nodeType":"463","messageId":"464","endLine":160,"endColumn":32},{"ruleId":"461","severity":1,"message":"483","line":161,"column":10,"nodeType":"463","messageId":"464","endLine":161,"endColumn":22},{"ruleId":"461","severity":1,"message":"484","line":161,"column":24,"nodeType":"463","messageId":"464","endLine":161,"endColumn":39},{"ruleId":"461","severity":1,"message":"485","line":162,"column":10,"nodeType":"463","messageId":"464","endLine":162,"endColumn":22},{"ruleId":"461","severity":1,"message":"486","line":162,"column":24,"nodeType":"463","messageId":"464","endLine":162,"endColumn":39},{"ruleId":"461","severity":1,"message":"487","line":163,"column":10,"nodeType":"463","messageId":"464","endLine":163,"endColumn":24},{"ruleId":"461","severity":1,"message":"488","line":163,"column":26,"nodeType":"463","messageId":"464","endLine":163,"endColumn":43},{"ruleId":"461","severity":1,"message":"489","line":164,"column":10,"nodeType":"463","messageId":"464","endLine":164,"endColumn":24},{"ruleId":"461","severity":1,"message":"490","line":164,"column":26,"nodeType":"463","messageId":"464","endLine":164,"endColumn":43},{"ruleId":"461","severity":1,"message":"491","line":165,"column":10,"nodeType":"463","messageId":"464","endLine":165,"endColumn":21},{"ruleId":"461","severity":1,"message":"492","line":165,"column":23,"nodeType":"463","messageId":"464","endLine":165,"endColumn":37},{"ruleId":"461","severity":1,"message":"493","line":166,"column":10,"nodeType":"463","messageId":"464","endLine":166,"endColumn":21},{"ruleId":"461","severity":1,"message":"494","line":166,"column":23,"nodeType":"463","messageId":"464","endLine":166,"endColumn":37},{"ruleId":"461","severity":1,"message":"495","line":167,"column":10,"nodeType":"463","messageId":"464","endLine":167,"endColumn":18},{"ruleId":"461","severity":1,"message":"496","line":167,"column":20,"nodeType":"463","messageId":"464","endLine":167,"endColumn":31},{"ruleId":"461","severity":1,"message":"497","line":168,"column":10,"nodeType":"463","messageId":"464","endLine":168,"endColumn":18},{"ruleId":"461","severity":1,"message":"498","line":168,"column":20,"nodeType":"463","messageId":"464","endLine":168,"endColumn":31},{"ruleId":"461","severity":1,"message":"499","line":169,"column":10,"nodeType":"463","messageId":"464","endLine":169,"endColumn":18},{"ruleId":"461","severity":1,"message":"500","line":169,"column":20,"nodeType":"463","messageId":"464","endLine":169,"endColumn":31},{"ruleId":"461","severity":1,"message":"501","line":170,"column":10,"nodeType":"463","messageId":"464","endLine":170,"endColumn":21},{"ruleId":"461","severity":1,"message":"502","line":170,"column":23,"nodeType":"463","messageId":"464","endLine":170,"endColumn":37},{"ruleId":"461","severity":1,"message":"503","line":171,"column":10,"nodeType":"463","messageId":"464","endLine":171,"endColumn":21},{"ruleId":"461","severity":1,"message":"504","line":171,"column":23,"nodeType":"463","messageId":"464","endLine":171,"endColumn":37},{"ruleId":"461","severity":1,"message":"505","line":172,"column":10,"nodeType":"463","messageId":"464","endLine":172,"endColumn":18},{"ruleId":"461","severity":1,"message":"506","line":172,"column":20,"nodeType":"463","messageId":"464","endLine":172,"endColumn":31},{"ruleId":"467","severity":1,"message":"507","line":218,"column":10,"nodeType":"463","endLine":218,"endColumn":19,"suggestions":"508"},{"ruleId":"470","severity":1,"message":"471","line":219,"column":15,"nodeType":"472","messageId":"473","endLine":219,"endColumn":66},{"ruleId":"470","severity":1,"message":"471","line":220,"column":15,"nodeType":"472","messageId":"473","endLine":220,"endColumn":89},{"ruleId":"474","severity":1,"message":"475","line":251,"column":36,"nodeType":"476","messageId":"477","endLine":251,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":253,"column":22,"nodeType":"480","messageId":"481","endLine":253,"endColumn":24},{"ruleId":"474","severity":1,"message":"475","line":270,"column":36,"nodeType":"476","messageId":"477","endLine":270,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":272,"column":26,"nodeType":"480","messageId":"481","endLine":272,"endColumn":28},{"ruleId":"474","severity":1,"message":"475","line":289,"column":36,"nodeType":"476","messageId":"477","endLine":289,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":291,"column":30,"nodeType":"480","messageId":"481","endLine":291,"endColumn":32},{"ruleId":"474","severity":1,"message":"475","line":308,"column":34,"nodeType":"476","messageId":"477","endLine":308,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":310,"column":28,"nodeType":"480","messageId":"481","endLine":310,"endColumn":30},{"ruleId":"474","severity":1,"message":"475","line":327,"column":36,"nodeType":"476","messageId":"477","endLine":327,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":329,"column":32,"nodeType":"480","messageId":"481","endLine":329,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":346,"column":36,"nodeType":"476","messageId":"477","endLine":346,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":348,"column":32,"nodeType":"480","messageId":"481","endLine":348,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":365,"column":36,"nodeType":"476","messageId":"477","endLine":365,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":367,"column":32,"nodeType":"480","messageId":"481","endLine":367,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":384,"column":36,"nodeType":"476","messageId":"477","endLine":384,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":386,"column":32,"nodeType":"480","messageId":"481","endLine":386,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":403,"column":36,"nodeType":"476","messageId":"477","endLine":403,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":405,"column":32,"nodeType":"480","messageId":"481","endLine":405,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":422,"column":36,"nodeType":"476","messageId":"477","endLine":422,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":424,"column":32,"nodeType":"480","messageId":"481","endLine":424,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":441,"column":36,"nodeType":"476","messageId":"477","endLine":441,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":443,"column":32,"nodeType":"480","messageId":"481","endLine":443,"endColumn":34},{"ruleId":"474","severity":1,"message":"475","line":460,"column":36,"nodeType":"476","messageId":"477","endLine":460,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":462,"column":32,"nodeType":"480","messageId":"481","endLine":462,"endColumn":34},{"ruleId":"509","severity":1,"message":"510","line":200,"column":14,"nodeType":"511","messageId":"481","endLine":200,"endColumn":21},{"ruleId":"509","severity":1,"message":"512","line":201,"column":22,"nodeType":"511","messageId":"481","endLine":201,"endColumn":37},{"ruleId":"509","severity":1,"message":"513","line":202,"column":15,"nodeType":"511","messageId":"481","endLine":202,"endColumn":23},{"ruleId":"509","severity":1,"message":"514","line":203,"column":18,"nodeType":"511","messageId":"481","endLine":203,"endColumn":29},{"ruleId":"509","severity":1,"message":"515","line":204,"column":20,"nodeType":"511","messageId":"481","endLine":204,"endColumn":33},{"ruleId":"509","severity":1,"message":"516","line":205,"column":19,"nodeType":"511","messageId":"481","endLine":205,"endColumn":31},{"ruleId":"478","severity":1,"message":"479","line":216,"column":16,"nodeType":"480","messageId":"481","endLine":216,"endColumn":18},{"ruleId":"478","severity":1,"message":"479","line":221,"column":19,"nodeType":"480","messageId":"481","endLine":221,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":226,"column":19,"nodeType":"480","messageId":"481","endLine":226,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":231,"column":21,"nodeType":"480","messageId":"481","endLine":231,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":236,"column":21,"nodeType":"480","messageId":"481","endLine":236,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":241,"column":18,"nodeType":"480","messageId":"481","endLine":241,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":246,"column":18,"nodeType":"480","messageId":"481","endLine":246,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":251,"column":15,"nodeType":"480","messageId":"481","endLine":251,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":256,"column":15,"nodeType":"480","messageId":"481","endLine":256,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":261,"column":15,"nodeType":"480","messageId":"481","endLine":261,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":266,"column":18,"nodeType":"480","messageId":"481","endLine":266,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":271,"column":18,"nodeType":"480","messageId":"481","endLine":271,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":276,"column":15,"nodeType":"480","messageId":"481","endLine":276,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":444,"column":29,"nodeType":"480","messageId":"481","endLine":444,"endColumn":31},{"ruleId":"461","severity":1,"message":"517","line":3,"column":8,"nodeType":"463","messageId":"464","endLine":3,"endColumn":29},{"ruleId":"461","severity":1,"message":"518","line":28,"column":18,"nodeType":"463","messageId":"464","endLine":28,"endColumn":29},{"ruleId":"461","severity":1,"message":"519","line":31,"column":9,"nodeType":"463","messageId":"464","endLine":31,"endColumn":19},{"ruleId":"461","severity":1,"message":"520","line":4,"column":7,"nodeType":"463","messageId":"464","endLine":4,"endColumn":13},{"ruleId":"461","severity":1,"message":"521","line":41,"column":8,"nodeType":"463","messageId":"464","endLine":41,"endColumn":17},{"ruleId":"461","severity":1,"message":"522","line":43,"column":9,"nodeType":"463","messageId":"464","endLine":43,"endColumn":18},{"ruleId":"461","severity":1,"message":"520","line":4,"column":7,"nodeType":"463","messageId":"464","endLine":4,"endColumn":13},{"ruleId":"461","severity":1,"message":"521","line":42,"column":12,"nodeType":"463","messageId":"464","endLine":42,"endColumn":21},{"ruleId":"461","severity":1,"message":"522","line":44,"column":11,"nodeType":"463","messageId":"464","endLine":44,"endColumn":20},{"ruleId":"461","severity":1,"message":"523","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":26},{"ruleId":"470","severity":1,"message":"471","line":48,"column":5,"nodeType":"472","messageId":"473","endLine":75,"endColumn":9},{"ruleId":"474","severity":1,"message":"524","line":48,"column":30,"nodeType":"476","messageId":"525","endLine":48,"endColumn":32},{"ruleId":"478","severity":1,"message":"526","line":86,"column":33,"nodeType":"480","messageId":"481","endLine":86,"endColumn":35},{"ruleId":"478","severity":1,"message":"526","line":93,"column":33,"nodeType":"480","messageId":"481","endLine":93,"endColumn":35},{"ruleId":"478","severity":1,"message":"526","line":100,"column":34,"nodeType":"480","messageId":"481","endLine":100,"endColumn":36},{"ruleId":"478","severity":1,"message":"526","line":107,"column":34,"nodeType":"480","messageId":"481","endLine":107,"endColumn":36},{"ruleId":"470","severity":1,"message":"471","line":132,"column":13,"nodeType":"472","messageId":"473","endLine":132,"endColumn":61},{"ruleId":"470","severity":1,"message":"471","line":133,"column":13,"nodeType":"472","messageId":"473","endLine":133,"endColumn":65},{"ruleId":"470","severity":1,"message":"471","line":134,"column":13,"nodeType":"472","messageId":"473","endLine":134,"endColumn":61},{"ruleId":"461","severity":1,"message":"527","line":2,"column":8,"nodeType":"463","messageId":"464","endLine":2,"endColumn":13},{"ruleId":"461","severity":1,"message":"519","line":14,"column":9,"nodeType":"463","messageId":"464","endLine":14,"endColumn":19},{"ruleId":"461","severity":1,"message":"528","line":3,"column":10,"nodeType":"463","messageId":"464","endLine":3,"endColumn":49},{"ruleId":"461","severity":1,"message":"519","line":26,"column":9,"nodeType":"463","messageId":"464","endLine":26,"endColumn":19},{"ruleId":"461","severity":1,"message":"529","line":27,"column":8,"nodeType":"463","messageId":"464","endLine":27,"endColumn":17},{"ruleId":"461","severity":1,"message":"530","line":28,"column":18,"nodeType":"463","messageId":"464","endLine":28,"endColumn":29},{"ruleId":"531","severity":1,"message":"532","line":62,"column":31,"nodeType":"533","endLine":62,"endColumn":42},{"ruleId":"461","severity":1,"message":"534","line":2,"column":17,"nodeType":"463","messageId":"464","endLine":2,"endColumn":25},{"ruleId":"461","severity":1,"message":"535","line":2,"column":27,"nodeType":"463","messageId":"464","endLine":2,"endColumn":36},{"ruleId":"461","severity":1,"message":"521","line":38,"column":8,"nodeType":"463","messageId":"464","endLine":38,"endColumn":17},{"ruleId":"461","severity":1,"message":"522","line":40,"column":9,"nodeType":"463","messageId":"464","endLine":40,"endColumn":18},{"ruleId":"461","severity":1,"message":"536","line":33,"column":7,"nodeType":"463","messageId":"464","endLine":33,"endColumn":16},{"ruleId":"478","severity":1,"message":"479","line":310,"column":49,"nodeType":"480","messageId":"481","endLine":310,"endColumn":51},{"ruleId":"478","severity":1,"message":"479","line":311,"column":38,"nodeType":"480","messageId":"481","endLine":311,"endColumn":40},{"ruleId":"478","severity":1,"message":"479","line":327,"column":51,"nodeType":"480","messageId":"481","endLine":327,"endColumn":53},{"ruleId":"478","severity":1,"message":"479","line":328,"column":40,"nodeType":"480","messageId":"481","endLine":328,"endColumn":42},{"ruleId":"478","severity":1,"message":"479","line":343,"column":55,"nodeType":"480","messageId":"481","endLine":343,"endColumn":57},{"ruleId":"478","severity":1,"message":"479","line":344,"column":44,"nodeType":"480","messageId":"481","endLine":344,"endColumn":46},{"ruleId":"478","severity":1,"message":"479","line":360,"column":54,"nodeType":"480","messageId":"481","endLine":360,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":361,"column":47,"nodeType":"480","messageId":"481","endLine":361,"endColumn":49},{"ruleId":"470","severity":1,"message":"471","line":374,"column":23,"nodeType":"472","messageId":"473","endLine":374,"endColumn":52},{"ruleId":"478","severity":1,"message":"479","line":430,"column":49,"nodeType":"480","messageId":"481","endLine":430,"endColumn":51},{"ruleId":"461","severity":1,"message":"537","line":6,"column":27,"nodeType":"463","messageId":"464","endLine":6,"endColumn":33},{"ruleId":"461","severity":1,"message":"538","line":6,"column":46,"nodeType":"463","messageId":"464","endLine":6,"endColumn":57},{"ruleId":"461","severity":1,"message":"539","line":157,"column":12,"nodeType":"463","messageId":"464","endLine":157,"endColumn":22},{"ruleId":"461","severity":1,"message":"540","line":157,"column":24,"nodeType":"463","messageId":"464","endLine":157,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":206,"column":49,"nodeType":"480","messageId":"481","endLine":206,"endColumn":51},{"ruleId":"478","severity":1,"message":"479","line":218,"column":51,"nodeType":"480","messageId":"481","endLine":218,"endColumn":53},{"ruleId":"478","severity":1,"message":"479","line":229,"column":55,"nodeType":"480","messageId":"481","endLine":229,"endColumn":57},{"ruleId":"478","severity":1,"message":"479","line":240,"column":54,"nodeType":"480","messageId":"481","endLine":240,"endColumn":56},{"ruleId":"461","severity":1,"message":"521","line":36,"column":8,"nodeType":"463","messageId":"464","endLine":36,"endColumn":17},{"ruleId":"461","severity":1,"message":"522","line":38,"column":7,"nodeType":"463","messageId":"464","endLine":38,"endColumn":16},{"ruleId":"461","severity":1,"message":"536","line":26,"column":7,"nodeType":"463","messageId":"464","endLine":26,"endColumn":16},{"ruleId":"461","severity":1,"message":"529","line":31,"column":12,"nodeType":"463","messageId":"464","endLine":31,"endColumn":21},{"ruleId":"461","severity":1,"message":"541","line":31,"column":23,"nodeType":"463","messageId":"464","endLine":31,"endColumn":35},{"ruleId":"461","severity":1,"message":"483","line":32,"column":12,"nodeType":"463","messageId":"464","endLine":32,"endColumn":24},{"ruleId":"461","severity":1,"message":"484","line":32,"column":26,"nodeType":"463","messageId":"464","endLine":32,"endColumn":41},{"ruleId":"461","severity":1,"message":"485","line":33,"column":12,"nodeType":"463","messageId":"464","endLine":33,"endColumn":24},{"ruleId":"461","severity":1,"message":"486","line":33,"column":26,"nodeType":"463","messageId":"464","endLine":33,"endColumn":41},{"ruleId":"461","severity":1,"message":"487","line":34,"column":12,"nodeType":"463","messageId":"464","endLine":34,"endColumn":26},{"ruleId":"461","severity":1,"message":"488","line":34,"column":28,"nodeType":"463","messageId":"464","endLine":34,"endColumn":45},{"ruleId":"461","severity":1,"message":"489","line":35,"column":12,"nodeType":"463","messageId":"464","endLine":35,"endColumn":26},{"ruleId":"461","severity":1,"message":"490","line":35,"column":28,"nodeType":"463","messageId":"464","endLine":35,"endColumn":45},{"ruleId":"461","severity":1,"message":"491","line":36,"column":12,"nodeType":"463","messageId":"464","endLine":36,"endColumn":23},{"ruleId":"461","severity":1,"message":"492","line":36,"column":25,"nodeType":"463","messageId":"464","endLine":36,"endColumn":39},{"ruleId":"461","severity":1,"message":"493","line":37,"column":12,"nodeType":"463","messageId":"464","endLine":37,"endColumn":23},{"ruleId":"461","severity":1,"message":"494","line":37,"column":25,"nodeType":"463","messageId":"464","endLine":37,"endColumn":39},{"ruleId":"461","severity":1,"message":"495","line":38,"column":12,"nodeType":"463","messageId":"464","endLine":38,"endColumn":20},{"ruleId":"461","severity":1,"message":"496","line":38,"column":22,"nodeType":"463","messageId":"464","endLine":38,"endColumn":33},{"ruleId":"461","severity":1,"message":"497","line":39,"column":12,"nodeType":"463","messageId":"464","endLine":39,"endColumn":20},{"ruleId":"461","severity":1,"message":"498","line":39,"column":22,"nodeType":"463","messageId":"464","endLine":39,"endColumn":33},{"ruleId":"461","severity":1,"message":"499","line":40,"column":12,"nodeType":"463","messageId":"464","endLine":40,"endColumn":20},{"ruleId":"461","severity":1,"message":"500","line":40,"column":22,"nodeType":"463","messageId":"464","endLine":40,"endColumn":33},{"ruleId":"461","severity":1,"message":"501","line":41,"column":12,"nodeType":"463","messageId":"464","endLine":41,"endColumn":23},{"ruleId":"461","severity":1,"message":"502","line":41,"column":25,"nodeType":"463","messageId":"464","endLine":41,"endColumn":39},{"ruleId":"461","severity":1,"message":"503","line":42,"column":12,"nodeType":"463","messageId":"464","endLine":42,"endColumn":23},{"ruleId":"461","severity":1,"message":"504","line":42,"column":25,"nodeType":"463","messageId":"464","endLine":42,"endColumn":39},{"ruleId":"461","severity":1,"message":"505","line":43,"column":12,"nodeType":"463","messageId":"464","endLine":43,"endColumn":20},{"ruleId":"461","severity":1,"message":"506","line":43,"column":22,"nodeType":"463","messageId":"464","endLine":43,"endColumn":33},{"ruleId":"461","severity":1,"message":"521","line":37,"column":8,"nodeType":"463","messageId":"464","endLine":37,"endColumn":17},{"ruleId":"461","severity":1,"message":"522","line":39,"column":9,"nodeType":"463","messageId":"464","endLine":39,"endColumn":18},{"ruleId":"461","severity":1,"message":"542","line":80,"column":7,"nodeType":"463","messageId":"464","endLine":80,"endColumn":11},{"ruleId":"478","severity":1,"message":"479","line":185,"column":18,"nodeType":"480","messageId":"481","endLine":185,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":188,"column":18,"nodeType":"480","messageId":"481","endLine":188,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":191,"column":18,"nodeType":"480","messageId":"481","endLine":191,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":194,"column":18,"nodeType":"480","messageId":"481","endLine":194,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":202,"column":18,"nodeType":"480","messageId":"481","endLine":202,"endColumn":20},{"ruleId":"474","severity":1,"message":"524","line":207,"column":22,"nodeType":"476","messageId":"525","endLine":207,"endColumn":24},{"ruleId":"478","severity":1,"message":"479","line":211,"column":26,"nodeType":"480","messageId":"481","endLine":211,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":216,"column":21,"nodeType":"480","messageId":"481","endLine":216,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":221,"column":19,"nodeType":"480","messageId":"481","endLine":221,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":291,"column":51,"nodeType":"480","messageId":"481","endLine":291,"endColumn":53},{"ruleId":"461","severity":1,"message":"542","line":80,"column":7,"nodeType":"463","messageId":"464","endLine":80,"endColumn":11},{"ruleId":"478","severity":1,"message":"479","line":186,"column":18,"nodeType":"480","messageId":"481","endLine":186,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":189,"column":18,"nodeType":"480","messageId":"481","endLine":189,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":192,"column":18,"nodeType":"480","messageId":"481","endLine":192,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":195,"column":18,"nodeType":"480","messageId":"481","endLine":195,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":203,"column":18,"nodeType":"480","messageId":"481","endLine":203,"endColumn":20},{"ruleId":"474","severity":1,"message":"524","line":208,"column":22,"nodeType":"476","messageId":"525","endLine":208,"endColumn":24},{"ruleId":"478","severity":1,"message":"479","line":212,"column":26,"nodeType":"480","messageId":"481","endLine":212,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":217,"column":21,"nodeType":"480","messageId":"481","endLine":217,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":222,"column":19,"nodeType":"480","messageId":"481","endLine":222,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":292,"column":51,"nodeType":"480","messageId":"481","endLine":292,"endColumn":53},{"ruleId":"461","severity":1,"message":"543","line":3,"column":8,"nodeType":"463","messageId":"464","endLine":3,"endColumn":16},{"ruleId":"461","severity":1,"message":"544","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":18},{"ruleId":"461","severity":1,"message":"545","line":10,"column":10,"nodeType":"463","messageId":"464","endLine":10,"endColumn":17},{"ruleId":"461","severity":1,"message":"546","line":11,"column":10,"nodeType":"463","messageId":"464","endLine":11,"endColumn":26},{"ruleId":"461","severity":1,"message":"535","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":26},{"ruleId":"461","severity":1,"message":"534","line":1,"column":28,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},"no-native-reassign",["547"],"no-negated-in-lhs",["548"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'RideSelect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getAttractions, props.location.ride_name] as a second argument to the useEffect Hook.",["549"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setRideName' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.ride_name] as a second argument to the useEffect Hook.",["550"],"no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","'IntervalsCountDisplay' is defined but never used.","'setStatList' is assigned a value but never used.","'styleLight' is assigned a value but never used.","'Button' is assigned a value but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'Component' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.","'Axios' is defined but never used.","'MdSignalCellularConnectedNoInternet4Bar' is defined but never used.","'ride_name' is assigned a value but never used.","'setRideList' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","'styleBlue' is assigned a value but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'setRide_name' is assigned a value but never used.","'Form' is assigned a value but never used.","'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},"Add dependencies array: [getAttractions, props.location.ride_name]",{"range":"555","text":"556"},"Add dependencies array: [props.location.ride_name]",{"range":"557","text":"558"},[5493,5493],", [getAttractions, props.location.ride_name]",[5096,5096],", [props.location.ride_name]"]