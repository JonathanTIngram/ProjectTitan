[{"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js":"1","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js":"2","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js":"3","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js":"4","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js":"5","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js":"6","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js":"7","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js":"8","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js":"9","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js":"10","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js":"11","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js":"12","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js":"13","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js":"14","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js":"15","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js":"16","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js":"17","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js":"18","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js":"19","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js":"20","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js":"21","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js":"22","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js":"23","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js":"24","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js":"25","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js":"26","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js":"27","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js":"28","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js":"29","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js":"30","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js":"31","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js":"32","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js":"33","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js":"34","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js":"35","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js":"36","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js":"37","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js":"38","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js":"39","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js":"40","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js":"41","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js":"42","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js":"43","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js":"44","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js":"45","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js":"46","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js":"47","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js":"48","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js":"49","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js":"50","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js":"51","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js":"52","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js":"53","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js":"54","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js":"55","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js":"56"},{"size":479,"mtime":1620923128000,"results":"57","hashOfConfig":"58"},{"size":2076,"mtime":1620923128000,"results":"59","hashOfConfig":"58"},{"size":327,"mtime":1620923128000,"results":"60","hashOfConfig":"58"},{"size":1266,"mtime":1620923128000,"results":"61","hashOfConfig":"58"},{"size":341,"mtime":1620923128000,"results":"62","hashOfConfig":"58"},{"size":307,"mtime":1620923128000,"results":"63","hashOfConfig":"58"},{"size":2220,"mtime":1620923128000,"results":"64","hashOfConfig":"58"},{"size":18592,"mtime":1622579988473,"results":"65","hashOfConfig":"58"},{"size":351,"mtime":1620923128000,"results":"66","hashOfConfig":"58"},{"size":14253,"mtime":1622061569640,"results":"67","hashOfConfig":"58"},{"size":15809,"mtime":1622234087759,"results":"68","hashOfConfig":"58"},{"size":723,"mtime":1620923128000,"results":"69","hashOfConfig":"58"},{"size":803,"mtime":1620923128000,"results":"70","hashOfConfig":"58"},{"size":1817,"mtime":1620923128000,"results":"71","hashOfConfig":"58"},{"size":2096,"mtime":1620923128000,"results":"72","hashOfConfig":"58"},{"size":952,"mtime":1620923128000,"results":"73","hashOfConfig":"58"},{"size":1612,"mtime":1620923128000,"results":"74","hashOfConfig":"58"},{"size":3520,"mtime":1620923128000,"results":"75","hashOfConfig":"58"},{"size":570,"mtime":1620923128000,"results":"76","hashOfConfig":"58"},{"size":516,"mtime":1620923128000,"results":"77","hashOfConfig":"58"},{"size":580,"mtime":1620923128000,"results":"78","hashOfConfig":"58"},{"size":571,"mtime":1620923128000,"results":"79","hashOfConfig":"58"},{"size":558,"mtime":1620923128000,"results":"80","hashOfConfig":"58"},{"size":2405,"mtime":1620923128000,"results":"81","hashOfConfig":"58"},{"size":2591,"mtime":1620968392536,"results":"82","hashOfConfig":"58"},{"size":1590,"mtime":1620923128000,"results":"83","hashOfConfig":"58"},{"size":2720,"mtime":1620968388765,"results":"84","hashOfConfig":"58"},{"size":2430,"mtime":1620923128000,"results":"85","hashOfConfig":"58"},{"size":1769,"mtime":1620923128000,"results":"86","hashOfConfig":"58"},{"size":3177,"mtime":1620923128000,"results":"87","hashOfConfig":"58"},{"size":1224,"mtime":1620923128000,"results":"88","hashOfConfig":"58"},{"size":4734,"mtime":1620968391456,"results":"89","hashOfConfig":"58"},{"size":4191,"mtime":1622233828715,"results":"90","hashOfConfig":"58"},{"size":1244,"mtime":1622231199381,"results":"91","hashOfConfig":"58"},{"size":507,"mtime":1620923128000,"results":"92","hashOfConfig":"58"},{"size":2284,"mtime":1620968465147,"results":"93","hashOfConfig":"58"},{"size":8030,"mtime":1620968462513,"results":"94","hashOfConfig":"58"},{"size":11957,"mtime":1620968385742,"results":"95","hashOfConfig":"58"},{"size":211,"mtime":1620923128000,"results":"96","hashOfConfig":"58"},{"size":8485,"mtime":1622577503051,"results":"97","hashOfConfig":"58"},{"size":6650,"mtime":1620968459410,"results":"98","hashOfConfig":"58"},{"size":1100,"mtime":1622232631802,"results":"99","hashOfConfig":"58"},{"size":4001,"mtime":1620923128000,"results":"100","hashOfConfig":"58"},{"size":1696,"mtime":1622231293814,"results":"101","hashOfConfig":"58"},{"size":6853,"mtime":1620923128000,"results":"102","hashOfConfig":"58"},{"size":3854,"mtime":1622579115245,"results":"103","hashOfConfig":"58"},{"size":1681,"mtime":1620923128000,"results":"104","hashOfConfig":"58"},{"size":346,"mtime":1620923128000,"results":"105","hashOfConfig":"58"},{"size":2265,"mtime":1620923128000,"results":"106","hashOfConfig":"58"},{"size":448,"mtime":1620923128000,"results":"107","hashOfConfig":"58"},{"size":521,"mtime":1620923128000,"results":"108","hashOfConfig":"58"},{"size":362,"mtime":1620923128000,"results":"109","hashOfConfig":"58"},{"size":2051,"mtime":1620923128000,"results":"110","hashOfConfig":"58"},{"size":997,"mtime":1620923128000,"results":"111","hashOfConfig":"58"},{"size":4356,"mtime":1620708951894,"results":"112","hashOfConfig":"58"},{"size":2267,"mtime":1622578811047,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"k88cjp",{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js",[],["250","251"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js",["252","253"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Logout from './pages/logout';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n      \n    { this.state.user ? (  <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/logout' component={Logout}/>\n      </Switch> ) : ( <Login /> ) }\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  border-bottom: 25px solid lightgray;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n\nexport const DeleteLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\npadding-right: 40%;\npadding-left: 40%;\n`\n\nconst RideSelect = styled.select`\n    align: right;\n`\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage() {\n\n\n\n  //states\n  const [ride_name, setRide_name] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\n\nconst deleteAttraction = (ride_name) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${rideSelect}`);\n};\n\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/DeletePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/DeletePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/DeletePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </DeleteBar>\n    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}>\n                        <option>Select Attraction</option>\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n\n    </RideSelect>\n    <EditBorder>\n    <InfoBar> Basic Information</InfoBar>\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n\n        <tr>\n        <td>Name</td>\n        <td>                 \n        \n          <label>{attractionList.map((val, key) => {\n                var ride_name;\n                if (rideSelect == val.ride_name){\n                    ride_name = val.ride_name;\n                }\n              return (\n                  <> \n                    {ride_name}   \n                  </>\n              );\n              })}\n            </label>\n\n        </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n           \n          <label>{attractionList.map((val, key) => {\n              var dailyOpening;\n              if (rideSelect == val.ride_name){\n                  dailyOpening = val.dailyOpening;\n              }\n            return (\n                <> \n                  {dailyOpening}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n              }\n            return (\n                <> \n                  {theoryCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var targetCapacity;\n              if (rideSelect == val.ride_name){\n                  targetCapacity = val.targetCapacity;\n              }\n            return (\n                <> \n                  {targetCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var maxVehicles;\n              if (rideSelect == val.ride_name){\n                  maxVehicles = val.maxVehicles;\n              }\n            return (\n                <> \n                  {maxVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var minVehicles;\n              if (rideSelect == val.ride_name){\n                  minVehicles = val.minVehicles;\n              }\n            return (\n                <> \n                  {minVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n\n           <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var maxStaff;\n              if (rideSelect == val.ride_name){\n                  maxStaff = val.maxStaff;\n              }\n            return (\n                <> \n                  {maxStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var minStaff;\n              if (rideSelect == val.ride_name){\n                  minStaff = val.minStaff;\n              }\n            return (\n                <> \n                  {minStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var parkSection;\n              if (rideSelect == val.ride_name){\n                  parkSection = val.parkSection;\n              }\n            return (\n                <> \n                  {parkSection}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n          \n        <label>{attractionList.map((val, key) => {\n              var weatherCode;\n              if (rideSelect == val.ride_name){\n                  weatherCode = val.weatherCode;\n              }\n            return (\n                <> \n                  {weatherCode}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Type</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var rideType;\n              if (rideSelect == val.ride_name){\n                  rideType = val.rideType;\n              }\n            return (\n                <> \n                  {rideType}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n      \n        </tbody>\n\n          <DeleteButton onClick={() => {\n            deleteAttraction(ride_name) //ride selected in drop down menu\n            window.alert(`The ride: ${rideSelect} has been deleted`);\n            window.location.href='/newAttraction';\n          }}>Delete Attraction</DeleteButton>\n\n        </table>\n\n\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\nimport { NavLink as Link, Redirect } from 'react-router-dom';\nimport FileUpload from '../components/FileUpload/FileUpload'; \nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nimport { useHistory } from 'react-router-dom';\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const CreateLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 660px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 615px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow-y: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  text-align: center;\n  border-bottom: 2px solid;\n  width: 113%;\n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 40%;\n    width: 30%;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 18px;\n    width: 30%;\n    height: 40%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0;\n    border: 2px solid;\n    overflow-y: auto;\n`;\n\nconst ReportInfo = styled.div`\n    overflow-y: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 357px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst CreateButton = styled.button`\n    padding-right: 40%;\n    padding-left: 40%;\n    height: 8%;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function CreatePage() {\n\n\n//states\n//for getting attraction \nconst [ride_name, setRide_name] = useState('');\nconst [dailyOpening, setDailyOpening] = useState('');\nconst [dailyClosing, setDailyClosing] = useState('');\nconst [theoryCapacity, setTheoryCapacity] = useState('');\nconst [targetCapacity, setTargetCapacity] = useState('');\nconst [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n\n//for getting safety critcal information\nconst [maxWind, setMaxWind] = useState('');\nconst [minTemp, setMinTemp] = useState('');\nconst [powerRedundancy, setPowerRedundancy] = useState('');\nconst [numGates, setNumGates] = useState('');\n\n//for getting phone information\nconst [ridePrimary, setRidePrimary] = useState('');\nconst [rideSecondary, setRideSecondary] = useState('');\nconst [rideTertiary, setRideTertiary] = useState('');\n\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\nconst submitAttraction = () =>{\n  Axios.post('http://localhost:3001/addAttraction', {\n    ride_name: ride_name,\n    dailyOpening: dailyOpening,\n    dailyClosing: dailyClosing,\n    theoryCapacity: theoryCapacity,\n    targetCapacity: targetCapacity,\n    minVehicles: minVehicles,\n    maxVehicles: maxVehicles,\n    maxSeats: maxSeats,\n    minStaff: minStaff,\n    maxStaff: maxStaff,\n    parkSection: parkSection,\n    weatherCode: weatherCode,\n    rideType: rideType,\n    maxWind: maxWind,\n    minTemp, minTemp,\n    powerRedundancy, powerRedundancy,\n    numGates, numGates,\n    ridePrimary, ridePrimary,\n    rideSecondary, rideSecondary,\n    rideTertiary, rideTertiary\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nvar emptyBoxArray = [];\nconst checkEmpty = () => {\n  var empty = false;\n  if(ride_name == '') {\n    alert(\"Ride name is empty\");\n    emptyBoxArray.push('ride_nameID');\n    empty = true;\n  }\n  if(dailyOpening == '') {\n    alert(\"Daily Opening is empty\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  if(dailyClosing == '') {\n    alert(\"Daily Closing is empty\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  if(theoryCapacity == '') {\n    alert(\"Theoretical Capacity is empty\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  if(targetCapacity == '') {\n    alert(\"Target Capacity is empty\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  if(maxVehicles == '') {\n    alert(\"Max Vehicles is empty\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  if(minVehicles == '') {\n    alert(\"Min Vehicles is empty\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  if(maxSeats == '') {\n    alert(\"Max seats is empty\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  if(maxStaff == '') {\n    alert(\"Max Staff is empty\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  if(minStaff == '') {\n    alert(\"Min Staff is empty\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  if(parkSection == '') {\n    alert(\"Park Section is empty\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  if(weatherCode == '') {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  if(rideType == '') {\n    alert(\"Ride Type is empty\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nlet history = useHistory();\n\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\nreturn (\n  \n    <>\n    \n    <Navbar/>\n    <Banner/>\n    <OuterBorder>\n    <CreateBar> Create a new Attraction \n    <Nav>\n         <NavMenu>\n             <NavLink to='/CreatePage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/CreatePage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/CreatePage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n    <EditBorder>\n      <InfoBar> Basic Information </InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n        <tr>\n        <td>Name</td>\n        <td>              \n                <input id='ride_nameID' type='text' name='ride_name' onChange={(e) => {\n                  setRide_name(e.target.value);\n                }}></input> </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n              <input id='dailyOpeningID' type='time' name='dailyOpening' onChange={(e) => {\n                        setDailyOpening(e.target.value);\n                      }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n            <input id='dailyClosingID' type='time' name='dailyClosing' onChange={(e) => {\n                      setDailyClosing(e.target.value);\n                    }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n            <input id='theoryCapacityID' type='number' name='theoryCapacity' onChange={(e) => {\n                          setTheoryCapacity(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n            <input id='targetCapacityID' type='number' name='targetCapcity' onChange={(e) => {\n                          setTargetCapacity(e.target.value);\n                        }}></input>  \n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Vehicles</td>\n        <th>\n            <input id='maxVehiclesID' type='number' name='maxVehicles' onChange={(e) => {\n                          setMaxVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Vehicles</td>\n        <th>\n            <input id='minVehiclesID'type='number' name='minVehicles' onChange={(e) => {\n                          setMinVehicles(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n            <input id='maxSeatsID' type='number' name='maxSeats' onChange={(e) => {\n                          setMaxSeats(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Max Employees</td>\n        <th>\n            <input id='maxStaffID' type='number' name='maxStaff' onChange={(e) => {\n                          setMaxStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Min Employees</td>\n        <th>\n            <input id='minStaffID' type='number' name='minStaff' onChange={(e) => {\n                          setMinStaff(e.target.value);\n                        }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n              <input id='parkSectionID' type='text' name='parkSection' onChange={(e) => {\n                            setParkSection(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n              <input id='weatherCodeID' type='text' name='weatherCode' onChange={(e) => {\n                            setWeatherCode(e.target.value);\n                          }}></input>\n        </th>\n        </tr>\n        <tr>\n        <td>Type</td>\n        <th>\n            <input id='rideTypeID' type='text' name='rideType' onChange={(e) => {\n                          setRideType(e.target.value);\n              }}></input>\n        </th>\n        </tr>\n        \n        </tbody>\n\n        </table>\n        <CreateButton onClick={() => { \n            if(checkEmpty() == true){\n              window.alert(\"Data entry error\")\n              changeInputColor(emptyBoxArray);\n              console.log(emptyBoxArray);\n            }\n            else { \n              window.alert(`The ride: ${ride_name} has been created`)\n              submitAttraction();\n              history.push('/newAttraction')\n        }\n        }}>Create Attraction</CreateButton>\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n    <Upload>\n        <FileUpload />  \n    </Upload>\n    <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>\n                        <input type='text' name='weatherCode' onChange={(e) => {\n                          setWeatherCode(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>\n                        <input type='text' name='maxWind' onChange={(e) => {\n                          setMaxWind(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>\n                        <input type='text' name='minTemp' onChange={(e) => {\n                          setMinTemp(e.target.value);\n                        }}></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>\n                        <input type='text' name='powerRedundancy' onChange={(e) => {\n                          setPowerRedundancy(e.target.value);\n                        }}></input>\n\n            </td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>              \n                        <input type='text' name='numGates' onChange={(e) => {\n                          setNumGates(e.target.value);\n                        }}></input>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>\n                      <input type='text' name='ridePrimary' onChange={(e) => {\n                          setRidePrimary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>\n                        <input type='text' name='rideSecondary' onChange={(e) => {\n                          setRideSecondary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>\n                        <input type='text' name='rideTeriary' onChange={(e) => {\n                            setRideTertiary(e.target.value);\n                        }}></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js",["357"],"import React from 'react'\nimport QuickToolsMain from '../components/Main/QuickToolsMain'\nimport IntervalsCountDisplay from '../components/Interval/IntervalsCountDisplay'\nimport Attraction from '../components/Interval/AttractionIntervals'\nimport ParkwideIntervals from '../components/Interval/ParkwideIntervals'\nimport MainCodeMenu from '../components/Main/MainCodeMenu'\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nconst Interval = () => {\n    return (\n        <>  \n            <Navbar/>\n            <Banner/>\n            <QuickToolsMain></QuickToolsMain>\n            <MainCodeMenu></MainCodeMenu>\n            <Attraction></Attraction>\n            <ParkwideIntervals></ParkwideIntervals>\n        </>\n      \n      );\n}\n\nexport default  Interval","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js",["358","359"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js",["360","361"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js",["362","363","364","365","366"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { MdSignalCellularConnectedNoInternet4Bar } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nconst sendRideName = (rideList) =>{\n  Axios.post('http://localhost:3001/sendRideNameBackend', {\n    rideList: rideList\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nfunction RideCheck() {\n  \n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  //recieve data from backend to display\n\n\n\n  //recieve data from backend to display\nconst GetAttractions = () => {\n      //console.log(res.data)\n      useEffect(() => {\n          Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n          }).catch(err => console.log(err));\n          }, [])\n}\n\n  \n  return (\n    <div>\n      {window.addEventListener('load', GetAttractions())}\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n\n                {attractionList.map((val, key) => {\n                  return (\n                    <>     \n                   \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td><input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n                console.log(rideList)\n                sendRideName(rideList);\n                setTimeout(function(){\n                  window.location.reload(); \n                 }, 2);\n      }\n      }>Submit</SubmitButton>\n    </div>\n  );\n}\nexport default RideCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js",["367","368"],"import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\n\nfunction StatCheck() {\n\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ];\n\n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n\n                  onClick={() => {\n                    console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        console.log(statList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default StatCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js",["369","370"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport styled from 'styled-components';\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default DayCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js",["371","372","373"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js",["374","375","376"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n\n`;\n\nconst FavoriteBar = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n    return (\n        <>\n        <SideNav>\n           <FavButton>My Favorite1</FavButton>\n           <FavButton>My Favorite2 </FavButton>\n           <FavButton>My Favorite3</FavButton>\n           <FavButton>My Favorite4</FavButton>\n           <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js",["377","378","379","380","381","382","383","384","385","386"],"import React, { Component, useState, useEffect} from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n        \n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    let index = 0;\n    var rList = [];\n    var wList = [];\n    var tList = [];\n    var asList = [];\n    var adList = [];\n    var timeList = [];\n    var dateList = [];\n\n\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            var time = val.ts;\n            time = time.substring(11,19)\n            var date= val.ts;\n            date = date.substring(0,10)\n            index = index + 1;\n            console.log(\"Ride name = \", val.ride_name);\n            console.log(\"Time = \", time);\n            console.log(\"Date = \", date);\n            rList.push(val.ride_name);\n            timeList.push(time);\n            dateList.push(date)\n            console.log(\"Wait Time = \", val.WaitTime);\n            wList.push(val.WaitTime);\n        \n            console.log(\"Throughput = \", val.Throughput)\n            tList.push(val.Throughput);\n\n\n            console.log(\"Available Seats = \", val.AvailableSeats)\n            asList.push(val.AvailableSeats);\n            console.log(\"Available Down = \", val.AvailableDown)\n            adList.push( val.AvailableDown);\n\n            console.log('');\n     }\n     })}\n\n     const compareRide = () => {\n        for(var i = 0; i < index; i++) {\n            //check box list is compared with collected data\n            if(rideList.includes(rList[i])) {\n                console.log(\"Matched \", rList[i]);\n                //each variable is compared with the selected stat\n                if(statList.includes(\"Wait Time\"))\n                {\n                    //locate variable\n                    if(wList[i] != -1) {\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n                     } \n                }\n                if(statList.includes(\"Throughput\"))\n                {\n                     //locate variable\n                    if(tList[i] != -1) {\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n                    }\n                }\n                if(statList.includes(\"Available Seats\"))\n                {\n                     //locate variable\n                    if(asList[i] != -1) {\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n                    }\n                }   \n                if(statList.includes(\"Available Down\"))\n                {\n                     //locate variable\n                    if(adList[i] != -1) {\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n                    }\n                }\n\n                \n                console.log('');\n            }\n        }\n    }\n     \n    const data = [\n        {\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n  \n            ]\n        }\n    ];  \n\n    return (\n\n        <div>\n\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {console.log(\"Amount of rides \", index)}\n            {console.log(\"Ride names = \", rList)}\n            {console.log(\"TimeList = \", timeList)}\n            {console.log(\"DateList = \", dateList)}\n            {console.log(\"WaitList = \", wList)}\n            {console.log(\"ThroughputList = \", tList)}\n            {console.log(\"AvailableSeatList = \", asList)}\n            {console.log(\"AvailableDownList = \", adList)}\n\n\n            {compareRide()}\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.5%;\nheight: 83.5%;\n`;\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr style = {styleGray}>\n                        <th scope=\"col\">Ride Name</th>\n                        <th scope=\"col\">Daily Opening</th>\n                        <th scope=\"col\">Daily Closing</th>\n                        <th scope=\"col\">Theoretical Capacity</th>\n                        <th scope=\"col\">Target Capacity</th>\n                        <th scope=\"col\">Minimum Vehicles</th>\n                        <th scope=\"col\">Maximum Vehicles</th>\n                        <th scope=\"col\">Maximum Seats</th>\n                        <th scope=\"col\">Minimum Staff</th>\n                        <th scope=\"col\">Maximum Staff</th>\n                        <th scope=\"col\">Park Section</th>\n                        <th scope=\"col\">Weather Code</th>\n                        <th scope=\"col\">Type</th>\n                    </tr>\n                </thead>\n\n                {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        return (\n                <tbody>\n                    <tr>\n                        <td><NavLink to = {{\n                            pathname:'/rideInfo',\n                            ride_name: {ride}\n                            \n                        }}>{val.ride_name}</NavLink></td>\n                        <td>{val.dailyOpening}</td>\n                        <td>{val.dailyClosing}</td>\n                        <td>{val.theoryCapacity}</td>\n                        <td>{val.targetCapacity}</td>\n                        <td>{val.minVehicles}</td>\n                        <td>{val.maxVehicles}</td>\n                        <td>{val.maxSeats}</td>\n                        <td>{val.minStaff}</td>\n                        <td>{val.maxStaff}</td>\n                        <td>{val.parkSection}</td>\n                        <td>{val.weatherCode}</td>\n                        <td>{val.rideType}</td>\n                    </tr>\n                </tbody>\n                        );\n                    })}\n                \n            </table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js",["414","415"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nposition: absolute;\n  right: 5px;\n  width: 11.5%;\n  height: 250px;\n  margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding: 3px;\nfont-size: 20px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsPanel = () => {\nconst [showModal, setShowModal] = useState(false);\n\nconst openModal = () => {\nsetShowModal(prev => !prev);\n};\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <NavLink to = '/CreatePage'>\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\n                    </NavLink>\n\n\n\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsPanel","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js",["416"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://localhost:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay\n","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js",["417","418","419","420","421","422","423","424"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .9%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\n\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n\n`\n\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`\nconst ParkwideIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const [parkIntervalList, setParkIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState('');\n\n    const deleteInterval = (id) => {\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n        };\n    \n    //edit info\n    const [WaitTime, setWaitTime] = useState('');\n    const [Throughput, setThroughput] = useState('');\n    const [AvailableSeats, setAvailableSeats] = useState('');\n    const [AvailableDown, setAvailableDown] = useState('');\n\n    const editParkInterval = (id) =>{\n        Axios.put('http://localhost:3001/editParkInterval', {\n\n            id: id,\n            WaitTime: WaitTime,\n            Throughput: Throughput,\n            AvailableSeats: AvailableSeats,\n            AvailableDown: AvailableDown\n                        \n            }).then(() =>{\n            alert('successful insert');\n\n        }).then( () => {\n            console.log(\"Successfully sent to port 3001\");\n        });\n        };\n        \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n            {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n            {parkIntervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/></CardTime>\n \n                        <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    editParkInterval(id);\n                                    window.location.reload(); \n                                }}>Submit</SubmitButton>\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js",["425","426","427","428","429","430"],"import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\noverflow: hidden;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\noverflow: auto;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  overflow: hidden;\n`\n\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 15px;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n\n`\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\n\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const styleGray = {backgroundColor : '#AFAFAF'};\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n\n        //states\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n        var cardCount = 0;\n        var currentRide = '';\n\n\n        //state to get all attractions\n        const [attractionList, setAttractionList] = useState([]);\n        //recieve data from backend to display\n        const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n          //edit info\n          const [WaitTime, setWaitTime] = useState('');\n          const [Throughput, setThroughput] = useState('');\n          const [AvailableSeats, setAvailableSeats] = useState('');\n          const [AvailableDown, setAvailableDown] = useState('');\n\n          const editInterval = (id, rideName) =>{\n            Axios.put('http://localhost:3001/editInterval', {\n\n                id: id,\n                ride_name: rideName,\n                WaitTime: WaitTime,\n                Throughput: Throughput,\n                AvailableSeats: AvailableSeats,\n                AvailableDown: AvailableDown\n                          \n                }).then(() =>{\n                alert('successful insert');\n\n            }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n            });\n          };\n          \n      \n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        return (\n                            <div>\n                                \n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n                    {currentRide = val.ride_name}\n                    {cardCount = cardCount + 1}\n\n\n                        return (\n                            <>\n\n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    editInterval(id, val.ride_name);\n                                    window.location.reload(); \n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            \n                            </>\n                        );\n                        })}\n            </AddIntervalsBorder>\n            <Border>\n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr><td>{currentRide}</td><td>{cardCount}</td></tr>\n                    </tbody>\n\n                    {/* {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                 \n                        return(\n                    <tbody>\n                        <tr><td>{ride}</td><td>{cardCount}</td></tr>\n                    </tbody>\n                        );\n                    })} */}\n\n             \n                </table>\n                </InfoContainer>    \n\n            </Border>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js",["431","432","433","434","435","436","437","438","439","440","441","442","443"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nexport const Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\n\nexport const AttractionModal = ({ showModal, setShowModal, ride }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [ride_name, setRideName] = useState('');\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addInterval', {\n                  ride_name: ride,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n  var emptyBoxArray = [];\n  const changeInputColor = (emptyBoxArray) => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(document.getElementById(element));\n      if(element == \"dataID\"){\n        console.log(\"no checks\")\n        document.getElementById(\"collectDataID\").style.color = \"red\";\n      }\n      else {\n        document.getElementById(element).style.background = \"pink\";\n      }\n\n  }\n}\n  \nvar checkArray = [];\n  const checkEmpty = () => {\n    var empty = false;\n    if(timeValue == '') {\n      alert(\"Time Value is empty\");\n      emptyBoxArray.push('timeValueID');\n      empty = true;\n    }\n    typeState.map((d, i)=>  {\n    if (d.select === false) {\n        checkArray.push(d.type)\n    }})\n    if(checkArray.length == typeState.length) {\n      alert(\"No checkboxes are selected\");\n      emptyBoxArray.push('dataID');\n      empty = true;\n    }\n    if(startingTime == '') {\n      alert(\"Starting Time is empty\");\n      emptyBoxArray.push('startingTimeID');\n      empty = true;\n    }\n    if(endingTime == '') {\n      alert(\"Ending Time is empty\");\n      emptyBoxArray.push('endingTimeID');\n      empty = true;\n    }\n    return empty;\n  }\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                {/* <form> Ride Name</form>\n                <InputStyle type='text' name='Name' onChange={(e) => {\n                  setRideName(e.target.value);\n                }}></InputStyle> */}\n                <form>Time Value:</form>\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form id='collectDataID'>Collect:            </form>\n                  <Menu>\n                  \n                {typeState.map((d, i) => ( \n             \n                <TR key={d.id}>\n             <th>\n                \n                <input \n                  id=\"dataID\"\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n                </th>\n              <td>{d.type}</td>\n                  \n            </TR>\n        \n                ))} \n                </Menu>\n\n                <form>Starting:</form>\n\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form>Ending:</form>\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n<Submit \n                onClick={() => {\n\n                                  if(checkEmpty() == true){\n                                    changeInputColor(emptyBoxArray);\n                                  }\n                                  else {\n                                    setShowModal(prev => !prev);\n                                    submitInterval();\n                                    setTimeout(function(){\n                                      window.location.reload(); \n                                    }, 1);\n                                  }\n\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js",["444","445","446","447","448"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\nimport IntervalPage from '../../pages/interval'\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nexport const Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nexport const ParkwideModal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n\n\n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addParkInterval', {\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n\n                    const checkData = {\n                      isChecked: true,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  else {\n                    const checkData = {\n                      isChecked: false,\n                      id: d.id,\n                      type: d.type\n                    }\n                    //[d.id, d.type, d.select]                    \n\n                    return checkData;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n\n  const getIntervals = () => {\n    Axios.get('http://localhost:3001/getParkInterval').then( (res) => {\n      console.log(res); //response\n      setIntervalList(res.data);\n    });\n  }\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                <form>Time Value:</form>\n                <InputStyle type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n\n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n\n                </th>\n              <td>{d.type}</td>\n            </TR>\n                ))}\n                </Menu>\n\n                <form>Starting:</form>\n                <InputStyle type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form>Ending:</form>\n                <InputStyle type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n                <Submit \n                onClick={() => { setShowModal(prev => !prev);\n                                  submitInterval();\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                }, 1);\n                               }}> Submit </Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js",["449","450","451","452"],"import React, { useState, useRef, useEffect, useCallback, Component } from 'react';\nimport BasicInfo from '../components/RideInfo/BasicInfo';\nimport CollectedData from '../components/RideInfo/CollectedData';\nimport QuickToolsBasicInfo from '../components/RideInfo/QuickToolsBasicInfo';\nimport Interval from '../components/RideInfo/SubIntervals';\nimport Options from '../components/RideInfo/Options';\nimport Graph from '../components/RideInfo/MiniGraph';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nclass RideInfo extends Component {\n    \n\n    render () {\n\n    return (\n        <>\n        <Navbar/>\n        <Banner/>\n        {console.log(this.props.location.ride_name.ride)}\n        <BasicInfo ride_name={this.props.location.ride_name.ride}></BasicInfo>\n        <CollectedData></CollectedData>\n        <QuickToolsBasicInfo ride_name={this.props.location.ride_name.ride}></QuickToolsBasicInfo>\n        <Interval> </Interval>\n        <Options></Options> \n        <Graph></Graph>\n        \n        </>\n      );\n    }\n}\n\nexport default RideInfo","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js",["453","454"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js",["455"],"import styled from 'styled-components';\nimport React, { Component } from 'react';\nimport Axios from 'axios'\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 22%;\nheight: 600px;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nmargin: 0px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 600px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 40px;\nborder-bottom: 1px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 20px;\nborder-bottom: 1px solid black;\nborder-left: 1px solid black;\nborder-right: 1px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Label1 = styled.div`\ntext-align: center;\nfont-size: 150%;\nalign-content: center;\nborder-bottom: 2px solid black;\nfont-weight: bold;\n`\n\nexport const Label2 = styled.div`\ntext-align: center;\nfont-size: 125%;\nalign-content: center;\nborder-bottom: 2px solid black;\n`\nconst styleGray = {backgroundColor : '#AFAFAF'};\n\n\n\nclass BasicInfo extends Component {\n\n    render () {\n    return (\n        <Border>\n            \n            <Label2>Basic Information</Label2>\n            <InfoContainer>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Property</th>\n                            <th scope=\"col\">Value</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                    \n                        <td>Name</td>   <td>   {this.props.ride_name}   </td>\n                    </tr>\n                    <tr>\n                        <td>Location</td>   <td>     {this.props.ride_name}   </td>\n                    </tr>\n                    <tr>\n                        <td>Model</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Theoretical Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Target Throughput</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Vehicles</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Min Vehicles</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Seats</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Primary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Secondary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Tertiary Extension</td>   <td>        </td>\n                    </tr>\n                    <tr>\n                        <td>Max Staff</td>   <td>        </td>\n                    </tr>\n                    <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     <tr><td></td><td></td></tr>     \n                    </tbody>\n\n                </table>\n            </InfoContainer>    \n \n        </Border>\n    )\n    }\n}\n\nexport default BasicInfo","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js",["456","457","458","459"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js",["460","461"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"text\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js",["462","463","464","465","466","467","468","469","470","471","472","473","474"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js",[],{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":1,"column":50,"nodeType":"481","messageId":"482","endLine":1,"endColumn":54},{"ruleId":"479","severity":1,"message":"483","line":1,"column":56,"nodeType":"481","messageId":"482","endLine":1,"endColumn":63},{"ruleId":"479","severity":1,"message":"484","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":33},{"ruleId":"479","severity":1,"message":"485","line":1,"column":46,"nodeType":"481","messageId":"482","endLine":1,"endColumn":57},{"ruleId":"479","severity":1,"message":"486","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":19},{"ruleId":"479","severity":1,"message":"487","line":3,"column":21,"nodeType":"481","messageId":"482","endLine":3,"endColumn":29},{"ruleId":"479","severity":1,"message":"488","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":17},{"ruleId":"489","severity":1,"message":"490","line":224,"column":7,"nodeType":"491","messageId":"492","endLine":224,"endColumn":58},{"ruleId":"493","severity":1,"message":"494","line":270,"column":46,"nodeType":"495","messageId":"496","endLine":270,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":272,"column":36,"nodeType":"499","messageId":"500","endLine":272,"endColumn":38},{"ruleId":"493","severity":1,"message":"494","line":294,"column":46,"nodeType":"495","messageId":"496","endLine":294,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":296,"column":32,"nodeType":"499","messageId":"500","endLine":296,"endColumn":34},{"ruleId":"493","severity":1,"message":"494","line":316,"column":46,"nodeType":"495","messageId":"496","endLine":316,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":318,"column":36,"nodeType":"499","messageId":"500","endLine":318,"endColumn":38},{"ruleId":"493","severity":1,"message":"494","line":338,"column":46,"nodeType":"495","messageId":"496","endLine":338,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":340,"column":40,"nodeType":"499","messageId":"500","endLine":340,"endColumn":42},{"ruleId":"493","severity":1,"message":"494","line":360,"column":44,"nodeType":"495","messageId":"496","endLine":360,"endColumn":46},{"ruleId":"497","severity":1,"message":"498","line":362,"column":38,"nodeType":"499","messageId":"500","endLine":362,"endColumn":40},{"ruleId":"493","severity":1,"message":"494","line":382,"column":46,"nodeType":"495","messageId":"496","endLine":382,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":384,"column":42,"nodeType":"499","messageId":"500","endLine":384,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":404,"column":46,"nodeType":"495","messageId":"496","endLine":404,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":406,"column":42,"nodeType":"499","messageId":"500","endLine":406,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":426,"column":46,"nodeType":"495","messageId":"496","endLine":426,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":428,"column":42,"nodeType":"499","messageId":"500","endLine":428,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":448,"column":46,"nodeType":"495","messageId":"496","endLine":448,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":450,"column":42,"nodeType":"499","messageId":"500","endLine":450,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":470,"column":46,"nodeType":"495","messageId":"496","endLine":470,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":472,"column":42,"nodeType":"499","messageId":"500","endLine":472,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":492,"column":46,"nodeType":"495","messageId":"496","endLine":492,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":494,"column":42,"nodeType":"499","messageId":"500","endLine":494,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":514,"column":46,"nodeType":"495","messageId":"496","endLine":514,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":516,"column":42,"nodeType":"499","messageId":"500","endLine":516,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":536,"column":46,"nodeType":"495","messageId":"496","endLine":536,"endColumn":48},{"ruleId":"497","severity":1,"message":"498","line":538,"column":42,"nodeType":"499","messageId":"500","endLine":538,"endColumn":44},{"ruleId":"479","severity":1,"message":"484","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":33},{"ruleId":"479","severity":1,"message":"485","line":1,"column":46,"nodeType":"481","messageId":"482","endLine":1,"endColumn":57},{"ruleId":"479","severity":1,"message":"486","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":19},{"ruleId":"479","severity":1,"message":"487","line":3,"column":21,"nodeType":"481","messageId":"482","endLine":3,"endColumn":29},{"ruleId":"479","severity":1,"message":"488","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":17},{"ruleId":"479","severity":1,"message":"501","line":162,"column":21,"nodeType":"481","messageId":"482","endLine":162,"endColumn":33},{"ruleId":"479","severity":1,"message":"502","line":163,"column":10,"nodeType":"481","messageId":"482","endLine":163,"endColumn":22},{"ruleId":"479","severity":1,"message":"503","line":163,"column":24,"nodeType":"481","messageId":"482","endLine":163,"endColumn":39},{"ruleId":"479","severity":1,"message":"504","line":164,"column":10,"nodeType":"481","messageId":"482","endLine":164,"endColumn":22},{"ruleId":"479","severity":1,"message":"505","line":164,"column":24,"nodeType":"481","messageId":"482","endLine":164,"endColumn":39},{"ruleId":"479","severity":1,"message":"506","line":165,"column":10,"nodeType":"481","messageId":"482","endLine":165,"endColumn":24},{"ruleId":"479","severity":1,"message":"507","line":165,"column":26,"nodeType":"481","messageId":"482","endLine":165,"endColumn":43},{"ruleId":"479","severity":1,"message":"508","line":166,"column":10,"nodeType":"481","messageId":"482","endLine":166,"endColumn":24},{"ruleId":"479","severity":1,"message":"509","line":166,"column":26,"nodeType":"481","messageId":"482","endLine":166,"endColumn":43},{"ruleId":"479","severity":1,"message":"510","line":167,"column":10,"nodeType":"481","messageId":"482","endLine":167,"endColumn":21},{"ruleId":"479","severity":1,"message":"511","line":167,"column":23,"nodeType":"481","messageId":"482","endLine":167,"endColumn":37},{"ruleId":"479","severity":1,"message":"512","line":168,"column":10,"nodeType":"481","messageId":"482","endLine":168,"endColumn":21},{"ruleId":"479","severity":1,"message":"513","line":168,"column":23,"nodeType":"481","messageId":"482","endLine":168,"endColumn":37},{"ruleId":"479","severity":1,"message":"514","line":169,"column":10,"nodeType":"481","messageId":"482","endLine":169,"endColumn":18},{"ruleId":"479","severity":1,"message":"515","line":169,"column":20,"nodeType":"481","messageId":"482","endLine":169,"endColumn":31},{"ruleId":"479","severity":1,"message":"516","line":170,"column":10,"nodeType":"481","messageId":"482","endLine":170,"endColumn":18},{"ruleId":"479","severity":1,"message":"517","line":170,"column":20,"nodeType":"481","messageId":"482","endLine":170,"endColumn":31},{"ruleId":"479","severity":1,"message":"518","line":171,"column":10,"nodeType":"481","messageId":"482","endLine":171,"endColumn":18},{"ruleId":"479","severity":1,"message":"519","line":171,"column":20,"nodeType":"481","messageId":"482","endLine":171,"endColumn":31},{"ruleId":"479","severity":1,"message":"520","line":172,"column":10,"nodeType":"481","messageId":"482","endLine":172,"endColumn":21},{"ruleId":"479","severity":1,"message":"521","line":172,"column":23,"nodeType":"481","messageId":"482","endLine":172,"endColumn":37},{"ruleId":"479","severity":1,"message":"522","line":173,"column":10,"nodeType":"481","messageId":"482","endLine":173,"endColumn":21},{"ruleId":"479","severity":1,"message":"523","line":173,"column":23,"nodeType":"481","messageId":"482","endLine":173,"endColumn":37},{"ruleId":"479","severity":1,"message":"524","line":174,"column":10,"nodeType":"481","messageId":"482","endLine":174,"endColumn":18},{"ruleId":"479","severity":1,"message":"525","line":174,"column":20,"nodeType":"481","messageId":"482","endLine":174,"endColumn":31},{"ruleId":"489","severity":1,"message":"490","line":234,"column":15,"nodeType":"491","messageId":"492","endLine":234,"endColumn":66},{"ruleId":"497","severity":1,"message":"498","line":252,"column":32,"nodeType":"499","messageId":"500","endLine":252,"endColumn":34},{"ruleId":"497","severity":1,"message":"498","line":272,"column":30,"nodeType":"499","messageId":"500","endLine":272,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":292,"column":30,"nodeType":"499","messageId":"500","endLine":292,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":312,"column":30,"nodeType":"499","messageId":"500","endLine":312,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":332,"column":30,"nodeType":"499","messageId":"500","endLine":332,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":352,"column":30,"nodeType":"499","messageId":"500","endLine":352,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":372,"column":30,"nodeType":"499","messageId":"500","endLine":372,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":392,"column":30,"nodeType":"499","messageId":"500","endLine":392,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":412,"column":30,"nodeType":"499","messageId":"500","endLine":412,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":432,"column":30,"nodeType":"499","messageId":"500","endLine":432,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":452,"column":30,"nodeType":"499","messageId":"500","endLine":452,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":472,"column":30,"nodeType":"499","messageId":"500","endLine":472,"endColumn":32},{"ruleId":"497","severity":1,"message":"498","line":492,"column":30,"nodeType":"499","messageId":"500","endLine":492,"endColumn":32},{"ruleId":"479","severity":1,"message":"484","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":33},{"ruleId":"479","severity":1,"message":"526","line":1,"column":35,"nodeType":"481","messageId":"482","endLine":1,"endColumn":44},{"ruleId":"479","severity":1,"message":"485","line":1,"column":46,"nodeType":"481","messageId":"482","endLine":1,"endColumn":57},{"ruleId":"479","severity":1,"message":"486","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":19},{"ruleId":"479","severity":1,"message":"487","line":3,"column":21,"nodeType":"481","messageId":"482","endLine":3,"endColumn":29},{"ruleId":"479","severity":1,"message":"488","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":17},{"ruleId":"479","severity":1,"message":"527","line":7,"column":27,"nodeType":"481","messageId":"482","endLine":7,"endColumn":35},{"ruleId":"528","severity":1,"message":"529","line":201,"column":14,"nodeType":"530","messageId":"500","endLine":201,"endColumn":21},{"ruleId":"528","severity":1,"message":"531","line":202,"column":22,"nodeType":"530","messageId":"500","endLine":202,"endColumn":37},{"ruleId":"528","severity":1,"message":"532","line":203,"column":15,"nodeType":"530","messageId":"500","endLine":203,"endColumn":23},{"ruleId":"528","severity":1,"message":"533","line":204,"column":18,"nodeType":"530","messageId":"500","endLine":204,"endColumn":29},{"ruleId":"528","severity":1,"message":"534","line":205,"column":20,"nodeType":"530","messageId":"500","endLine":205,"endColumn":33},{"ruleId":"528","severity":1,"message":"535","line":206,"column":19,"nodeType":"530","messageId":"500","endLine":206,"endColumn":31},{"ruleId":"497","severity":1,"message":"498","line":217,"column":16,"nodeType":"499","messageId":"500","endLine":217,"endColumn":18},{"ruleId":"497","severity":1,"message":"498","line":222,"column":19,"nodeType":"499","messageId":"500","endLine":222,"endColumn":21},{"ruleId":"497","severity":1,"message":"498","line":227,"column":19,"nodeType":"499","messageId":"500","endLine":227,"endColumn":21},{"ruleId":"497","severity":1,"message":"498","line":232,"column":21,"nodeType":"499","messageId":"500","endLine":232,"endColumn":23},{"ruleId":"497","severity":1,"message":"498","line":237,"column":21,"nodeType":"499","messageId":"500","endLine":237,"endColumn":23},{"ruleId":"497","severity":1,"message":"498","line":242,"column":18,"nodeType":"499","messageId":"500","endLine":242,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":247,"column":18,"nodeType":"499","messageId":"500","endLine":247,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":252,"column":15,"nodeType":"499","messageId":"500","endLine":252,"endColumn":17},{"ruleId":"497","severity":1,"message":"498","line":257,"column":15,"nodeType":"499","messageId":"500","endLine":257,"endColumn":17},{"ruleId":"497","severity":1,"message":"498","line":262,"column":15,"nodeType":"499","messageId":"500","endLine":262,"endColumn":17},{"ruleId":"497","severity":1,"message":"498","line":267,"column":18,"nodeType":"499","messageId":"500","endLine":267,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":272,"column":18,"nodeType":"499","messageId":"500","endLine":272,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":277,"column":15,"nodeType":"499","messageId":"500","endLine":277,"endColumn":17},{"ruleId":"497","severity":1,"message":"498","line":445,"column":29,"nodeType":"499","messageId":"500","endLine":445,"endColumn":31},{"ruleId":"479","severity":1,"message":"536","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":29},{"ruleId":"479","severity":1,"message":"537","line":38,"column":8,"nodeType":"481","messageId":"482","endLine":38,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":40,"column":9,"nodeType":"481","messageId":"482","endLine":40,"endColumn":18},{"ruleId":"479","severity":1,"message":"539","line":2,"column":17,"nodeType":"481","messageId":"482","endLine":2,"endColumn":25},{"ruleId":"479","severity":1,"message":"526","line":2,"column":27,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"540","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":49},{"ruleId":"479","severity":1,"message":"541","line":26,"column":9,"nodeType":"481","messageId":"482","endLine":26,"endColumn":19},{"ruleId":"479","severity":1,"message":"542","line":27,"column":8,"nodeType":"481","messageId":"482","endLine":27,"endColumn":17},{"ruleId":"479","severity":1,"message":"543","line":28,"column":18,"nodeType":"481","messageId":"482","endLine":28,"endColumn":29},{"ruleId":"544","severity":1,"message":"545","line":62,"column":31,"nodeType":"546","endLine":62,"endColumn":42},{"ruleId":"479","severity":1,"message":"547","line":28,"column":18,"nodeType":"481","messageId":"482","endLine":28,"endColumn":29},{"ruleId":"479","severity":1,"message":"541","line":31,"column":9,"nodeType":"481","messageId":"482","endLine":31,"endColumn":19},{"ruleId":"479","severity":1,"message":"548","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":13},{"ruleId":"479","severity":1,"message":"541","line":14,"column":9,"nodeType":"481","messageId":"482","endLine":14,"endColumn":19},{"ruleId":"479","severity":1,"message":"549","line":4,"column":7,"nodeType":"481","messageId":"482","endLine":4,"endColumn":13},{"ruleId":"479","severity":1,"message":"537","line":41,"column":8,"nodeType":"481","messageId":"482","endLine":41,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":43,"column":9,"nodeType":"481","messageId":"482","endLine":43,"endColumn":18},{"ruleId":"479","severity":1,"message":"549","line":4,"column":7,"nodeType":"481","messageId":"482","endLine":4,"endColumn":13},{"ruleId":"479","severity":1,"message":"537","line":42,"column":12,"nodeType":"481","messageId":"482","endLine":42,"endColumn":21},{"ruleId":"479","severity":1,"message":"538","line":44,"column":11,"nodeType":"481","messageId":"482","endLine":44,"endColumn":20},{"ruleId":"479","severity":1,"message":"550","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"489","severity":1,"message":"490","line":49,"column":5,"nodeType":"491","messageId":"492","endLine":76,"endColumn":9},{"ruleId":"493","severity":1,"message":"551","line":49,"column":30,"nodeType":"495","messageId":"552","endLine":49,"endColumn":32},{"ruleId":"497","severity":1,"message":"553","line":87,"column":33,"nodeType":"499","messageId":"500","endLine":87,"endColumn":35},{"ruleId":"497","severity":1,"message":"553","line":94,"column":33,"nodeType":"499","messageId":"500","endLine":94,"endColumn":35},{"ruleId":"497","severity":1,"message":"553","line":101,"column":34,"nodeType":"499","messageId":"500","endLine":101,"endColumn":36},{"ruleId":"497","severity":1,"message":"553","line":108,"column":34,"nodeType":"499","messageId":"500","endLine":108,"endColumn":36},{"ruleId":"489","severity":1,"message":"490","line":133,"column":13,"nodeType":"491","messageId":"492","endLine":133,"endColumn":61},{"ruleId":"489","severity":1,"message":"490","line":134,"column":13,"nodeType":"491","messageId":"492","endLine":134,"endColumn":65},{"ruleId":"489","severity":1,"message":"490","line":135,"column":13,"nodeType":"491","messageId":"492","endLine":135,"endColumn":61},{"ruleId":"479","severity":1,"message":"554","line":27,"column":7,"nodeType":"481","messageId":"482","endLine":27,"endColumn":16},{"ruleId":"479","severity":1,"message":"542","line":32,"column":12,"nodeType":"481","messageId":"482","endLine":32,"endColumn":21},{"ruleId":"479","severity":1,"message":"501","line":32,"column":23,"nodeType":"481","messageId":"482","endLine":32,"endColumn":35},{"ruleId":"479","severity":1,"message":"502","line":33,"column":12,"nodeType":"481","messageId":"482","endLine":33,"endColumn":24},{"ruleId":"479","severity":1,"message":"503","line":33,"column":26,"nodeType":"481","messageId":"482","endLine":33,"endColumn":41},{"ruleId":"479","severity":1,"message":"504","line":34,"column":12,"nodeType":"481","messageId":"482","endLine":34,"endColumn":24},{"ruleId":"479","severity":1,"message":"505","line":34,"column":26,"nodeType":"481","messageId":"482","endLine":34,"endColumn":41},{"ruleId":"479","severity":1,"message":"506","line":35,"column":12,"nodeType":"481","messageId":"482","endLine":35,"endColumn":26},{"ruleId":"479","severity":1,"message":"507","line":35,"column":28,"nodeType":"481","messageId":"482","endLine":35,"endColumn":45},{"ruleId":"479","severity":1,"message":"508","line":36,"column":12,"nodeType":"481","messageId":"482","endLine":36,"endColumn":26},{"ruleId":"479","severity":1,"message":"509","line":36,"column":28,"nodeType":"481","messageId":"482","endLine":36,"endColumn":45},{"ruleId":"479","severity":1,"message":"510","line":37,"column":12,"nodeType":"481","messageId":"482","endLine":37,"endColumn":23},{"ruleId":"479","severity":1,"message":"511","line":37,"column":25,"nodeType":"481","messageId":"482","endLine":37,"endColumn":39},{"ruleId":"479","severity":1,"message":"512","line":38,"column":12,"nodeType":"481","messageId":"482","endLine":38,"endColumn":23},{"ruleId":"479","severity":1,"message":"513","line":38,"column":25,"nodeType":"481","messageId":"482","endLine":38,"endColumn":39},{"ruleId":"479","severity":1,"message":"514","line":39,"column":12,"nodeType":"481","messageId":"482","endLine":39,"endColumn":20},{"ruleId":"479","severity":1,"message":"515","line":39,"column":22,"nodeType":"481","messageId":"482","endLine":39,"endColumn":33},{"ruleId":"479","severity":1,"message":"516","line":40,"column":12,"nodeType":"481","messageId":"482","endLine":40,"endColumn":20},{"ruleId":"479","severity":1,"message":"517","line":40,"column":22,"nodeType":"481","messageId":"482","endLine":40,"endColumn":33},{"ruleId":"479","severity":1,"message":"518","line":41,"column":12,"nodeType":"481","messageId":"482","endLine":41,"endColumn":20},{"ruleId":"479","severity":1,"message":"519","line":41,"column":22,"nodeType":"481","messageId":"482","endLine":41,"endColumn":33},{"ruleId":"479","severity":1,"message":"520","line":42,"column":12,"nodeType":"481","messageId":"482","endLine":42,"endColumn":23},{"ruleId":"479","severity":1,"message":"521","line":42,"column":25,"nodeType":"481","messageId":"482","endLine":42,"endColumn":39},{"ruleId":"479","severity":1,"message":"522","line":43,"column":12,"nodeType":"481","messageId":"482","endLine":43,"endColumn":23},{"ruleId":"479","severity":1,"message":"523","line":43,"column":25,"nodeType":"481","messageId":"482","endLine":43,"endColumn":39},{"ruleId":"479","severity":1,"message":"524","line":44,"column":12,"nodeType":"481","messageId":"482","endLine":44,"endColumn":20},{"ruleId":"479","severity":1,"message":"525","line":44,"column":22,"nodeType":"481","messageId":"482","endLine":44,"endColumn":33},{"ruleId":"479","severity":1,"message":"537","line":36,"column":8,"nodeType":"481","messageId":"482","endLine":36,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":38,"column":7,"nodeType":"481","messageId":"482","endLine":38,"endColumn":16},{"ruleId":"479","severity":1,"message":"554","line":33,"column":7,"nodeType":"481","messageId":"482","endLine":33,"endColumn":16},{"ruleId":"479","severity":1,"message":"484","line":6,"column":27,"nodeType":"481","messageId":"482","endLine":6,"endColumn":33},{"ruleId":"479","severity":1,"message":"485","line":6,"column":46,"nodeType":"481","messageId":"482","endLine":6,"endColumn":57},{"ruleId":"479","severity":1,"message":"555","line":157,"column":12,"nodeType":"481","messageId":"482","endLine":157,"endColumn":22},{"ruleId":"479","severity":1,"message":"556","line":157,"column":24,"nodeType":"481","messageId":"482","endLine":157,"endColumn":37},{"ruleId":"497","severity":1,"message":"498","line":206,"column":49,"nodeType":"499","messageId":"500","endLine":206,"endColumn":51},{"ruleId":"497","severity":1,"message":"498","line":218,"column":51,"nodeType":"499","messageId":"500","endLine":218,"endColumn":53},{"ruleId":"497","severity":1,"message":"498","line":229,"column":55,"nodeType":"499","messageId":"500","endLine":229,"endColumn":57},{"ruleId":"497","severity":1,"message":"498","line":240,"column":54,"nodeType":"499","messageId":"500","endLine":240,"endColumn":56},{"ruleId":"497","severity":1,"message":"498","line":305,"column":49,"nodeType":"499","messageId":"500","endLine":305,"endColumn":51},{"ruleId":"497","severity":1,"message":"498","line":317,"column":51,"nodeType":"499","messageId":"500","endLine":317,"endColumn":53},{"ruleId":"497","severity":1,"message":"498","line":329,"column":55,"nodeType":"499","messageId":"500","endLine":329,"endColumn":57},{"ruleId":"497","severity":1,"message":"498","line":340,"column":54,"nodeType":"499","messageId":"500","endLine":340,"endColumn":56},{"ruleId":"489","severity":1,"message":"490","line":349,"column":21,"nodeType":"491","messageId":"492","endLine":349,"endColumn":50},{"ruleId":"489","severity":1,"message":"490","line":350,"column":21,"nodeType":"491","messageId":"492","endLine":350,"endColumn":48},{"ruleId":"479","severity":1,"message":"542","line":116,"column":10,"nodeType":"481","messageId":"482","endLine":116,"endColumn":19},{"ruleId":"479","severity":1,"message":"557","line":116,"column":21,"nodeType":"481","messageId":"482","endLine":116,"endColumn":32},{"ruleId":"479","severity":1,"message":"558","line":121,"column":10,"nodeType":"481","messageId":"482","endLine":121,"endColumn":19},{"ruleId":"479","severity":1,"message":"559","line":121,"column":21,"nodeType":"481","messageId":"482","endLine":121,"endColumn":33},{"ruleId":"479","severity":1,"message":"560","line":122,"column":10,"nodeType":"481","messageId":"482","endLine":122,"endColumn":22},{"ruleId":"479","severity":1,"message":"561","line":122,"column":24,"nodeType":"481","messageId":"482","endLine":122,"endColumn":39},{"ruleId":"497","severity":1,"message":"498","line":183,"column":18,"nodeType":"499","messageId":"500","endLine":183,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":197,"column":18,"nodeType":"499","messageId":"500","endLine":197,"endColumn":20},{"ruleId":"493","severity":1,"message":"551","line":202,"column":25,"nodeType":"495","messageId":"552","endLine":202,"endColumn":27},{"ruleId":"497","severity":1,"message":"498","line":206,"column":26,"nodeType":"499","messageId":"500","endLine":206,"endColumn":28},{"ruleId":"497","severity":1,"message":"498","line":211,"column":21,"nodeType":"499","messageId":"500","endLine":211,"endColumn":23},{"ruleId":"497","severity":1,"message":"498","line":216,"column":19,"nodeType":"499","messageId":"500","endLine":216,"endColumn":21},{"ruleId":"497","severity":1,"message":"498","line":289,"column":51,"nodeType":"499","messageId":"500","endLine":289,"endColumn":53},{"ruleId":"479","severity":1,"message":"562","line":6,"column":8,"nodeType":"481","messageId":"482","endLine":6,"endColumn":20},{"ruleId":"479","severity":1,"message":"558","line":121,"column":10,"nodeType":"481","messageId":"482","endLine":121,"endColumn":19},{"ruleId":"479","severity":1,"message":"559","line":121,"column":21,"nodeType":"481","messageId":"482","endLine":121,"endColumn":33},{"ruleId":"479","severity":1,"message":"560","line":122,"column":10,"nodeType":"481","messageId":"482","endLine":122,"endColumn":22},{"ruleId":"479","severity":1,"message":"563","line":181,"column":9,"nodeType":"481","messageId":"482","endLine":181,"endColumn":21},{"ruleId":"479","severity":1,"message":"539","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"484","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":33},{"ruleId":"479","severity":1,"message":"526","line":1,"column":35,"nodeType":"481","messageId":"482","endLine":1,"endColumn":44},{"ruleId":"479","severity":1,"message":"485","line":1,"column":46,"nodeType":"481","messageId":"482","endLine":1,"endColumn":57},{"ruleId":"479","severity":1,"message":"537","line":37,"column":8,"nodeType":"481","messageId":"482","endLine":37,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":39,"column":9,"nodeType":"481","messageId":"482","endLine":39,"endColumn":18},{"ruleId":"479","severity":1,"message":"548","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":13},{"ruleId":"479","severity":1,"message":"564","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":16},{"ruleId":"479","severity":1,"message":"565","line":8,"column":10,"nodeType":"481","messageId":"482","endLine":8,"endColumn":18},{"ruleId":"479","severity":1,"message":"566","line":10,"column":10,"nodeType":"481","messageId":"482","endLine":10,"endColumn":17},{"ruleId":"479","severity":1,"message":"567","line":11,"column":10,"nodeType":"481","messageId":"482","endLine":11,"endColumn":26},{"ruleId":"479","severity":1,"message":"526","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"539","line":1,"column":28,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"548","line":5,"column":8,"nodeType":"481","messageId":"482","endLine":5,"endColumn":13},{"ruleId":"479","severity":1,"message":"542","line":117,"column":10,"nodeType":"481","messageId":"482","endLine":117,"endColumn":19},{"ruleId":"479","severity":1,"message":"557","line":117,"column":21,"nodeType":"481","messageId":"482","endLine":117,"endColumn":32},{"ruleId":"479","severity":1,"message":"568","line":118,"column":10,"nodeType":"481","messageId":"482","endLine":118,"endColumn":22},{"ruleId":"479","severity":1,"message":"569","line":118,"column":24,"nodeType":"481","messageId":"482","endLine":118,"endColumn":39},{"ruleId":"479","severity":1,"message":"570","line":119,"column":10,"nodeType":"481","messageId":"482","endLine":119,"endColumn":20},{"ruleId":"479","severity":1,"message":"571","line":119,"column":22,"nodeType":"481","messageId":"482","endLine":119,"endColumn":35},{"ruleId":"479","severity":1,"message":"572","line":120,"column":10,"nodeType":"481","messageId":"482","endLine":120,"endColumn":19},{"ruleId":"479","severity":1,"message":"573","line":121,"column":21,"nodeType":"481","messageId":"482","endLine":121,"endColumn":33},{"ruleId":"479","severity":1,"message":"558","line":122,"column":10,"nodeType":"481","messageId":"482","endLine":122,"endColumn":19},{"ruleId":"479","severity":1,"message":"559","line":122,"column":21,"nodeType":"481","messageId":"482","endLine":122,"endColumn":33},{"ruleId":"479","severity":1,"message":"560","line":123,"column":10,"nodeType":"481","messageId":"482","endLine":123,"endColumn":22},{"ruleId":"479","severity":1,"message":"561","line":123,"column":24,"nodeType":"481","messageId":"482","endLine":123,"endColumn":39},"no-native-reassign",["574"],"no-negated-in-lhs",["575"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","'MdClose' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setRide_name' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","'IntervalsCountDisplay' is defined but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'useState' is defined but never used.","'MdSignalCellularConnectedNoInternet4Bar' is defined but never used.","'styleLight' is assigned a value but never used.","'ride_name' is assigned a value but never used.","'setRideList' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'setStatList' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is assigned a value but never used.","'Component' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.","'styleBlue' is assigned a value but never used.","'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'setRideName' is assigned a value but never used.","'unitState' is assigned a value but never used.","'setUnitState' is assigned a value but never used.","'intervalList' is assigned a value but never used.","'setIntervalList' is assigned a value but never used.","'IntervalPage' is defined but never used.","'getIntervals' is assigned a value but never used.","'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'startingTime' is assigned a value but never used.","'setStartingTime' is assigned a value but never used.","'endingTime' is assigned a value but never used.","'setEndingTime' is assigned a value but never used.","'timeValue' is assigned a value but never used.","'setTypeState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]