[{"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js":"1","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js":"2","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js":"3","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js":"4","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js":"5","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js":"6","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js":"7","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js":"8","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js":"9","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js":"10","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js":"11","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js":"12","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js":"13","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js":"14","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js":"15","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js":"16","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js":"17","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js":"18","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js":"19","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js":"20","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js":"21","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js":"22","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js":"23","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js":"24","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js":"25","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js":"26","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js":"27","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js":"28","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js":"29","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js":"30","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js":"31","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js":"32","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js":"33","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js":"34","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js":"35","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js":"36","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js":"37","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js":"38","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js":"39","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js":"40","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js":"41","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js":"42","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js":"43","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js":"44","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js":"45","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js":"46","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js":"47","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js":"48","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js":"49","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js":"50","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js":"51","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js":"52","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js":"53","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js":"54","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js":"55","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js":"56"},{"size":479,"mtime":1620923128000,"results":"57","hashOfConfig":"58"},{"size":2076,"mtime":1620923128000,"results":"59","hashOfConfig":"58"},{"size":327,"mtime":1620923128000,"results":"60","hashOfConfig":"58"},{"size":1266,"mtime":1620923128000,"results":"61","hashOfConfig":"58"},{"size":341,"mtime":1620923128000,"results":"62","hashOfConfig":"58"},{"size":307,"mtime":1620923128000,"results":"63","hashOfConfig":"58"},{"size":2221,"mtime":1624993274392,"results":"64","hashOfConfig":"58"},{"size":18800,"mtime":1623186142417,"results":"65","hashOfConfig":"58"},{"size":351,"mtime":1620923128000,"results":"66","hashOfConfig":"58"},{"size":13562,"mtime":1623186142416,"results":"67","hashOfConfig":"58"},{"size":16319,"mtime":1623186142405,"results":"68","hashOfConfig":"58"},{"size":723,"mtime":1620923128000,"results":"69","hashOfConfig":"58"},{"size":722,"mtime":1622749034654,"results":"70","hashOfConfig":"58"},{"size":1817,"mtime":1620923128000,"results":"71","hashOfConfig":"58"},{"size":2096,"mtime":1620923128000,"results":"72","hashOfConfig":"58"},{"size":952,"mtime":1620923128000,"results":"73","hashOfConfig":"58"},{"size":1612,"mtime":1620923128000,"results":"74","hashOfConfig":"58"},{"size":3520,"mtime":1620923128000,"results":"75","hashOfConfig":"58"},{"size":570,"mtime":1620923128000,"results":"76","hashOfConfig":"58"},{"size":516,"mtime":1620923128000,"results":"77","hashOfConfig":"58"},{"size":580,"mtime":1620923128000,"results":"78","hashOfConfig":"58"},{"size":571,"mtime":1620923128000,"results":"79","hashOfConfig":"58"},{"size":558,"mtime":1620923128000,"results":"80","hashOfConfig":"58"},{"size":2405,"mtime":1620923128000,"results":"81","hashOfConfig":"58"},{"size":2591,"mtime":1625187350965,"results":"82","hashOfConfig":"58"},{"size":1590,"mtime":1620923128000,"results":"83","hashOfConfig":"58"},{"size":2720,"mtime":1623186047066,"results":"84","hashOfConfig":"58"},{"size":2430,"mtime":1620923128000,"results":"85","hashOfConfig":"58"},{"size":2041,"mtime":1623445469913,"results":"86","hashOfConfig":"58"},{"size":3177,"mtime":1620923128000,"results":"87","hashOfConfig":"58"},{"size":1337,"mtime":1625187352324,"results":"88","hashOfConfig":"58"},{"size":8209,"mtime":1625187349865,"results":"89","hashOfConfig":"58"},{"size":4309,"mtime":1623186142402,"results":"90","hashOfConfig":"58"},{"size":1285,"mtime":1623186142403,"results":"91","hashOfConfig":"58"},{"size":507,"mtime":1620923128000,"results":"92","hashOfConfig":"58"},{"size":2284,"mtime":1620968465147,"results":"93","hashOfConfig":"94"},{"size":11223,"mtime":1623186142400,"results":"95","hashOfConfig":"58"},{"size":15471,"mtime":1623186142397,"results":"96","hashOfConfig":"58"},{"size":211,"mtime":1620923128000,"results":"97","hashOfConfig":"58"},{"size":8951,"mtime":1623186142398,"results":"98","hashOfConfig":"58"},{"size":8955,"mtime":1623186142401,"results":"99","hashOfConfig":"58"},{"size":1000,"mtime":1625184432711,"results":"100","hashOfConfig":"58"},{"size":4001,"mtime":1620923128000,"results":"101","hashOfConfig":"58"},{"size":1696,"mtime":1622231293814,"results":"102","hashOfConfig":"94"},{"size":6853,"mtime":1620923128000,"results":"103","hashOfConfig":"58"},{"size":3829,"mtime":1622581424374,"results":"104","hashOfConfig":"58"},{"size":1681,"mtime":1620923128000,"results":"105","hashOfConfig":"58"},{"size":346,"mtime":1620923128000,"results":"106","hashOfConfig":"58"},{"size":2265,"mtime":1620923128000,"results":"107","hashOfConfig":"58"},{"size":448,"mtime":1620923128000,"results":"108","hashOfConfig":"58"},{"size":521,"mtime":1620923128000,"results":"109","hashOfConfig":"58"},{"size":362,"mtime":1620923128000,"results":"110","hashOfConfig":"58"},{"size":2051,"mtime":1620923128000,"results":"111","hashOfConfig":"58"},{"size":997,"mtime":1620923128000,"results":"112","hashOfConfig":"58"},{"size":4356,"mtime":1620708951894,"results":"113","hashOfConfig":"94"},{"size":2392,"mtime":1622660983059,"results":"114","hashOfConfig":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"s058bs",{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"117"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"117"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"117"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"117"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"117"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"117"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},"k88cjp",{"filePath":"201","messages":"202","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"117"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"117"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"117"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"117"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"117"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\index.js",[],["247","248"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\App.js",["249","250"],"import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Main from './pages/main';\nimport Historical from './pages/historical';\nimport Graph from './pages/graph';\nimport Andon from './pages/andon';\nimport Weather from './pages/weather';\nimport Attraction from './pages/attraction';\nimport newAttraction from './pages/newAttraction';\nimport Edit from './pages/editpage';\nimport Create from './pages/createpage';\nimport Delete from './pages/deletepage';\nimport Interval from './pages/interval';\nimport RideInfo from './pages/rideInfo';\nimport React, { Component } from 'react';\nimport Login from './pages/login';\nimport fire from './fire';\nimport Logout from './pages/logout';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    })\n  }\n\n  render() {\n  return (\n    <>\n    <Router>\n      \n    { this.state.user ? (  <Switch>\n        <Route path='/' exact component={Main} />\n        <Route path='/main' component={Main} />\n        <Route path='/historical' component={Historical} />\n        <Route path='/graph' component={Graph} />\n        <Route path='/andon' component={Andon} />\n        <Route path='/weather' component={Weather} />\n        <Route path='/attraction' component={Attraction} />\n        <Route path='/newAttraction' component={newAttraction} />\n        <Route path='/editpage' component={Edit} />\n        <Route path='/createpage' component={Create} />\n        <Route path='/deletepage' component={Delete} />\n        <Route path='/interval' component={Interval} />\n        <Route path='/rideInfo' component={RideInfo} />\n        <Route path='/logout' component={Logout}/>\n      </Switch> ) : ( <Login /> ) }\n    </Router>\n    </>\n  );\n}\n}\n\nexport default App;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\andon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\main.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\historical.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\weather.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\graph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\editpage.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios'\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport Navbar from '../components/General/Navbar';\r\nimport Banner from '../components/General/Bannerbar';\r\n\r\nexport const Nav = styled.nav`\r\n  background: transparent;\r\n  height: 3px;\r\n  display: flex;\r\n  position: absolute;\r\n  top: 3%;\r\n  right: 7%;\r\n  font-size: 15px;\r\n  font-family: \"Lucida Console\", monospace;\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const EditLink = styled(Link)`\r\n  color: black;\r\n  border-right: 10px solid transparent;\r\n  display: block;\r\n  margin: 0 -0.3%;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 2px;\r\n  height: 100%;\r\n  cursor: default;\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: black;\r\n  border-bottom: 25px solid lightgray;\r\n  border-right: 10px solid transparent;\r\n  display: block;\r\n  margin: 0 -0.3%;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 2px;\r\n  height: 100%;\r\n  cursor: default;\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Upload = styled.div`\r\n    border: 0px solid;   \r\n    height: 54%;\r\n    width: 43%;\r\n    position: absolute;\r\n    top: 6%;\r\n    right: 0%;\r\n`;\r\nconst OuterBorder = styled.div`\r\n  width: 100%;\r\n  height: 685px;\r\n  position: absolute;\r\n  margin: 13px 0px;\r\n  border: solid 2px;\r\n`;\r\n\r\nconst CreateBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  width: 100%;\r\n  height: 6%;\r\n  padding: 6px;\r\n  border-bottom: 2px solid;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst EditBorder = styled.nav`\r\n  width: 40%;\r\n  height: 590px;\r\n  font-family: 'Arial', sans-serif;\r\n  font-size: 18px;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst InfoBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  font-size: 22px;\r\n  align-content: center;\r\n  border-bottom: 2px solid;\r\n  padding-left: 5%;\r\n  text-align: center;\r\n  border-right: 2px solid;\r\n  \r\n`;\r\n\r\nconst SafetyInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 30%;\r\n    bottom: 0%;\r\n    height: 41%;\r\n    width: 30%;\r\n    border: 2px solid;\r\n    overflow: scroll;\r\n`;\r\n\r\nconst PhoneInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    width: 30%;\r\n    height: 41%;\r\n    position: absolute;\r\n    left: 69.9%;\r\n    bottom: 0%;\r\n    border: 2px solid;\r\n`;\r\n\r\nconst ReportInfo = styled.div`\r\n    overflow: hidden;\r\n    border: 2px solid;\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    padding: 5px;\r\n    text-align: center;\r\n    width: 17%;\r\n    height: 365px;\r\n    right: 43%;\r\n    top: 5.8%;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    border-bottom: 2px solid;   \r\n    height: 14%;\r\n    margin-bottom: 4px;\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n  padding-left: 40%;\r\n  padding-right: 40%;\r\n  margin-top: -500px;\r\n  width: 100%;\r\n  height: 8%;\r\n`\r\n\r\nconst RideSelect = styled.select`\r\n    text-align: right;\r\n`\r\n\r\nconst styleGray = {backgroundColor : '#AFAFAF'};\r\nexport default function EditPage(props) {\r\n  \r\n\r\n    //states\r\nconst [ride_name, setRideName] = useState('');\r\nconst [dailyOpening, setDailyOpening] = useState('');\r\nconst [dailyClosing, setDailyClosing] = useState('');\r\nconst [theoryCapacity, setTheoryCapacity] = useState('');\r\nconst [targetCapacity, setTargetCapacity] = useState('');\r\nconst [minVehicles, setMinVehicles] = useState('');\r\nconst [maxVehicles, setMaxVehicles] = useState('');\r\nconst [maxSeats, setMaxSeats] = useState('');\r\nconst [minStaff, setMinStaff] = useState('');\r\nconst [maxStaff, setMaxStaff] = useState('');\r\nconst [parkSection, setParkSection] = useState('');\r\nconst [weatherCode, setWeatherCode] = useState('');\r\nconst [rideType, setRideType] = useState('');\r\n\r\n//for the drop down menu\r\nconst [rideSelect, setRideSelect] = useState('');\r\n\r\n//state to get all attractions\r\nconst [attractionList, setAttractionList] = useState([]);\r\n//send the attraction data to the backend running on port 3001\r\n//specifically /addAttraction\r\n\r\n//recieve data from backend to display\r\nconst getAttractions = () => {\r\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\r\n      setAttractionList(res.data);\r\n      return attractionList;\r\n      }).catch(err => console.log(err));\r\n      }\r\n\r\n\r\nconst editAttraction = () =>{\r\n  Axios.put('http://localhost:3001/editAttraction', {\r\n                ride_name: ride_name,\r\n                dailyOpening: dailyOpening,\r\n                dailyClosing: dailyClosing,\r\n                theoryCapacity: theoryCapacity,\r\n                targetCapacity: targetCapacity,\r\n                minVehicles: minVehicles,\r\n                maxVehicles: maxVehicles,\r\n                maxSeats: maxSeats,\r\n                minStaff: minStaff,\r\n                maxStaff: maxStaff,\r\n                parkSection: parkSection,\r\n                weatherCode: weatherCode,\r\n                rideType: rideType,\r\n\r\n                rideSelect: setRideSelect\r\n                \r\n                }).then(() =>{\r\n                  alert('successful insert');\r\n\r\n              }).then( () => {\r\n                console.log(\"Successfully sent to port 3001\");\r\n              });\r\n              window.location.href='/newAttraction';\r\n};\r\n\r\nreturn (\r\n    <>\r\n    <Navbar/>\r\n    <Banner/>\r\n    \r\n    {useEffect(() =>{\r\n      {window.addEventListener('load', getAttractions())}\r\n      {window.addEventListener('load', setRideSelect(props.location.ride_name))}\r\n      {window.addEventListener('load', setRideName(props.location.ride_name))}\r\n      \r\n    })}\r\n    <OuterBorder>\r\n    <CreateBar> Edit an Attraction\r\n          <Nav>\r\n         <NavMenu>\r\n             <NavLink to='/EditPage/Block' activeStyle>\r\n                 Block Section\r\n             </NavLink>\r\n             <NavLink to='/EditPage/Danger' activeStyle>\r\n                 Danger Areas\r\n             </NavLink>\r\n             <NavLink to='/EditPage/Restrict' activeStyle>\r\n                 Restricted Areas\r\n             </NavLink>\r\n             </NavMenu>\r\n    </Nav>\r\n    </CreateBar>\r\n  \r\n    <EditBorder>\r\n\r\n    <InfoBar> Basic Information</InfoBar>\r\n\r\n\r\n\r\n    <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          <tr>\r\n          <td>Name</td>\r\n          <td>          \r\n\r\n              \r\n                          <> \r\n                          <label > {props.location.ride_name} </label>\r\n                          </>\r\n                    \r\n        \r\n\r\n\r\n          </td>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Daily Opening</td>\r\n          <th> \r\n            \r\n              \r\n              {attractionList.map((val, key) => {\r\n                var dailyOpening;\r\n                if (rideSelect == val.ride_name){\r\n                    dailyOpening = val.dailyOpening;\r\n                    return (\r\n                      <> \r\n                        <input type='time' name='dailyOpening' onChange={(e) => {\r\n                            setDailyOpening(e.target.value);\r\n                          }}\r\n                        ></input>  {dailyOpening}\r\n                      </>\r\n                    );\r\n                }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Daily Closing</td>\r\n          <th> \r\n\r\n              {attractionList.map((val, key) => {\r\n                    var dailyClosing;\r\n                    if (rideSelect == val.ride_name){\r\n                        dailyClosing = val.dailyClosing;\r\n                        return (\r\n                          <> \r\n                            <input type='time' name='dailyClosing' onChange={(e) => {\r\n                  \r\n                                setDailyClosing(e.target.value);\r\n                              }}\r\n                            ></input>  {dailyClosing}\r\n                          </>\r\n                        );\r\n                    }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Theoretical Capacity</td>\r\n          <th> \r\n\r\n              {attractionList.map((val, key) => {\r\n                        var theoryCapacity;\r\n                        if (rideSelect == val.ride_name){\r\n                            theoryCapacity = val.theoryCapacity;\r\n                            return (\r\n                              <> \r\n                                <input type='text' name='theoryCapacity' placeHolder={theoryCapacity} onChange={(e) => {\r\n                                    setTheoryCapacity(e.target.value);\r\n                                  }}\r\n                                ></input>  \r\n                              </>\r\n                            );\r\n                        }\r\n              })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Target Capacity</td>\r\n          <th> \r\n\r\n            {attractionList.map((val, key) => {\r\n                      var targetCapacity;\r\n                      if (rideSelect == val.ride_name){\r\n                          targetCapacity = val.targetCapacity;\r\n                          return (\r\n                            <> \r\n                              <input type='text' name='targetCapacity' placeHolder={targetCapacity} onChange={(e) => {\r\n                                  setTargetCapacity(e.target.value);\r\n                                }}\r\n                              ></input>  \r\n                            </>\r\n                          );\r\n                      }\r\n              })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Max Vehicles</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var maxVehicles;\r\n                          if (rideSelect == val.ride_name){\r\n                              maxVehicles = val.maxVehicles;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='maxVehicles' placeHolder={maxVehicles} onChange={(e) => {\r\n                                      setMaxVehicles(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Min Vehicles</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var minVehicles;\r\n                          if (rideSelect == val.ride_name){\r\n                              minVehicles = val.minVehicles;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='minVehicle' placeHolder={minVehicles} onChange={(e) => {\r\n                                      setMinVehicles(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Seats per Vehicle</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var maxSeats;\r\n                          if (rideSelect == val.ride_name){\r\n                              maxSeats = val.maxSeats;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='maxSeats' placeHolder={maxSeats} onChange={(e) => {\r\n                                      setMaxSeats(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Max Employees</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var maxStaff;\r\n                          if (rideSelect == val.ride_name){\r\n                              maxStaff = val.maxStaff;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='maxStaff' placeHolder={maxStaff} onChange={(e) => {\r\n                                      setMaxStaff(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Min Employees</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var minStaff;\r\n                          if (rideSelect == val.ride_name){\r\n                              minStaff = val.minStaff;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='minStaff' placeHolder={minStaff} onChange={(e) => {\r\n                                      setMinStaff(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Park Section</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var parkSection;\r\n                          if (rideSelect == val.ride_name){\r\n                              parkSection = val.parkSection;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='parkSection' placeHolder={parkSection} onChange={(e) => {\r\n                                      setParkSection(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Weather Code</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var weatherCode;\r\n                          if (rideSelect == val.ride_name){\r\n                              weatherCode = val.weatherCode;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='weatherCode' placeHolder={weatherCode} onChange={(e) => {\r\n                                      setWeatherCode(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          <tr>\r\n          <td>Type</td>\r\n          <th>\r\n\r\n              {attractionList.map((val, key) => {\r\n                          var rideType;\r\n                          if (rideSelect == val.ride_name){\r\n                              rideType = val.rideType;\r\n                              return (\r\n                                <> \r\n                                  <input type='text' name='rideType' placeHolder={rideType} onChange={(e) => {\r\n                                      setRideType(e.target.value);\r\n                                    }}\r\n                                  ></input>  \r\n                                </>\r\n                              );\r\n                          }\r\n                })}\r\n\r\n          </th>\r\n          </tr>\r\n\r\n          </tbody>\r\n\r\n        \r\n\r\n        </table>\r\n        <EditButton onClick={(editAttraction)}>Edit Attraction</EditButton>\r\n\r\n    </EditBorder>\r\n    <ReportInfo>\r\n        <Box> \r\n        Required <ul>  Documentation</ul> </Box>\r\n        <ul>Operations Report</ul>  \r\n        <ul>Turnstile Report</ul> \r\n        <ul>Lockout Report</ul>\r\n    </ReportInfo>\r\n\r\n    <Upload>  \r\n    <h4 className='display-4 text-center mb-4'>\r\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\r\n      <SafetyInfo>\r\n      <InfoBar>Safety Critical Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Weather Code</td>\r\n            <td>Alpha</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Max Operating Wind</td>\r\n            <td>34 MPH</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Min Operating Temperature</td>\r\n            <td>41 F</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Power Redundancy</td>\r\n            <td>On-Site</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Number of Gates</td>\r\n            <td>11</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </SafetyInfo>\r\n    <PhoneInfo>\r\n      <InfoBar>Phone Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Number</th>\r\n            <th scope=\"col\">Out</th>\r\n            <th scope=\"col\">In</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Primary</td>\r\n            <td>3152</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Secondary</td>\r\n            <td>3153</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Tertiary</td>\r\n            <td>3154</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </PhoneInfo>\r\n    </OuterBorder>\r\n    </>\r\n    );\r\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\attraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\deletepage.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios'\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport Navbar from '../components/General/Navbar';\r\nimport Banner from '../components/General/Bannerbar';\r\n\r\nexport const Nav = styled.nav`\r\n  background: transparent;\r\n  height: 3px;\r\n  display: flex;\r\n  position: absolute;\r\n  top: 3%;\r\n  right: 7%;\r\n  font-size: 15px;\r\n`;\r\nexport const NavLink = styled(Link)`\r\n  color: black;\r\n  border-right: 10px solid transparent;\r\n  border-bottom: 25px solid lightgray;\r\n  display: block;\r\n  margin: 0 -0.3%;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 2px;\r\n  height: 100%;\r\n  cursor: default;\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const DeleteLink = styled(Link)`\r\n  margin-left: 40%;\r\n  font: bold 20px Arial;\r\n  text-decoration: none;\r\n  background-color: #EEEEEE;\r\n  color: #333333;\r\n  border-top: 1px solid #CCCCCC;\r\n  border-right: 1px solid #333333;\r\n  border-bottom: 1px solid #333333;\r\n  border-left: 1px solid #CCCCCC;\r\n`;\r\n\r\nconst Upload = styled.div`\r\n    border: 0px solid;   \r\n    height: 54%;\r\n    width: 43%;\r\n    position: absolute;\r\n    top: 6%;\r\n    right: 0%;\r\n`;\r\n\r\nconst OuterBorder = styled.div`\r\n  width: 100%;\r\n  height: 685px;\r\n  position: absolute;\r\n  margin: 13px 0px;\r\n  border: solid 2px;\r\n`;\r\n\r\nconst DeleteBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  width: 100%;\r\n  height: 6%;\r\n  padding: 6px;\r\n  border-bottom: 2px solid;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst EditBorder = styled.nav`\r\n  width: 40%;\r\n  height: 607px;\r\n  border-right: 2px solid;\r\n  font-family: 'Arial', sans-serif;\r\n  font-size: 18px;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst InfoBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  font-size: 22px;\r\n  align-content: center;\r\n  border-bottom: 2px solid;\r\n  padding-left: 5%;\r\n  text-align: center;\r\n  border-right: 2px solid;\r\n  \r\n`;\r\n\r\nconst SafetyInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 30%;\r\n    bottom: 0%;\r\n    height: 41%;\r\n    width: 30%;\r\n    border: 2px solid;\r\n    overflow: scroll;\r\n`;\r\n\r\nconst PhoneInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    width: 30%;\r\n    height: 41%;\r\n    position: absolute;\r\n    left: 69.9%;\r\n    bottom: 0%;\r\n    border: 2px solid;\r\n`;\r\n\r\nconst ReportInfo = styled.div`\r\n    overflow: hidden;\r\n    border: 2px solid;\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    padding: 5px;\r\n    text-align: center;\r\n    width: 17%;\r\n    height: 365px;\r\n    right: 43%;\r\n    top: 5.8%;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    border-bottom: 2px solid;   \r\n    height: 14%;\r\n    margin-bottom: 4px;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  padding-left: 40%;\r\n  padding-right: 40%;\r\n  margin-top: -500px;\r\n  width: 100%;\r\n  height: 8%;\r\n`\r\n\r\n\r\n\r\n\r\n\r\nconst styleGray = {backgroundColor : '#AFAFAF'};\r\nexport default function DeletePage(props) {\r\n\r\n\r\n\r\n  //states\r\n  const [ride_name, setRideName] = useState('');\r\n  const [dailyOpening, setDailyOpening] = useState('');\r\n  const [dailyClosing, setDailyClosing] = useState('');\r\n  const [theoryCapacity, setTheoryCapacity] = useState('');\r\n  const [targetCapacity, setTargetCapacity] = useState('');\r\n  const [minVehicles, setMinVehicles] = useState('');\r\n  const [maxVehicles, setMaxVehicles] = useState('');\r\n  const [maxSeats, setMaxSeats] = useState('');\r\n  const [minStaff, setMinStaff] = useState('');\r\n  const [maxStaff, setMaxStaff] = useState('');\r\n  const [parkSection, setParkSection] = useState('');\r\n  const [weatherCode, setWeatherCode] = useState('');\r\n  const [rideType, setRideType] = useState('');\r\n\r\nconst [rideSelect, setRideSelect] = useState('');\r\n\r\n//state to get all attractions\r\nconst [attractionList, setAttractionList] = useState([]);\r\n//send the attraction data to the backend running on port 3001\r\n//specifically /addAttraction\r\n\r\n//recieve data from backend to display\r\nconst getAttractions = () => {\r\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\r\n      //console.log(res.data)\r\n      return setAttractionList(res.data);\r\n  });\r\n\r\n}\r\n\r\n\r\nconst deleteAttraction = (ride_name) => {\r\n  Axios.delete(`http://localhost:3001/deleteAttraction/${rideSelect}`);\r\n};\r\n\r\nreturn (\r\n    <>\r\n    <Navbar/>\r\n    <Banner/>\r\n    <OuterBorder>\r\n    <DeleteBar> Delete an Attraction \r\n    <Nav>\r\n         <NavMenu>\r\n             <NavLink to='/DeletePage/Block' activeStyle>\r\n                 Block Section\r\n             </NavLink>\r\n             <NavLink to='/DeletePage/Danger' activeStyle>\r\n                 Danger Areas\r\n             </NavLink>\r\n             <NavLink to='/DeletePage/Restrict' activeStyle>\r\n                 Restricted Areas\r\n             </NavLink>\r\n             </NavMenu>\r\n    </Nav>\r\n    </DeleteBar>\r\n    \r\n    <EditBorder>\r\n    <InfoBar> Basic Information</InfoBar>\r\n        {useEffect(() =>{\r\n              {window.addEventListener('load', getAttractions())}\r\n              {window.addEventListener('load', setRideSelect(props.location.ride_name))}\r\n            })}\r\n        <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n<tr>\r\n<td>Name</td>\r\n<td>          \r\n\r\n    \r\n                <> \r\n                <label> {props.location.ride_name} </label>\r\n                </>\r\n          \r\n\r\n\r\n\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Daily Opening</td>\r\n<th> \r\n  \r\n    \r\n    {attractionList.map((val, key) => {\r\n      var dailyOpening;\r\n      if (rideSelect == val.ride_name){\r\n          dailyOpening = val.dailyOpening;\r\n          return (\r\n            <> \r\n              <label> {dailyOpening} </label>\r\n            </>\r\n          );\r\n      }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Daily Closing</td>\r\n<th> \r\n\r\n    {attractionList.map((val, key) => {\r\n          var dailyClosing;\r\n          if (rideSelect == val.ride_name){\r\n              dailyClosing = val.dailyClosing;\r\n              return (\r\n                <> \r\n                  <label> {dailyClosing} </label>\r\n                </>\r\n              );\r\n          }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Theoretical Capacity</td>\r\n<th> \r\n\r\n    {attractionList.map((val, key) => {\r\n              var theoryCapacity;\r\n              if (rideSelect == val.ride_name){\r\n                  theoryCapacity = val.theoryCapacity;\r\n                  return (\r\n                    <> \r\n                      <label> {theoryCapacity} </label>\r\n                    </>\r\n                  );\r\n              }\r\n    })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Target Capacity</td>\r\n<th> \r\n\r\n  {attractionList.map((val, key) => {\r\n            var targetCapacity;\r\n            if (rideSelect == val.ride_name){\r\n                targetCapacity = val.targetCapacity;\r\n                return (\r\n                  <> \r\n                    <label> {targetCapacity} </label>\r\n                  </>\r\n                );\r\n            }\r\n    })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Max Vehicles</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var maxVehicles;\r\n                if (rideSelect == val.ride_name){\r\n                    maxVehicles = val.maxVehicles;\r\n                    return (\r\n                      <> \r\n                        <label> {maxVehicles} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Min Vehicles</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var minVehicles;\r\n                if (rideSelect == val.ride_name){\r\n                    minVehicles = val.minVehicles;\r\n                    return (\r\n                      <> \r\n                        <label> {minVehicles} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Seats per Vehicle</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var maxSeats;\r\n                if (rideSelect == val.ride_name){\r\n                    maxSeats = val.maxSeats;\r\n                    return (\r\n                      <> \r\n                        <label> {maxSeats} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Max Employees</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var maxStaff;\r\n                if (rideSelect == val.ride_name){\r\n                    maxStaff = val.maxStaff;\r\n                    return (\r\n                      <> \r\n                        <label> {maxStaff} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Min Employees</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var minStaff;\r\n                if (rideSelect == val.ride_name){\r\n                    minStaff = val.minStaff;\r\n                    return (\r\n                      <> \r\n                        <label> {minStaff} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Park Section</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var parkSection;\r\n                if (rideSelect == val.ride_name){\r\n                    parkSection = val.parkSection;\r\n                    return (\r\n                      <> \r\n                        <label> {parkSection} </label>  \r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Weather Code</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var weatherCode;\r\n                if (rideSelect == val.ride_name){\r\n                    weatherCode = val.weatherCode;\r\n                    return (\r\n                      <> \r\n                        <label> {weatherCode} </label>\r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n<tr>\r\n<td>Type</td>\r\n<th>\r\n\r\n    {attractionList.map((val, key) => {\r\n                var rideType;\r\n                if (rideSelect == val.ride_name){\r\n                    rideType = val.rideType;\r\n                    return (\r\n                      <> \r\n                        <label> {rideType} </label> \r\n                      </>\r\n                    );\r\n                }\r\n      })}\r\n\r\n</th>\r\n</tr>\r\n\r\n</tbody>\r\n\r\n          \r\n\r\n        </table>\r\n\r\n        <DeleteButton onClick={() => {\r\n            deleteAttraction(ride_name) //ride selected in drop down menu\r\n            window.alert(`The ride: ${props.location.ride_name} has been deleted`);\r\n            window.location.href='/newAttraction';\r\n          }}>Delete Attraction</DeleteButton>\r\n\r\n    </EditBorder>\r\n    <ReportInfo>\r\n        <Box> \r\n        Required <ul>  Documentation</ul> </Box>\r\n        <ul>Operations Report</ul>  \r\n        <ul>Turnstile Report</ul> \r\n        <ul>Lockout Report</ul>\r\n    </ReportInfo>\r\n\r\n    <Upload>  \r\n    <h4 className='display-4 text-center mb-4'>\r\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\r\n\r\n    <SafetyInfo>\r\n      <InfoBar>Safety Critical Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Weather Code</td>\r\n            <td>Alpha</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Max Operating Wind</td>\r\n            <td>34 MPH</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Min Operating Temperature</td>\r\n            <td>41 F</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Power Redundancy</td>\r\n            <td>On-Site</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Number of Gates</td>\r\n            <td>11</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </SafetyInfo>\r\n    <PhoneInfo>\r\n      <InfoBar>Phone Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Number</th>\r\n            <th scope=\"col\">Out</th>\r\n            <th scope=\"col\">In</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Primary</td>\r\n            <td>3152</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Secondary</td>\r\n            <td>3153</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Tertiary</td>\r\n            <td>3154</td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </PhoneInfo>\r\n    </OuterBorder>\r\n    </>\r\n    );\r\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\createpage.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios'\r\nimport { NavLink as Link} from 'react-router-dom';\r\nimport FileUpload from '../components/FileUpload/FileUpload'; \r\nimport Navbar from '../components/General/Navbar';\r\nimport Banner from '../components/General/Bannerbar';\r\nimport { useHistory } from 'react-router-dom';\r\nexport const Nav = styled.nav`\r\n  background: transparent;\r\n  height: 3px;\r\n  display: flex;\r\n  position: absolute;\r\n  top: 3%;\r\n  right: 7%;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: black;\r\n  border-bottom: 25px solid lightgray;\r\n  border-right: 10px solid transparent;\r\n  display: block;\r\n  margin: 0 -0.3%;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 2px;\r\n  height: 100%;\r\n  cursor: default;\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const CreateLink = styled(Link)`\r\n  color: black;\r\n  border-right: 10px solid transparent;\r\n  display: block;\r\n  margin: 0 -0.3%;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 2px;\r\n  height: 100%;\r\n  cursor: default;\r\n  &.active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst OuterBorder = styled.div`\r\n  width: 100%;\r\n  height: 660px;\r\n  position: absolute;\r\n  margin: 13px 0px;\r\n  border: solid 2px;\r\n`;\r\n\r\nconst CreateBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  width: 100%;\r\n  height: 6%;\r\n  padding: 6px;\r\n  border-bottom: 2px solid;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst EditBorder = styled.nav`\r\n  width: 40%;\r\n  height: 615px;\r\n  border-right: 2px solid;\r\n  font-family: 'Arial', sans-serif;\r\n  font-size: 18px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst InfoBar = styled.div`\r\n  font-family: \"Lucida Console\", monospace;\r\n  font-size: 22px;\r\n  align-content: center;\r\n  text-align: center;\r\n  border-bottom: 2px solid;\r\n  width: 113%;\r\n`;\r\n\r\nconst SafetyInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 18px;\r\n    position: absolute;\r\n    right: 30%;\r\n    bottom: 0%;\r\n    height: 40%;\r\n    width: 30%;\r\n    border: 2px solid;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst PhoneInfo = styled.div`\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 18px;\r\n    width: 30%;\r\n    height: 40%;\r\n    position: absolute;\r\n    left: 69.9%;\r\n    bottom: 0;\r\n    border: 2px solid;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst ReportInfo = styled.div`\r\n    overflow-y: hidden;\r\n    border: 2px solid;\r\n    font-family: 'Arial', sans-serif;\r\n    font-size: 16px;\r\n    position: absolute;\r\n    padding: 5px;\r\n    text-align: center;\r\n    width: 17%;\r\n    height: 357px;\r\n    right: 43%;\r\n    top: 5.8%;\r\n`;\r\n\r\nconst Upload = styled.div`\r\n    border: 0px solid;   \r\n    height: 54%;\r\n    width: 43%;\r\n    position: absolute;\r\n    top: 6%;\r\n    right: 0%;\r\n`;\r\nconst Box = styled.div`\r\n    border-bottom: 2px solid;   \r\n    height: 14%;\r\n    margin-bottom: 4px;\r\n`;\r\n\r\nconst CreateButton = styled.button`\r\n  padding-left: 40%;\r\n  padding-right: 40%;\r\n  margin-top: -500px;\r\n  width: 100%;\r\n  height: 8%;\r\n`\r\n\r\nconst styleGray = {backgroundColor : '#AFAFAF'};\r\nexport default function CreatePage() {\r\n\r\n\r\n//states\r\n//for getting attraction \r\nconst [ride_name, setRide_name] = useState('');\r\nconst [dailyOpening, setDailyOpening] = useState('');\r\nconst [dailyClosing, setDailyClosing] = useState('');\r\nconst [theoryCapacity, setTheoryCapacity] = useState('');\r\nconst [targetCapacity, setTargetCapacity] = useState('');\r\nconst [minVehicles, setMinVehicles] = useState('');\r\nconst [maxVehicles, setMaxVehicles] = useState('');\r\nconst [maxSeats, setMaxSeats] = useState('');\r\nconst [minStaff, setMinStaff] = useState('');\r\nconst [maxStaff, setMaxStaff] = useState('');\r\nconst [parkSection, setParkSection] = useState('');\r\nconst [weatherCode, setWeatherCode] = useState('');\r\nconst [rideType, setRideType] = useState('');\r\n\r\n\r\n//for getting safety critcal information\r\nconst [maxWind, setMaxWind] = useState('');\r\nconst [minTemp, setMinTemp] = useState('');\r\nconst [powerRedundancy, setPowerRedundancy] = useState('');\r\nconst [numGates, setNumGates] = useState('');\r\n\r\n//for getting phone information\r\nconst [ridePrimary, setRidePrimary] = useState('');\r\nconst [rideSecondary, setRideSecondary] = useState('');\r\nconst [rideTertiary, setRideTertiary] = useState('');\r\n\r\n//send the attraction data to the backend running on port 3001\r\n//specifically /addAttraction\r\nconst submitAttraction = () =>{\r\n  Axios.post('http://localhost:3001/addAttraction', {\r\n    ride_name: ride_name,\r\n    dailyOpening: dailyOpening,\r\n    dailyClosing: dailyClosing,\r\n    theoryCapacity: theoryCapacity,\r\n    targetCapacity: targetCapacity,\r\n    minVehicles: minVehicles,\r\n    maxVehicles: maxVehicles,\r\n    maxSeats: maxSeats,\r\n    minStaff: minStaff,\r\n    maxStaff: maxStaff,\r\n    parkSection: parkSection,\r\n    weatherCode: weatherCode,\r\n    rideType: rideType,\r\n    maxWind: maxWind,\r\n    minTemp, minTemp,\r\n    powerRedundancy, powerRedundancy,\r\n    numGates, numGates,\r\n    ridePrimary, ridePrimary,\r\n    rideSecondary, rideSecondary,\r\n    rideTertiary, rideTertiary\r\n                }).then(() =>{\r\n                  alert('successful insert');\r\n              }).then( () => {\r\n                console.log(\"Successfully sent to port 3001\");\r\n              });\r\n};\r\n\r\nvar emptyBoxArray = [];\r\nconst checkEmpty = () => {\r\n  var empty = false;\r\n  if(ride_name == '') {\r\n    alert(\"Ride name is empty\");\r\n    emptyBoxArray.push('ride_nameID');\r\n    empty = true;\r\n  }\r\n  if(dailyOpening == '') {\r\n    alert(\"Daily Opening is empty\");\r\n    emptyBoxArray.push('dailyOpeningID');\r\n    empty = true;\r\n  }\r\n  if(dailyClosing == '') {\r\n    alert(\"Daily Closing is empty\");\r\n    emptyBoxArray.push('dailyClosingID');\r\n    empty = true;\r\n  }\r\n  if(theoryCapacity == '') {\r\n    alert(\"Theoretical Capacity is empty\");\r\n    emptyBoxArray.push('theoryCapacityID');\r\n    empty = true;\r\n  }\r\n  if(targetCapacity == '') {\r\n    alert(\"Target Capacity is empty\");\r\n    emptyBoxArray.push('targetCapacityID');\r\n    empty = true;\r\n  }\r\n  if(maxVehicles == '') {\r\n    alert(\"Max Vehicles is empty\");\r\n    emptyBoxArray.push('maxVehiclesID');\r\n    empty = true;\r\n  }\r\n  if(minVehicles == '') {\r\n    alert(\"Min Vehicles is empty\");\r\n    emptyBoxArray.push('minVehiclesID');\r\n    empty = true;\r\n  }\r\n  if(maxSeats == '') {\r\n    alert(\"Max seats is empty\");\r\n    emptyBoxArray.push('maxSeatsID');\r\n    empty = true;\r\n  }\r\n  if(maxStaff == '') {\r\n    alert(\"Max Staff is empty\");\r\n    emptyBoxArray.push('maxStaffID');\r\n    empty = true;\r\n  }\r\n  if(minStaff == '') {\r\n    alert(\"Min Staff is empty\");\r\n    emptyBoxArray.push('minStaffID');\r\n    empty = true;\r\n  }\r\n  if(parkSection == '') {\r\n    alert(\"Park Section is empty\");\r\n    emptyBoxArray.push('parkSectionID');\r\n    empty = true;\r\n  }\r\n  if(weatherCode == '') {\r\n    alert(\"Weather Code is empty\");\r\n    emptyBoxArray.push('weatherCodeID');\r\n    empty = true;\r\n  }\r\n  if(rideType == '') {\r\n    alert(\"Ride Type is empty\");\r\n    emptyBoxArray.push('rideTypeID');\r\n    empty = true;\r\n  }\r\n  return empty;\r\n}\r\nlet history = useHistory();\r\n\r\nconst changeInputColor = (emptyBoxArray) => {\r\n  for (let index = 0; index < emptyBoxArray.length; index++) {\r\n    var element = emptyBoxArray[index];\r\n    console.log(element);\r\n    document.getElementById(element).style.backgroundColor = \"pink\";\r\n  }\r\n}\r\nreturn (\r\n  \r\n    <>\r\n    \r\n    <Navbar/>\r\n    <Banner/>\r\n    <OuterBorder>\r\n    <CreateBar> Create a new Attraction \r\n    <Nav>\r\n         <NavMenu>\r\n             <NavLink to='/CreatePage/Block' activeStyle>\r\n                 Block Section\r\n             </NavLink>\r\n             <NavLink to='/CreatePage/Danger' activeStyle>\r\n                 Danger Areas\r\n             </NavLink>\r\n             <NavLink to='/CreatePage/Restrict' activeStyle>\r\n                 Restricted Areas\r\n             </NavLink>\r\n             </NavMenu>\r\n    </Nav>\r\n    </CreateBar>\r\n    <EditBorder>\r\n      <InfoBar> Basic Information </InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n        <tr>\r\n        <td>Name</td>\r\n        <td>              \r\n                <input id='ride_nameID' type='text' name='ride_name' onChange={(e) => {\r\n                  setRide_name(e.target.value);\r\n                }}></input> </td>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Daily Opening</td>\r\n        <th> \r\n              <input id='dailyOpeningID' type='time' name='dailyOpening' onChange={(e) => {\r\n                        setDailyOpening(e.target.value);\r\n                      }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Daily Closing</td>\r\n        <th> \r\n            <input id='dailyClosingID' type='time' name='dailyClosing' onChange={(e) => {\r\n                      setDailyClosing(e.target.value);\r\n                    }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Theoretical Capacity</td>\r\n        <th> \r\n            <input id='theoryCapacityID' type='number' name='theoryCapacity' onChange={(e) => {\r\n                          setTheoryCapacity(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Target Capacity</td>\r\n        <th> \r\n            <input id='targetCapacityID' type='number' name='targetCapcity' onChange={(e) => {\r\n                          setTargetCapacity(e.target.value);\r\n                        }}></input>  \r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Max Vehicles</td>\r\n        <th>\r\n            <input id='maxVehiclesID' type='number' name='maxVehicles' onChange={(e) => {\r\n                          setMaxVehicles(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Min Vehicles</td>\r\n        <th>\r\n            <input id='minVehiclesID'type='number' name='minVehicles' onChange={(e) => {\r\n                          setMinVehicles(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Seats per Vehicle</td>\r\n        <th>\r\n            <input id='maxSeatsID' type='number' name='maxSeats' onChange={(e) => {\r\n                          setMaxSeats(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Max Employees</td>\r\n        <th>\r\n            <input id='maxStaffID' type='number' name='maxStaff' onChange={(e) => {\r\n                          setMaxStaff(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Min Employees</td>\r\n        <th>\r\n            <input id='minStaffID' type='number' name='minStaff' onChange={(e) => {\r\n                          setMinStaff(e.target.value);\r\n                        }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Park Section</td>\r\n        <th>\r\n              <input id='parkSectionID' type='text' name='parkSection' onChange={(e) => {\r\n                            setParkSection(e.target.value);\r\n                          }}></input>\r\n        </th>\r\n        </tr>\r\n\r\n        <tr>\r\n        <td>Weather Code</td>\r\n        <th>\r\n              <input id='weatherCodeID' type='text' name='weatherCode' onChange={(e) => {\r\n                            setWeatherCode(e.target.value);\r\n                          }}></input>\r\n        </th>\r\n        </tr>\r\n        <tr>\r\n        <td>Type</td>\r\n        <th>\r\n            <input id='rideTypeID' type='text' name='rideType' onChange={(e) => {\r\n                          setRideType(e.target.value);\r\n              }}></input>\r\n        </th>\r\n        </tr>\r\n        \r\n        </tbody>\r\n\r\n        </table>\r\n        <CreateButton onClick={() => { \r\n            if(checkEmpty() == true){\r\n              window.alert(\"Data entry error\")\r\n              changeInputColor(emptyBoxArray);\r\n              console.log(emptyBoxArray);\r\n            }\r\n            else { \r\n              window.alert(`The ride: ${ride_name} has been created`)\r\n              submitAttraction();\r\n              history.push('/newAttraction')\r\n        }\r\n        }}>Create Attraction</CreateButton>\r\n    </EditBorder>\r\n    <ReportInfo>\r\n        <Box> \r\n        Required <ul>  Documentation</ul> </Box>\r\n        <ul>Operations Report</ul>  \r\n        <ul>Turnstile Report</ul> \r\n        <ul>Lockout Report</ul>\r\n    </ReportInfo>\r\n    <Upload>\r\n        <FileUpload />  \r\n    </Upload>\r\n    <SafetyInfo>\r\n      <InfoBar>Safety Critical Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Property</th>\r\n            <th scope=\"col\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Weather Code</td>\r\n            <td>\r\n                        <input type='text' name='weatherCode' onChange={(e) => {\r\n                          setWeatherCode(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Max Operating Wind</td>\r\n            <td>\r\n                        <input type='text' name='maxWind' onChange={(e) => {\r\n                          setMaxWind(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Min Operating Temperature</td>\r\n            <td>\r\n                        <input type='text' name='minTemp' onChange={(e) => {\r\n                          setMinTemp(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Power Redundancy</td>\r\n            <td>\r\n                        <input type='text' name='powerRedundancy' onChange={(e) => {\r\n                          setPowerRedundancy(e.target.value);\r\n                        }}></input>\r\n\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Number of Gates</td>\r\n            <td>              \r\n                        <input type='text' name='numGates' onChange={(e) => {\r\n                          setNumGates(e.target.value);\r\n                        }}></input>\r\n              </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </SafetyInfo>\r\n    <PhoneInfo>\r\n      <InfoBar>Phone Information</InfoBar>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr style = {styleGray}>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Number</th>\r\n            <th scope=\"col\">Out</th>\r\n            <th scope=\"col\">In</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Primary</td>\r\n            <td>\r\n                      <input type='text' name='ridePrimary' onChange={(e) => {\r\n                          setRidePrimary(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Secondary</td>\r\n            <td>\r\n                        <input type='text' name='rideSecondary' onChange={(e) => {\r\n                          setRideSecondary(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Tertiary</td>\r\n            <td>\r\n                        <input type='text' name='rideTeriary' onChange={(e) => {\r\n                            setRideTertiary(e.target.value);\r\n                        }}></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n            <td>\r\n              <input type='checkbox'></input>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </PhoneInfo>\r\n    </OuterBorder>\r\n    </>\r\n    );\r\n}","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\newAttraction.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\interval.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Navbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\General\\Bannerbar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainCodeMenu.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\QuickToolsMain.js",["359","360"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nright: 0px;\n width: 11.5%;\n height: 200px;\n margin: 13px -5px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 17%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\nbackground-color: darkgray;\ntext-align: center;\npadding: 3px;\nfont-size: 150%;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 21%;\npadding: 1px;\nfont-size: 16px;\nborder-bottom: 1px solid black;\n`;\n\nconst QuickToolsMain = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                    Collect Data Now\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Cell Notifications\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Send Message\n                    </QuickToolsButtons>\n                    <QuickToolsButtons>\n                            Generate Report\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n\n        </>\n    );\n}\nexport default QuickToolsMain","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainInfoDisplay.js",["361","362"],"import styled from 'styled-components';\nimport React, { useState, useEffect } from \"react\";\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 240px;\n`;\n\nexport const TH = styled.th`\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 12.5%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\noverflow-y: scroll;\noverflow: hidden;\n`\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\nconst MainInfoDisplay = () => {\n    return (\n    <InfoContainer>\n                <Table>\n                    <TR>\n                        <TH><Select><option>Ride Name</option></Select></TH>\n                        <TH><Select><option>Operational Status</option></Select></TH>\n                        <TH><Select><option>Last Hour Throughput</option></Select></TH>\n                        <TH><Select><option>Last Hour Wait Time</option></Select></TH>\n                        <TH><Select><option>Efficency %</option></Select></TH>\n                        <TH><Select><option>Vehicles Operating</option></Select></TH>\n                        <TH><Select><option>Total Daily Downtime</option></Select></TH>\n                        <TH><Select><option>Employees At Ride</option></Select></TH>\n                    </TR>        \n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n                    <TR>\n                        <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>  <TD></TD>\n                    </TR>\n\n                </Table>\n            </InfoContainer>\n    )\n}\n\nexport default MainInfoDisplay","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainGraphDisplay.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainMiniAndon.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainWeatherRadar.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainDownTime.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainParkSection.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Main\\MainRidePerecentChange.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\RideCheck.js",["363","364","365","366","367"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\MapEnable.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\StatCheck.js",["368","369"],"import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\n\nfunction StatCheck() {\n\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  useEffect(() => {\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ];\n\n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n\n                  onClick={() => {\n                    console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        console.log(statList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default StatCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\DayCheck.js",["370","371"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport styled from 'styled-components';\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nfunction DayCheck() {\n  const [dayState, setDayState] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n  useEffect(() => {\n    let dayState = [\n      { id: 1, day: \"Sunday\"},\n      { id: 2, day: \"Monday\"},\n      { id: 3, day: \"Tuesday\"},\n      { id: 4, day: \"Wednesday\"},\n      { id: 5, day: \"Thursday\"},\n      { id: 6, day: \"Friday\"},\n      { id: 7, day: \"Saturday\"},\n\n    ];\n\n    setDayState(\n      dayState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          day: d.day,\n        };\n      })\n    );\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Day</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setDayState(\n                    dayState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n              </tr>\n          {dayState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.day}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setDayState(\n                      dayState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default DayCheck;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\QuickToolsSummary.js",["372","373","374"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst saveSvgAsPng = require('save-svg-as-png')\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const QuickToolsSideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nmargin: 150px 0px;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nheight: 150px;\nmargin: 0% 0px;\n`;\n\nexport const QuickToolsHeader = styled.h1`\nheight: 27%;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black; \ntext-align: center;\npadding: 6px;\nfont-size: 21px;\nfont-weight: bold;\nmargin: 0px 0px;\n`;\n\nexport const QuickToolsButtons = styled.button`\nwidth: 100%;\nheight: 28%;\nfont-size: 16px;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black; \n`;\n\nconst QuickToolsSummary = () => {\nconst [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n    return (\n        <>\n            <QuickToolsSideNav>\n                <QuickToolsHeader>\n                    Quick Tools\n                </QuickToolsHeader>\n                    <QuickToolsButtons>\n                       Daily Summary \n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons> \n                        Weekly Summary\n                    </QuickToolsButtons>\n                       \n                    <QuickToolsButtons>\n                        Graphs to Review\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons>\n                        Significant Changes\n                    </QuickToolsButtons>\n\n                    <QuickToolsButtons onClick={() => {\n\n                            var element = document.getElementsByClassName('rv-xy-plot__inner');\n                            saveSvgAsPng.saveSvgAsPng(element[0], 'ride-graph.png');\n\n                    }}>\n                        Quick Export\n                    </QuickToolsButtons>\n            </QuickToolsSideNav>\n        </>\n    );\n}\n\nexport default QuickToolsSummary","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\GraphUnits.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\FavoriteBar.js",["375","376","377"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Graph\\ChartLine.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTable.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios'\r\n\r\nconst AttractionManagerTableContainer = styled.div`\r\noverflow: hidden;\r\noverflow-y: scroll;\r\nbackground: transparent;\r\nborder-bottom: 2px solid black;\r\nborder-bottom: 2px solid black;\r\nmargin: 15px 0px;\r\nposition: absolute;\r\nleft: 0px;\r\nwidth: 88.5%;\r\nheight: 83.5%;\r\n`;\r\n\r\nexport const Select = styled.select`\r\nheight: 95%;\r\nwidth: 95%;\r\nfont-size: 100%;\r\nfont-weight: bold;\r\n`\r\n\r\n\r\nconst styleBlue = {backgroundColor : '#8EAAD1'};\r\nconst styleGray = {backgroundColor : '#AFAFAF'};\r\nconst AttractionManagerTable = () => {\r\n\r\n    //states\r\n    const [ride_name, setRide_name] = useState('');\r\n    const [dailyOpening, setDailyOpening] = useState('');\r\n    const [dailyClosing, setDailyClosing] = useState('');\r\n    const [theoryCapacity, setTheoryCapacity] = useState('');\r\n    const [targetCapacity, setTargetCapacity] = useState('');\r\n    const [minVehicles, setMinVehicles] = useState('');\r\n    const [maxVehicles, setMaxVehicles] = useState('');\r\n    const [maxSeats, setMaxSeats] = useState('');\r\n    const [minStaff, setMinStaff] = useState('');\r\n    const [maxStaff, setMaxStaff] = useState('');\r\n    const [parkSection, setParkSection] = useState('');\r\n    const [weatherCode, setWeatherCode] = useState('');\r\n    const [rideType, setRideType] = useState('');\r\n\r\n\r\n\r\n    //state to get all attractions\r\n    const [attractionList, setAttractionList] = useState([]);\r\n\r\n\r\n        //recieve data from backend to display\r\n    const GetAttractions = () => {\r\n            //console.log(res.data)\r\n            useEffect(() => {\r\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\r\n                setAttractionList(res.data);\r\n                }).catch(err => console.log(err));\r\n                }, [])\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <AttractionManagerTableContainer>\r\n        {window.addEventListener('load', GetAttractions())}\r\n            <table className=\"table table-bordered table-striped\">\r\n                <thead>\r\n                    <tr style = {styleGray}>\r\n                        <th scope=\"col\">Ride Name</th>\r\n                        <th scope=\"col\">Daily Opening</th>\r\n                        <th scope=\"col\">Daily Closing</th>\r\n                        <th scope=\"col\">Theoretical Capacity</th>\r\n                        <th scope=\"col\">Target Capacity</th>\r\n                        <th scope=\"col\">Minimum Vehicles</th>\r\n                        <th scope=\"col\">Maximum Vehicles</th>\r\n                        <th scope=\"col\">Maximum Seats</th>\r\n                        <th scope=\"col\">Minimum Staff</th>\r\n                        <th scope=\"col\">Maximum Staff</th>\r\n                        <th scope=\"col\">Park Section</th>\r\n                        <th scope=\"col\">Weather Code</th>\r\n                        <th scope=\"col\">Type</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                {attractionList.map((val, key) => {\r\n                        var ride = val.ride_name;\r\n                        return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td><NavLink to = {{\r\n                            pathname:'/rideInfo',\r\n                            ride_name: {ride}\r\n                            \r\n                        }}>{val.ride_name}</NavLink></td>\r\n                        <td>{val.dailyOpening}</td>\r\n                        <td>{val.dailyClosing}</td>\r\n                        <td>{val.theoryCapacity}</td>\r\n                        <td>{val.targetCapacity}</td>\r\n                        <td>{val.minVehicles}</td>\r\n                        <td>{val.maxVehicles}</td>\r\n                        <td>{val.maxSeats}</td>\r\n                        <td>{val.minStaff}</td>\r\n                        <td>{val.maxStaff}</td>\r\n                        <td>{val.parkSection}</td>\r\n                        <td>{val.weatherCode}</td>\r\n                        <td>{val.rideType}</td>\r\n                    </tr>\r\n                </tbody>\r\n                        );\r\n                    })}\r\n                \r\n            </table>\r\n        </AttractionManagerTableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttractionManagerTable","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\QuickToolsPanel.js",["405","406"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const QuickToolsSideNav = styled.div`\r\nbackground: transparent;\r\n\r\n\r\nposition: absolute;\r\n  top: 68px;\r\n  right: 5px;\r\n  width: 11.5%;\r\n  height: 80px;\r\n  margin: 13px -5px;\r\n`;\r\n\r\nexport const QuickToolsHeader = styled.h1`\r\nheight: 30%;\r\nborder-bottom: 2px solid black;\r\nborder-left: 2px solid black;\r\nborder-right: 2px solid black;\r\ntext-align: center;\r\npadding: 3px;\r\nfont-size: 20px;\r\nfont-weight: bold;\r\nmargin: 0px 0px;\r\n`;\r\n\r\nexport const QuickToolsButtons = styled.button`\r\nwidth: 100%;\r\nheight: 88%;\r\npadding: 1px;\r\nfont-size: 16px;\r\nborder-bottom: 1px solid black;\r\n`;\r\n\r\nconst QuickToolsPanel = () => {\r\nconst [showModal, setShowModal] = useState(false);\r\n\r\nconst openModal = () => {\r\nsetShowModal(prev => !prev);\r\n};\r\n    return (\r\n        <>\r\n            <QuickToolsSideNav>\r\n                <QuickToolsHeader>\r\n                    Quick Tools\r\n                </QuickToolsHeader>\r\n                    <NavLink to = '/CreatePage'>\r\n                    <QuickToolsButtons>New Attraction</QuickToolsButtons>\r\n                    </NavLink>\r\n\r\n\r\n\r\n            </QuickToolsSideNav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QuickToolsPanel","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\NewAttraction\\AttractionManagerTitle.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalsCountDisplay.js",["407"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://localhost:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay\n",["408","409"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideIntervals.js",["410","411","412","413","414","415","416","417","418","419","420","421","422"],"import styled from 'styled-components';\r\nimport plus from './plusSign.png'\r\nimport { ParkwideModal } from './ParkwideModal';\r\nimport { GlobalStyle } from '../../globalStyles';\r\nimport Axios from 'axios'\r\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nconst Label1 = styled.h1`\r\nmargin-left: .8%;\r\nmargin-top: .9%;\r\nfont-size: 175%;\r\ntext-align: left;\r\nfont-weight: normal;\r\n`\r\n\r\nconst Container = styled.div`\r\nposition: absolute;\r\nmargin-top: 20px;\r\ntop: 300px;\r\nwidth: 100%;\r\nheight: 50%;\r\nborder-bottom: 2px solid black;\r\nborder-top: 2px solid black;\r\n`\r\n\r\nconst IntervalContainer = styled.div`\r\nposition: absolute;\r\nbottom: 0%;\r\nleft: 0%;\r\nheight: 90%;\r\nwidth: 95%;\r\nborder-top: 2px solid black;\r\nborder-right: 2px solid black;\r\noverflow: hidden;\r\noverflow-x: scroll;\r\nwhite-space: nowrap;\r\n`\r\n\r\n\r\nconst IntervalCard = styled.div`\r\nwidth: 20%;;\r\nheight: 100%;\r\nborder-right: 2px solid black;\r\ndisplay: inline-block;\r\noverflow: hidden;\r\n`\r\nconst CardTime = styled.div`\r\nposition: absolute;\r\ntop: 0%;\r\nheight: 15%;\r\nwidth: 20%;\r\nborder-bottom: 2px solid black;\r\ntext-align: center;\r\npadding-top: 1%;\r\nfont-size: 18px;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\nconst CardCollect = styled.div`\r\nposition: absolute;\r\ntop: 15%;\r\nheight: 30%;\r\nwidth: 20%;\r\nborder-bottom: 2px solid black;\r\ntext-align: left;\r\nfont-size: 120%;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\n\r\nconst CardFrom = styled.div`\r\nposition: absolute;\r\ntop: 45%;\r\nheight: 15%;\r\nwidth: 20%;\r\nborder-bottom: 2px solid black;\r\ntext-align: left;\r\nfont-size: 120%;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\n\r\nconst CardStarting = styled.div`\r\nposition: absolute;\r\ntop: 60%;\r\nheight: 20%;\r\nwidth: 20%;\r\nborder-bottom: 2px solid black;\r\ntext-align: left;\r\nfont-size: 120%;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\n\r\nconst CardEnding = styled.div`\r\nposition: absolute;\r\ntop: 80%;\r\nheight: 20%;\r\nwidth: 20%;\r\ntext-align: left;\r\nfont-size: 120%;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\n\r\nconst Image = styled.img`\r\ndisplay:flex;\r\nheight: 70px;\r\n`\r\n\r\nconst Button = styled.button`\r\ndisplay: inline-block;\r\nbackground: transparent;\r\nposition: absolute;\r\nleft: 7%;\r\ntop: 42%;\r\nborder: none;\r\n`\r\nconst DeleteButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 15px;\r\n  width: 20px;\r\n  height: 30px;\r\n  padding: 0;\r\n  \r\n`\r\nconst Variables = styled.li`\r\nfont-size: 14px;\r\nmargin-left: 5%;\r\noverflow: hidden;\r\n`\r\nconst InputVariables = styled.input`\r\nwidth: 70px;\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 80%;\r\n  height: 20px;\r\n  font-size: 10px;\r\n  overflow: hidden;\r\n`\r\nconst ParkwideIntervals = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n    setShowModal(prev => !prev);\r\n    };\r\n\r\n    const [parkIntervalList, setParkIntervalList] = useState([]);\r\n    const [rideSelect, setRideSelect] = useState('');\r\n\r\n    const deleteInterval = (id) => {\r\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\r\n        };\r\n    \r\n    //edit info\r\n    const [WaitTime, setWaitTime] = useState('');\r\n    const [Throughput, setThroughput] = useState('');\r\n    const [AvailableSeats, setAvailableSeats] = useState('');\r\n    const [AvailableDown, setAvailableDown] = useState('');\r\n\r\n    const editParkInterval = (id) =>{\r\n        Axios.put('http://localhost:3001/editParkInterval', {\r\n\r\n            id: id,\r\n            WaitTime: WaitTime,\r\n            Throughput: Throughput,\r\n            AvailableSeats: AvailableSeats,\r\n            AvailableDown: AvailableDown\r\n                        \r\n            }).then(() =>{\r\n            alert('successful insert');\r\n\r\n        }).then( () => {\r\n            console.log(\"Successfully sent to port 3001\");\r\n        });\r\n        };\r\n        \r\n    return (\r\n        <Container>\r\n            <Label1>Parkwide Intervals</Label1>\r\n            <IntervalContainer>\r\n            \r\n            <IntervalCard>\r\n\r\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\r\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\r\n                    <GlobalStyle /> \r\n\r\n            </IntervalCard>\r\n            {useEffect(() => {\r\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\r\n                setParkIntervalList(res.data)\r\n                }).catch(err => console.log(err));\r\n                }, [])}\r\n            {parkIntervalList.map((val, key) => {\r\n                    var id = val.id;\r\n                    var emptyArrayTest = `emptyArray${id}`;\r\n                    emptyArrayTest = [];\r\n\r\n                    const checkWait = () => {\r\n                        if (val.checkedWaitTime == true){\r\n                        if (WaitTime == ''){\r\n                            console.log(`waitTime${id}`)\r\n                            emptyArrayTest.push(`waitTime${id}`)\r\n                        }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\r\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                    }\r\n\r\n                    const checkThroughput = () => {\r\n                        if (val.checkedThroughput == true){\r\n                            if (Throughput == ''){\r\n                                emptyArrayTest.push(`throughput${id}`)\r\n                            }\r\n                        return (\r\n                            <div>\r\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\r\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\r\n                            </div>\r\n                        );\r\n\r\n                        }\r\n                    }\r\n\r\n                    const checkAvailable = () => {\r\n                        if (val.checkedAvailableSeats == true){\r\n                            if (AvailableSeats == ''){\r\n                                emptyArrayTest.push(`available${id}`)\r\n                            }\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\r\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    const checkDown = () => {\r\n\r\n                        if (val.checkedAvailableDown == true){\r\n                            if (AvailableDown == ''){\r\n                                emptyArrayTest.push(`down${id}`)\r\n                            }\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\r\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                        return (\r\n                            <IntervalCard>\r\n                            <CardTime>Every {val.timeValue} Minutes\r\n                            \r\n                            <DeleteButton\r\n                             onClick={() => {console.log(id); deleteInterval(id);\r\n                                  setTimeout(function(){\r\n                                    window.location.reload(); \r\n                                   }, 2);\r\n                               }}/></CardTime>\r\n \r\n                        <CardCollect>\r\n                                {checkWait()}\r\n                                {checkThroughput()}\r\n                                {checkAvailable()}\r\n                                {checkDown()}\r\n                                <SubmitButton  onClick={() =>{\r\n                                    console.log(id)\r\n\r\n                                    var wait = `waitTime${id}`;\r\n                                    var throughput = `throughput${id}`;\r\n                                    var seats = `available${id}`;\r\n                                    var down = `down${id}`;\r\n\r\n                                    var refresh = 0;\r\n                                    console.log(emptyArrayTest);\r\n                                    if(emptyArrayTest.includes(wait)){\r\n                                        document.getElementById(wait).style.background = 'pink';\r\n                                        alert(\"Error! Wait time is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(throughput)){\r\n                                        document.getElementById(throughput).style.background = 'pink';\r\n                                        alert(\"Error! Throughput is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(seats)){\r\n                                        document.getElementById(seats).style.background = 'pink';\r\n                                        alert(\"Error! Available Seats is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(down)){\r\n                                        document.getElementById(down).style.background = 'pink';\r\n                                        alert(\"Error! Available Down is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if (refresh == 0){\r\n                                        setTimeout(function(){\r\n                                            window.location.reload(); \r\n                                           }, 2);\r\n                                           editParkInterval(id);\r\n                                    }\r\n\r\n                                }}>Submit</SubmitButton>\r\n                            \r\n                        </CardCollect>\r\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\r\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\r\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\r\n                            </IntervalCard>\r\n                        );\r\n                    })}\r\n\r\n\r\n\r\n            </IntervalContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ParkwideIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionIntervals.js",["423","424","425","426","427","428","429","430","431","432","433"],"import styled from 'styled-components';\r\nimport plus from './plusSign.png'\r\nimport { AttractionModal } from './AttractionModal';\r\nimport { GlobalStyle } from '../../globalStyles';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios'\r\nimport { MdClose } from 'react-icons/md';\r\n\r\n\r\nconst CallsBorder = styled.div`\r\noverflow: hidden;\r\nbackground: transparent;\r\nmargin: 15px 0px;\r\nposition: absolute;\r\nleft: 25%;\r\nwidth: 20%;\r\nheight: 240px;\r\nborder-right: 2px solid black;\r\nalign-content: center;\r\n`\r\nconst RideName = styled.div`\r\ntext-align: center;\r\nfont-size: 30px;\r\noverflow: hidden;\r\n`\r\n\r\nconst PauseButton = styled.button`\r\nmargin-top: 70px;\r\nmargin-left: 20px;\r\njustify-content: center;\r\nheight: 17%;\r\nwidth: 85%;\r\nborder: 2px solid black;\r\nbackground: transparent;\r\noverflow: hidden;\r\n`\r\nconst EndButton = styled.button`\r\nmargin-top: 2px;\r\nmargin-left: 20px;\r\njustify-content: center;\r\nheight: 17%;\r\nwidth: 85%;\r\nborder: 2px solid black;\r\nbackground: transparent;\r\noverflow: hidden;\r\n`\r\nconst AddIntervalsBorder = styled.tr`\r\noverflow: hidden;\r\nbackground: transparent;\r\nmargin: 15px 0px;\r\nposition: absolute;\r\nleft: 45%;\r\nwidth: 43.8%;\r\nheight: 240px;\r\noverflow: hidden;\r\noverflow-x: scroll;\r\nwhite-space: nowrap;\r\n`;\r\n\r\n\r\nconst IntervalCard = styled.div`\r\nwidth: 50%;\r\nheight: 100%;\r\nborder-right: 2px solid black;\r\ndisplay: inline-block;\r\noverflow: hidden;\r\n`\r\nconst CardTime = styled.div`\r\nposition: absolute;\r\ntop: 0%;\r\nheight: 12%;\r\nwidth: 50%;\r\nborder-bottom: 2px solid black;\r\ntext-align: center;\r\nborder-bottom: 2px solid black;\r\nfont-size: 90%;\r\nfont-weight: bold;\r\noverflow: hidden;\r\n`\r\nconst CardCollect = styled.div`\r\nposition: absolute;\r\ntop: 12%;\r\ntext-align: left;\r\nfont-size: 90%;\r\nfont-weight: bold;\r\n`\r\n\r\nconst CardStarting = styled.div`\r\nborder-top: 2px solid black;\r\nposition: absolute;\r\ntop: 47%;\r\nheight: 28%;\r\nwidth: 50%;\r\nborder-bottom: 2px solid black;\r\ntext-align: left;\r\nfont-size: 90%;\r\nfont-weight: bold;\r\n`\r\nconst CardEnding = styled.div`\r\nposition: absolute;\r\ntop: 75%;\r\nheight: 28%;\r\nwidth: 20%;\r\ntext-align: left;\r\nfont-size: 90%;\r\nfont-weight: bold;\r\n`\r\nconst Image = styled.img`\r\ndisplay:flex;\r\nheight: 70px;\r\nborder: none;\r\n`\r\nconst Button = styled.button`\r\ndisplay: inline-block;\r\nbackground: transparent;\r\nposition: absolute;\r\nleft: 17.5%;\r\ntop: 35%;\r\nborder: none;\r\n`\r\nconst RideSelect = styled.select`\r\nalign-content: right;\r\n`\r\nconst RideButton = styled.button`\r\nbackground: lightgray;\r\nfont-size: 20px;\r\nwidth: 30%;\r\nborder-radius: 10px;\r\noverflow: auto;\r\n`\r\n\r\nconst DeleteButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 15px;\r\n  width: 20px;\r\n  height: 30px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Variables = styled.li`\r\nfont-size: 11.5px;\r\nmargin-left: 15px;\r\noverflow: hidden;\r\n`\r\nconst InputVariables = styled.input`\r\nwidth: 70px;\r\n`\r\nconst SubmitButton = styled.button`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 200px;\r\n  height: 20px;\r\n  font-size: 10px;\r\n`\r\n\r\nconst Border = styled.div`\r\noverflow: hidden;\r\nbackground: transparent;\r\nmargin: 15px 0px;\r\nposition: absolute;\r\nleft: 0px;\r\nwidth: 25%;\r\nheight: 240px;\r\nborder-right: 2px solid black;\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\noverflow: hidden;\r\noverflow-y: scroll;\r\nbackground: transparent;\r\nposition: absolute;\r\nleft: 0px;\r\nwidth: 100%;\r\n`;\r\n\r\nconst Label1 = styled.h1`\r\nmargin-top: 2%;\r\nmargin-left: 0%;\r\nfont-size: 175%;\r\ntext-align: center;\r\nfont-weight: normal;\r\n`\r\nconst AttractionIntervals = (props) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const styleGray = {backgroundColor : '#AFAFAF'};\r\n    const openModal = () => {\r\n    setShowModal(prev => !prev);\r\n    };\r\n\r\n\r\n        //states\r\n        const [intervalList, setIntervalList] = useState([]);\r\n        const [rideSelect, setRideSelect] = useState('');\r\n        var cardCount = 0;\r\n        var currentRide = '';\r\n\r\n\r\n        //state to get all attractions\r\n        const [attractionList, setAttractionList] = useState([]);\r\n        //recieve data from backend to display\r\n        const GetAttractions = () => {\r\n            //console.log(res.data)\r\n            useEffect(() => {\r\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\r\n                setAttractionList(res.data);\r\n                }).catch(err => console.log(err));\r\n                }, [])\r\n        }\r\n\r\n        const GetIntervals = () => {\r\n\r\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\r\n            console.log(rideSelect)\r\n            setIntervalList(res.data)\r\n            }).catch(err => console.log(err));\r\n        }\r\n        \r\n        const deleteInterval = (ride_name) => {\r\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\r\n          };\r\n\r\n          //edit info\r\n          const [WaitTime, setWaitTime] = useState('');\r\n          const [Throughput, setThroughput] = useState('');\r\n          const [AvailableSeats, setAvailableSeats] = useState('');\r\n          const [AvailableDown, setAvailableDown] = useState('');\r\n\r\n          const editInterval = (id, rideName) =>{\r\n            Axios.put('http://localhost:3001/editInterval', {\r\n\r\n                id: id,\r\n                ride_name: rideName,\r\n                WaitTime: WaitTime,\r\n                Throughput: Throughput,\r\n                AvailableSeats: AvailableSeats,\r\n                AvailableDown: AvailableDown\r\n                          \r\n                }).then(() =>{\r\n                alert('successful insert');\r\n\r\n            }).then( () => {\r\n                console.log(\"Successfully sent to port 3001\");\r\n            });\r\n          };\r\n         \r\n    return (\r\n        <>\r\n\r\n            <CallsBorder>\r\n                <RideName>  \r\n                {window.addEventListener('load', GetAttractions())}\r\n                    <RideSelect onChange={(e) => {\r\n                        setRideSelect(e.target.value);\r\n                      }}\r\n                      >\r\n                        <option>Select Attraction</option>\r\n\r\n\r\n            {attractionList.map((val, key) => {\r\n\r\n              return (\r\n                  <>                                \r\n                          <option>{val.ride_name}</option>\r\n                  </>\r\n              );\r\n              })}\r\n        </RideSelect>\r\n        <RideButton onClick={() => {\r\n            GetIntervals()\r\n        }}>Submit</RideButton>\r\n\r\n                </RideName>\r\n                <PauseButton> Pause Calls </PauseButton>\r\n                <EndButton> End Todays Calls </EndButton>\r\n            </CallsBorder>\r\n\r\n            <AddIntervalsBorder>\r\n\r\n            <IntervalCard>\r\n             \r\n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\r\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\r\n                    <GlobalStyle /> \r\n            </IntervalCard> \r\n\r\n            {/* {useEffect(() => {\r\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\r\n            console.log(rideSelect)\r\n            setIntervalList(res.data)\r\n            }).catch(err => console.log(err));\r\n            }, [])} */}\r\n                {intervalList.map((val, key) => {\r\n                    var id = val.id;\r\n\r\n                    var emptyArrayTest = `emptyArray${id}`;\r\n\r\n                    emptyArrayTest = [];\r\n\r\n\r\n                    const checkWait = () => {\r\n                        if (val.checkedWaitTime == true){\r\n                        if (WaitTime == ''){\r\n                            console.log(`waitTime${id}`)\r\n                            emptyArrayTest.push(`waitTime${id}`)\r\n                        }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\r\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                    }\r\n\r\n                    const checkThroughput = () => {\r\n                        if (val.checkedThroughput == true){\r\n                        if (Throughput == ''){\r\n                            emptyArrayTest.push(`throughput${id}`)\r\n                        }\r\n\r\n                        return (\r\n                            <div>\r\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\r\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\r\n                            </div>\r\n                        );\r\n\r\n                        }\r\n                    }\r\n\r\n                    const checkAvailable = () => {\r\n                        if (val.checkedAvailableSeats == true){\r\n                        if (AvailableSeats == ''){\r\n                            emptyArrayTest.push(`available${id}`)\r\n                        }\r\n\r\n\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\r\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    const checkDown = () => {\r\n\r\n                        if (val.checkedAvailableDown == true){\r\n                            if (AvailableDown == ''){\r\n                                emptyArrayTest.push(`down${id}`)\r\n                            }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\r\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                      {currentRide = val.ride_name}\r\n                      {cardCount = cardCount + 1}\r\n                        return (\r\n                            <>\r\n\r\n                            \r\n\r\n                            <IntervalCard>\r\n                            <CardTime>Every {val.timeValue} Minutes\r\n                            <DeleteButton\r\n                             onClick={() => {console.log(id); deleteInterval(id);\r\n                                  setTimeout(function(){\r\n                                    window.location.reload(); \r\n                                   }, 2);\r\n                               }}/>\r\n                             \r\n                             </CardTime>\r\n\r\n\r\n                            <CardCollect>\r\n                                {checkWait()}\r\n                                {checkThroughput()}\r\n                                {checkAvailable()}\r\n                                {checkDown()}\r\n\r\n\r\n                                <SubmitButton  onClick={() =>{\r\n\r\n                                    console.log(id)\r\n\r\n                                    var wait = `waitTime${id}`;\r\n                                    var throughput = `throughput${id}`;\r\n                                    var seats = `available${id}`;\r\n                                    var down = `down${id}`;\r\n\r\n                                    var refresh = 0;\r\n                                    console.log(emptyArrayTest);\r\n                                    if(emptyArrayTest.includes(wait)){\r\n                                        document.getElementById(wait).style.background = 'pink';\r\n                                        alert(\"Error! Wait time is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(throughput)){\r\n                                        document.getElementById(throughput).style.background = 'pink';\r\n                                        alert(\"Error! Throughput is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(seats)){\r\n                                        document.getElementById(seats).style.background = 'pink';\r\n                                        alert(\"Error! Available Seats is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if(emptyArrayTest.includes(down)){\r\n                                        document.getElementById(down).style.background = 'pink';\r\n                                        alert(\"Error! Available Down is empty.\")\r\n                                        refresh = 1;\r\n                                    }\r\n                                    if (refresh == 0){\r\n                                        setTimeout(function(){\r\n                                            window.location.reload(); \r\n                                           }, 2);\r\n                                        editInterval(id, val.ride_name)\r\n                                    }\r\n\r\n\r\n                                    // document.getElementById('3').style.background = \"pink\";\r\n\r\n                                    //editInterval(id, val.ride_name)\r\n                                    // window.location.reload();\r\n                                }}>Submit</SubmitButton>\r\n                                </CardCollect>\r\n                                \r\n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\r\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\r\n                            \r\n                            </IntervalCard>\r\n                            </>\r\n                        );\r\n                        })}\r\n\r\n            </AddIntervalsBorder>\r\n            <Border>\r\n            <Label1> Attraction Intervals </Label1>\r\n                <InfoContainer>\r\n                {window.addEventListener('load', GetAttractions())}\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <thead>\r\n                        <tr style = {styleGray}>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\"># of Specific Intervals</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr><td>{currentRide}</td><td>{cardCount}</td></tr>\r\n                    </tbody>\r\n\r\n                    {/* {attractionList.map((val, key) => {\r\n                        var ride = val.ride_name;\r\n                 \r\n                        return(\r\n                    <tbody>\r\n                        <tr><td>{ride}</td><td>{cardCount}</td></tr>\r\n                    </tbody>\r\n                        );\r\n                    })} */}\r\n\r\n             \r\n                </table>\r\n                </InfoContainer>    \r\n\r\n            </Border>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttractionIntervals","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\globalStyles.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\AttractionModal.js",["434","435","436","437","438","439","440","441","442","443","444"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst Background = styled.div`\r\n  width: 0px;\r\n  height: 0px;\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  top: 200px;\r\n  width: 485px;\r\n  height: 100%;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: grey;\r\n  position: relative;\r\n  border-radius: 10px;\r\n`;\r\n\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  line-height: 1.8;\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    text-align: left;\r\n    color: lightblue;\r\n  }\r\n  header {\r\n    \r\n    font-size: 20pt;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 40px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst InputStyle = styled.input`\r\nmargin-bottom: 20px;\r\nwidth: 40%;\r\n`\r\nconst Submit = styled.button`\r\nmargin-top: 20px;\r\nwidth: 50%;\r\nposition: relative;\r\nleft: 20%;\r\n`\r\nconst TR = styled.div`\r\npadding-right: 10px;\r\nfont-size: 17px;\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Form = styled.form`\r\nwidth: 11%;\r\n`\r\nexport const AttractionModal = ({ showModal, setShowModal, ride }) => {\r\n  const modalRef = useRef();\r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showModal ? 1 : 0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showModal) {\r\n        setShowModal(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowModal, showModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  //states\r\n  const [startingTime, setStartingTime] = useState('');\r\n  const [endingTime, setEndingTime] = useState('');\r\n  const [timeValue, setTime] = useState('');\r\n  const [typeState, setTypeState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let typeState = [\r\n      { id: 1, type: \"Wait Time\"},\r\n      { id: 2, type: \"Throughput\"},\r\n      { id: 3, type: \"Available Seats\"},\r\n      { id: 4, type: \"Available Down\"},\r\n    ];\r\n    setTypeState(\r\n      typeState.map(d => {\r\n        return {\r\n          select: false,\r\n          id: d.id,\r\n          type: d.type,\r\n        };\r\n      })\r\n    );\r\n  }, []);\r\n  //state to get all attractions\r\n  //send the attraction data to the backend running on port 3001\r\n  //specifically /addAttraction\r\n  \r\n  const submitInterval = () =>{\r\n    Axios.post('http://localhost:3001/addInterval', {\r\n                  ride_name: ride,\r\n                  timeValue: timeValue,\r\n                  typeState: typeState.map((d, i)=>  {\r\n                  if (d.select === true) {\r\n\r\n                    const checkData = {\r\n                      isChecked: true,\r\n                      id: d.id,\r\n                      type: d.type\r\n                    }\r\n                    //[d.id, d.type, d.select]                    \r\n\r\n                    return checkData;\r\n                  }\r\n                  else {\r\n                    const checkData = {\r\n                      isChecked: false,\r\n                      id: d.id,\r\n                      type: d.type\r\n                    }\r\n                    //[d.id, d.type, d.select]                    \r\n\r\n                    return checkData;\r\n                  }\r\n                  }),\r\n                  startingTime: startingTime,\r\n                  endingTime: endingTime}).then(() =>{\r\n                    alert('successful insert');\r\n                }).then( () => {\r\n                  console.log(\"Successfully sent to port 3001\");\r\n                });\r\n  };\r\n  var emptyBoxArray = [];\r\n  const changeInputColor = (emptyBoxArray) => {\r\n    for (let index = 0; index < emptyBoxArray.length; index++) {\r\n      var element = emptyBoxArray[index];\r\n      console.log(document.getElementById(element));\r\n      document.getElementById(element).style.backgroundColor = \"pink\";\r\n      if(element == 'dataID'){\r\n        document.getElementById(\"collectDataID\").style.color = \"red\";\r\n      }\r\n      if(element == 'timeValueID'){\r\n        document.getElementById(\"timeID\").style.color = \"red\";\r\n      }\r\n      if(element == 'startingTimeID'){\r\n        document.getElementById(\"startingID\").style.color = \"red\";\r\n      }\r\n      if(element == 'endingTimeID'){\r\n        document.getElementById(\"endingID\").style.color = \"red\";\r\n      }\r\n    }\r\n  }\r\nvar checkArray = [];\r\n  const checkEmpty = () => {\r\n    var empty = false;\r\n    if(timeValue == '') {\r\n      alert(\"Time Value is empty\");\r\n      emptyBoxArray.push('timeValueID');\r\n      empty = true;\r\n    }\r\n    typeState.map((d)=>  {\r\n    if (d.select === false) {\r\n        checkArray.push(d.type)\r\n    }})\r\n    if(checkArray.length == typeState.length) {\r\n      alert(\"No checkboxes are selected\");\r\n      emptyBoxArray.push('dataID');\r\n      empty = true;\r\n    }\r\n    if(startingTime == '') {\r\n      alert(\"Starting Time is empty\");\r\n      emptyBoxArray.push('startingTimeID');\r\n      empty = true;\r\n    }\r\n    if(endingTime == '') {\r\n      alert(\"Ending Time is empty\");\r\n      emptyBoxArray.push('endingTimeID');\r\n      empty = true;\r\n    }\r\n    return empty;\r\n  }\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <Background onClick={closeModal} ref={modalRef}>\r\n          <animated.div style={animation}>\r\n            <ModalWrapper showModal={showModal}>\r\n              <ModalContent>\r\n\r\n                <header>Add an Interval</header>\r\n                {/* <form> Ride Name</form>\r\n                <InputStyle type='text' name='Name' onChange={(e) => {\r\n                  setRideName(e.target.value);\r\n                }}></InputStyle> */}\r\n                <form id='timeID' >Time Value:</form>\r\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\r\n                  setTime(e.target.value);\r\n                }}></InputStyle>\r\n                <form id='collectDataID' >Collect:            </form>\r\n                  <Menu>\r\n                {typeState.map((d, i) => ( \r\n                <TR key={d.id}>\r\n             <th>\r\n     \r\n                <input \r\n                  id = 'dataID'\r\n                  class=\"checkbox\"\r\n                  onChange={event => {\r\n                    let checked = event.target.checked;\r\n                    setTypeState(\r\n                      typeState.map(data => {\r\n                        if (d.id === data.id) {\r\n                          data.select = checked;\r\n                          var checkID = d.id;\r\n                          console.log(checkID);\r\n                        }\r\n                        return data;\r\n                      })\r\n                    );\r\n                  }}\r\n                  type=\"checkbox\"\r\n                  checked={d.select}\r\n                ></input>\r\n                  </th>\r\n              <td>{d.type}</td>\r\n\r\n            </TR>\r\n                ))}\r\n                </Menu>\r\n\r\n                <form id='startingID'>Starting:</form>\r\n\r\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\r\n                  setStartingTime(e.target.value);\r\n                }}></InputStyle>\r\n\r\n                <form id='endingID'>Ending:</form>\r\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\r\n                  setEndingTime(e.target.value);\r\n                }}></InputStyle>\r\n\r\n<Submit \r\n                onClick={() => {\r\n\r\n                                  if(checkEmpty() == true){\r\n                                    changeInputColor(emptyBoxArray);\r\n                                  }\r\n                                  else {\r\n                                    setShowModal(prev => !prev);\r\n                                    submitInterval();\r\n                                    setTimeout(function(){\r\n                                      window.location.reload(); \r\n                                    }, 1);\r\n                                  }\r\n\r\n                               }}>Submit</Submit>\r\n              \r\n                \r\n\r\n\r\n              </ModalContent>\r\n              <CloseModalButton\r\n                aria-label='Close modal'\r\n                onClick={() => setShowModal(prev => !prev)}\r\n              />\r\n\r\n            </ModalWrapper>\r\n          </animated.div>\r\n        </Background>\r\n      ) : null}\r\n    </>\r\n  );\r\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\ParkwideModal.js",["445","446","447","448","449","450","451","452","453","454","455"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst Background = styled.div`\r\n  width: 0px;\r\n  height: 0px;\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  top: 200px;\r\n  width: 485px;\r\n  height: 100%;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: grey;\r\n  position: relative;\r\n  border-radius: 10px;\r\n`;\r\n\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  line-height: 1.8;\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  form {\r\n    text-align: left;\r\n    color: lightblue;\r\n  }\r\n  header {\r\n    \r\n    font-size: 20pt;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 40px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst InputStyle = styled.input`\r\nmargin-bottom: 20px;\r\nwidth: 40%;\r\n`\r\nconst Submit = styled.button`\r\nmargin-top: 20px;\r\nwidth: 50%;\r\nposition: relative;\r\nleft: 20%;\r\n`\r\nconst TR = styled.div`\r\npadding-right: 10px;\r\nfont-size: 17px;\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Form = styled.form`\r\nwidth: 11%;\r\n`\r\nexport const ParkwideModal = ({ showModal, setShowModal, ride }) => {\r\n  const modalRef = useRef();\r\n\r\n  const animation = useSpring({\r\n    config: {\r\n      duration: 250\r\n    },\r\n    opacity: showModal ? 1 : 0,\r\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\r\n  });\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showModal) {\r\n        setShowModal(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowModal, showModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  //states\r\n  const [startingTime, setStartingTime] = useState('');\r\n  const [endingTime, setEndingTime] = useState('');\r\n  const [timeValue, setTime] = useState('');\r\n  const [typeState, setTypeState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let typeState = [\r\n      { id: 1, type: \"Wait Time\"},\r\n      { id: 2, type: \"Throughput\"},\r\n      { id: 3, type: \"Available Seats\"},\r\n      { id: 4, type: \"Available Down\"},\r\n    ];\r\n    setTypeState(\r\n      typeState.map(d => {\r\n        return {\r\n          select: false,\r\n          id: d.id,\r\n          type: d.type,\r\n        };\r\n      })\r\n    );\r\n  }, []);\r\n  //state to get all attractions\r\n  //send the attraction data to the backend running on port 3001\r\n  //specifically /addAttraction\r\n  \r\n  const submitInterval = () =>{\r\n    Axios.post('http://localhost:3001/addParkInterval', {\r\n                  ride_name: ride,\r\n                  timeValue: timeValue,\r\n                  typeState: typeState.map((d, i)=>  {\r\n                  if (d.select === true) {\r\n\r\n                    const checkData = {\r\n                      isChecked: true,\r\n                      id: d.id,\r\n                      type: d.type\r\n                    }\r\n                    //[d.id, d.type, d.select]                    \r\n\r\n                    return checkData;\r\n                  }\r\n                  else {\r\n                    const checkData = {\r\n                      isChecked: false,\r\n                      id: d.id,\r\n                      type: d.type\r\n                    }\r\n                    //[d.id, d.type, d.select]                    \r\n\r\n                    return checkData;\r\n                  }\r\n                  }),\r\n                  startingTime: startingTime,\r\n                  endingTime: endingTime}).then(() =>{\r\n                    alert('successful insert');\r\n                }).then( () => {\r\n                  console.log(\"Successfully sent to port 3001\");\r\n                });\r\n  };\r\n\r\n  var emptyBoxArray = [];\r\n  const changeInputColor = (emptyBoxArray) => {\r\n    for (let index = 0; index < emptyBoxArray.length; index++) {\r\n      var element = emptyBoxArray[index];\r\n      console.log(document.getElementById(element));\r\n      document.getElementById(element).style.backgroundColor = \"pink\";\r\n      if(element == 'dataID'){\r\n        document.getElementById(\"collectDataID\").style.color = \"red\";\r\n      }\r\n      if(element == 'timeValueID'){\r\n        document.getElementById(\"timeID\").style.color = \"red\";\r\n      }\r\n      if(element == 'startingTimeID'){\r\n        document.getElementById(\"startingID\").style.color = \"red\";\r\n      }\r\n      if(element == 'endingTimeID'){\r\n        document.getElementById(\"endingID\").style.color = \"red\";\r\n      }\r\n    }\r\n  }\r\nvar checkArray = [];\r\n  const checkEmpty = () => {\r\n    var empty = false;\r\n    if(timeValue == '') {\r\n      alert(\"Time Value is empty\");\r\n      emptyBoxArray.push('timeValueID');\r\n      empty = true;\r\n    }\r\n    typeState.map((d)=>  {\r\n    if (d.select === false) {\r\n        checkArray.push(d.type)\r\n    }})\r\n    if(checkArray.length == typeState.length) {\r\n      alert(\"No checkboxes are selected\");\r\n      emptyBoxArray.push('dataID');\r\n      empty = true;\r\n    }\r\n    if(startingTime == '') {\r\n      alert(\"Starting Time is empty\");\r\n      emptyBoxArray.push('startingTimeID');\r\n      empty = true;\r\n    }\r\n    if(endingTime == '') {\r\n      alert(\"Ending Time is empty\");\r\n      emptyBoxArray.push('endingTimeID');\r\n      empty = true;\r\n    }\r\n    return empty;\r\n  }\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <Background onClick={closeModal} ref={modalRef}>\r\n          <animated.div style={animation}>\r\n            <ModalWrapper showModal={showModal}>\r\n              <ModalContent>\r\n\r\n                <header>Add an Interval</header>\r\n                {/* <form> Ride Name</form>\r\n                <InputStyle type='text' name='Name' onChange={(e) => {\r\n                  setRideName(e.target.value);\r\n                }}></InputStyle> */}\r\n                <form id='timeID' >Time Value:</form>\r\n                <InputStyle id='timeValueID' type='number' name='Time' onChange={(e) => {\r\n                  setTime(e.target.value);\r\n                }}></InputStyle>\r\n                <form id='collectDataID' >Collect:            </form>\r\n                  <Menu>\r\n                {typeState.map((d, i) => ( \r\n                <TR key={d.id}>\r\n             <th>\r\n     \r\n                <input \r\n                  id = 'dataID'\r\n                  class=\"checkbox\"\r\n                  onChange={event => {\r\n                    let checked = event.target.checked;\r\n                    setTypeState(\r\n                      typeState.map(data => {\r\n                        if (d.id === data.id) {\r\n                          data.select = checked;\r\n                          var checkID = d.id;\r\n                          console.log(checkID);\r\n                        }\r\n                        return data;\r\n                      })\r\n                    );\r\n                  }}\r\n                  type=\"checkbox\"\r\n                  checked={d.select}\r\n                ></input>\r\n                  </th>\r\n              <td>{d.type}</td>\r\n\r\n            </TR>\r\n                ))}\r\n                </Menu>\r\n\r\n                <form id='startingID'>Starting:</form>\r\n\r\n                <InputStyle id='startingTimeID' type='time' name='startingTime' onChange={(e) => {\r\n                  setStartingTime(e.target.value);\r\n                }}></InputStyle>\r\n\r\n                <form id='endingID'>Ending:</form>\r\n                <InputStyle id='endingTimeID' type='time' name='endingTime' onChange={(e) => {\r\n                  setEndingTime(e.target.value);\r\n                }}></InputStyle>\r\n\r\n<Submit \r\n                onClick={() => {\r\n\r\n                                  if(checkEmpty() == true){\r\n                                    changeInputColor(emptyBoxArray);\r\n                                  }\r\n                                  else {\r\n                                    setShowModal(prev => !prev);\r\n                                    submitInterval();\r\n                                    setTimeout(function(){\r\n                                      window.location.reload(); \r\n                                    }, 1);\r\n                                  }\r\n\r\n                               }}>Submit</Submit>\r\n              \r\n                \r\n\r\n\r\n              </ModalContent>\r\n              <CloseModalButton\r\n                aria-label='Close modal'\r\n                onClick={() => setShowModal(prev => !prev)}\r\n              />\r\n\r\n            </ModalWrapper>\r\n          </animated.div>\r\n        </Background>\r\n      ) : null}\r\n    </>\r\n  );\r\n};","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\rideInfo.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\Options.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsGraph.js",["456","457"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\CollectedData.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\BasicInfo.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\SubIntervals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\MiniGraph.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\FileUpload.js",["458","459","460","461"],"import React, { Fragment, useState } from 'react';\n\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input col-md-offset-3 '\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label col-md-offset-3' htmlFor='customFile'>\n            \n          </label>\n        </div>\n        <input\n          type='submit'\n          value='Upload'\n          className='btn col-md-5 col-md-offset-3'\n        />\n\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-9 m-auto col-md-offset-1'>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\FileUpload\\Progress.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\fire.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\reportWebVitals.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\login.js",["462","463"],"import React, { useEffect, useState } from \"react\";\nimport fire from '../fire';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  color: black;\n  display: block;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n`;\n\nexport const Div = styled.div`\nmargin: auto;\ntext-align: center;\nheight: 600px;\nwidth: 400px;\nbackground-color: #44639b;\n`;\n\nexport const Button = styled.button`\nwidth: 50%;\nheight: 10%;\nfont-size: 25px;\n`;\n\nexport const Box = styled.div`\npadding-top: 40px;\nfont-size: 25px;\nmargin-bottom: 30px;\ntext-align: center;\nheight: 100px;\n\n`;\n\n\nexport const Name = styled.div`\ncolor: silver;\n\n`;\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pending: true\n    };\n  }\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n        this.setState({pending: false });\n      }\n    })\n  }\n\n  login() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    fire.auth().signInWithEmailAndPassword(email, password)\n      .then((u) => {\n        console.log('Successfully Logged In');\n      })\n      .catch((err) => {\n        console.log('Error: ' + err.toString());\n      })\n  }\n\n  render() {\n    if(!this.state.pending){\n    return (\n      <Div>\n        <Box>\n          <Name>Email</Name>\n          <input id=\"email\" placeholder=\"Enter Email..\" type=\"text\"/>\n        </Box>\n        <Box>\n          <Name>Password</Name>\n          <input id=\"password\" placeholder=\"Enter Password..\" type=\"text\"/>\n        </Box>\n        <NavLink to='Main'> <Button style={{margin: '40px'}} onClick={this.login}> Login </Button> </NavLink>\n      </Div>\n    ) }\n    else {\n      return <>Loading...</>\n    }\n  }\n  \n}\n\nexport default Login;","C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\pages\\logout.js",[],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\Interval\\IntervalCollectModal.js",["464","465","466","467","468","469","470","471","472","473","474","475","476"],"C:\\Users\\arote\\OneDrive\\Desktop\\College\\Rowan\\Spring 2021\\Software Engineering\\project-titan\\client\\src\\components\\RideInfo\\QuickToolsBasicInfo.js",[],{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","severity":1,"message":"482","line":1,"column":50,"nodeType":"483","messageId":"484","endLine":1,"endColumn":54},{"ruleId":"481","severity":1,"message":"485","line":1,"column":56,"nodeType":"483","messageId":"484","endLine":1,"endColumn":63},{"ruleId":"481","severity":1,"message":"486","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":33},{"ruleId":"481","severity":1,"message":"487","line":1,"column":46,"nodeType":"483","messageId":"484","endLine":1,"endColumn":57},{"ruleId":"481","severity":1,"message":"488","line":151,"column":7,"nodeType":"483","messageId":"484","endLine":151,"endColumn":17},{"ruleId":"489","severity":1,"message":"490","line":223,"column":6,"nodeType":"483","endLine":223,"endColumn":15,"suggestions":"491"},{"ruleId":"492","severity":1,"message":"493","line":224,"column":7,"nodeType":"494","messageId":"495","endLine":224,"endColumn":58},{"ruleId":"492","severity":1,"message":"493","line":225,"column":7,"nodeType":"494","messageId":"495","endLine":225,"endColumn":81},{"ruleId":"492","severity":1,"message":"493","line":226,"column":7,"nodeType":"494","messageId":"495","endLine":226,"endColumn":79},{"ruleId":"496","severity":1,"message":"497","line":282,"column":46,"nodeType":"498","messageId":"499","endLine":282,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":284,"column":32,"nodeType":"502","messageId":"503","endLine":284,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":304,"column":46,"nodeType":"498","messageId":"499","endLine":304,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":306,"column":36,"nodeType":"502","messageId":"503","endLine":306,"endColumn":38},{"ruleId":"496","severity":1,"message":"497","line":327,"column":46,"nodeType":"498","messageId":"499","endLine":327,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":329,"column":40,"nodeType":"502","messageId":"503","endLine":329,"endColumn":42},{"ruleId":"496","severity":1,"message":"497","line":349,"column":44,"nodeType":"498","messageId":"499","endLine":349,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":351,"column":38,"nodeType":"502","messageId":"503","endLine":351,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":371,"column":46,"nodeType":"498","messageId":"499","endLine":371,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":373,"column":42,"nodeType":"502","messageId":"503","endLine":373,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":393,"column":46,"nodeType":"498","messageId":"499","endLine":393,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":395,"column":42,"nodeType":"502","messageId":"503","endLine":395,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":415,"column":46,"nodeType":"498","messageId":"499","endLine":415,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":417,"column":42,"nodeType":"502","messageId":"503","endLine":417,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":437,"column":46,"nodeType":"498","messageId":"499","endLine":437,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":439,"column":42,"nodeType":"502","messageId":"503","endLine":439,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":459,"column":46,"nodeType":"498","messageId":"499","endLine":459,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":461,"column":42,"nodeType":"502","messageId":"503","endLine":461,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":481,"column":46,"nodeType":"498","messageId":"499","endLine":481,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":483,"column":42,"nodeType":"502","messageId":"503","endLine":483,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":503,"column":46,"nodeType":"498","messageId":"499","endLine":503,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":505,"column":42,"nodeType":"502","messageId":"503","endLine":505,"endColumn":44},{"ruleId":"496","severity":1,"message":"497","line":525,"column":46,"nodeType":"498","messageId":"499","endLine":525,"endColumn":48},{"ruleId":"500","severity":1,"message":"501","line":527,"column":42,"nodeType":"502","messageId":"503","endLine":527,"endColumn":44},{"ruleId":"481","severity":1,"message":"486","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":33},{"ruleId":"481","severity":1,"message":"487","line":1,"column":46,"nodeType":"483","messageId":"484","endLine":1,"endColumn":57},{"ruleId":"481","severity":1,"message":"504","line":160,"column":21,"nodeType":"483","messageId":"484","endLine":160,"endColumn":32},{"ruleId":"481","severity":1,"message":"505","line":161,"column":10,"nodeType":"483","messageId":"484","endLine":161,"endColumn":22},{"ruleId":"481","severity":1,"message":"506","line":161,"column":24,"nodeType":"483","messageId":"484","endLine":161,"endColumn":39},{"ruleId":"481","severity":1,"message":"507","line":162,"column":10,"nodeType":"483","messageId":"484","endLine":162,"endColumn":22},{"ruleId":"481","severity":1,"message":"508","line":162,"column":24,"nodeType":"483","messageId":"484","endLine":162,"endColumn":39},{"ruleId":"481","severity":1,"message":"509","line":163,"column":10,"nodeType":"483","messageId":"484","endLine":163,"endColumn":24},{"ruleId":"481","severity":1,"message":"510","line":163,"column":26,"nodeType":"483","messageId":"484","endLine":163,"endColumn":43},{"ruleId":"481","severity":1,"message":"511","line":164,"column":10,"nodeType":"483","messageId":"484","endLine":164,"endColumn":24},{"ruleId":"481","severity":1,"message":"512","line":164,"column":26,"nodeType":"483","messageId":"484","endLine":164,"endColumn":43},{"ruleId":"481","severity":1,"message":"513","line":165,"column":10,"nodeType":"483","messageId":"484","endLine":165,"endColumn":21},{"ruleId":"481","severity":1,"message":"514","line":165,"column":23,"nodeType":"483","messageId":"484","endLine":165,"endColumn":37},{"ruleId":"481","severity":1,"message":"515","line":166,"column":10,"nodeType":"483","messageId":"484","endLine":166,"endColumn":21},{"ruleId":"481","severity":1,"message":"516","line":166,"column":23,"nodeType":"483","messageId":"484","endLine":166,"endColumn":37},{"ruleId":"481","severity":1,"message":"517","line":167,"column":10,"nodeType":"483","messageId":"484","endLine":167,"endColumn":18},{"ruleId":"481","severity":1,"message":"518","line":167,"column":20,"nodeType":"483","messageId":"484","endLine":167,"endColumn":31},{"ruleId":"481","severity":1,"message":"519","line":168,"column":10,"nodeType":"483","messageId":"484","endLine":168,"endColumn":18},{"ruleId":"481","severity":1,"message":"520","line":168,"column":20,"nodeType":"483","messageId":"484","endLine":168,"endColumn":31},{"ruleId":"481","severity":1,"message":"521","line":169,"column":10,"nodeType":"483","messageId":"484","endLine":169,"endColumn":18},{"ruleId":"481","severity":1,"message":"522","line":169,"column":20,"nodeType":"483","messageId":"484","endLine":169,"endColumn":31},{"ruleId":"481","severity":1,"message":"523","line":170,"column":10,"nodeType":"483","messageId":"484","endLine":170,"endColumn":21},{"ruleId":"481","severity":1,"message":"524","line":170,"column":23,"nodeType":"483","messageId":"484","endLine":170,"endColumn":37},{"ruleId":"481","severity":1,"message":"525","line":171,"column":10,"nodeType":"483","messageId":"484","endLine":171,"endColumn":21},{"ruleId":"481","severity":1,"message":"526","line":171,"column":23,"nodeType":"483","messageId":"484","endLine":171,"endColumn":37},{"ruleId":"481","severity":1,"message":"527","line":172,"column":10,"nodeType":"483","messageId":"484","endLine":172,"endColumn":18},{"ruleId":"481","severity":1,"message":"528","line":172,"column":20,"nodeType":"483","messageId":"484","endLine":172,"endColumn":31},{"ruleId":"489","severity":1,"message":"529","line":218,"column":10,"nodeType":"483","endLine":218,"endColumn":19,"suggestions":"530"},{"ruleId":"492","severity":1,"message":"493","line":219,"column":15,"nodeType":"494","messageId":"495","endLine":219,"endColumn":66},{"ruleId":"492","severity":1,"message":"493","line":220,"column":15,"nodeType":"494","messageId":"495","endLine":220,"endColumn":89},{"ruleId":"496","severity":1,"message":"497","line":251,"column":36,"nodeType":"498","messageId":"499","endLine":251,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":253,"column":22,"nodeType":"502","messageId":"503","endLine":253,"endColumn":24},{"ruleId":"496","severity":1,"message":"497","line":270,"column":36,"nodeType":"498","messageId":"499","endLine":270,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":272,"column":26,"nodeType":"502","messageId":"503","endLine":272,"endColumn":28},{"ruleId":"496","severity":1,"message":"497","line":289,"column":36,"nodeType":"498","messageId":"499","endLine":289,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":291,"column":30,"nodeType":"502","messageId":"503","endLine":291,"endColumn":32},{"ruleId":"496","severity":1,"message":"497","line":308,"column":34,"nodeType":"498","messageId":"499","endLine":308,"endColumn":36},{"ruleId":"500","severity":1,"message":"501","line":310,"column":28,"nodeType":"502","messageId":"503","endLine":310,"endColumn":30},{"ruleId":"496","severity":1,"message":"497","line":327,"column":36,"nodeType":"498","messageId":"499","endLine":327,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":329,"column":32,"nodeType":"502","messageId":"503","endLine":329,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":346,"column":36,"nodeType":"498","messageId":"499","endLine":346,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":348,"column":32,"nodeType":"502","messageId":"503","endLine":348,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":365,"column":36,"nodeType":"498","messageId":"499","endLine":365,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":367,"column":32,"nodeType":"502","messageId":"503","endLine":367,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":384,"column":36,"nodeType":"498","messageId":"499","endLine":384,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":386,"column":32,"nodeType":"502","messageId":"503","endLine":386,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":403,"column":36,"nodeType":"498","messageId":"499","endLine":403,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":405,"column":32,"nodeType":"502","messageId":"503","endLine":405,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":422,"column":36,"nodeType":"498","messageId":"499","endLine":422,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":424,"column":32,"nodeType":"502","messageId":"503","endLine":424,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":441,"column":36,"nodeType":"498","messageId":"499","endLine":441,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":443,"column":32,"nodeType":"502","messageId":"503","endLine":443,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":460,"column":36,"nodeType":"498","messageId":"499","endLine":460,"endColumn":38},{"ruleId":"500","severity":1,"message":"501","line":462,"column":32,"nodeType":"502","messageId":"503","endLine":462,"endColumn":34},{"ruleId":"481","severity":1,"message":"486","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":33},{"ruleId":"481","severity":1,"message":"531","line":1,"column":35,"nodeType":"483","messageId":"484","endLine":1,"endColumn":44},{"ruleId":"481","severity":1,"message":"487","line":1,"column":46,"nodeType":"483","messageId":"484","endLine":1,"endColumn":57},{"ruleId":"532","severity":1,"message":"533","line":200,"column":14,"nodeType":"534","messageId":"503","endLine":200,"endColumn":21},{"ruleId":"532","severity":1,"message":"535","line":201,"column":22,"nodeType":"534","messageId":"503","endLine":201,"endColumn":37},{"ruleId":"532","severity":1,"message":"536","line":202,"column":15,"nodeType":"534","messageId":"503","endLine":202,"endColumn":23},{"ruleId":"532","severity":1,"message":"537","line":203,"column":18,"nodeType":"534","messageId":"503","endLine":203,"endColumn":29},{"ruleId":"532","severity":1,"message":"538","line":204,"column":20,"nodeType":"534","messageId":"503","endLine":204,"endColumn":33},{"ruleId":"532","severity":1,"message":"539","line":205,"column":19,"nodeType":"534","messageId":"503","endLine":205,"endColumn":31},{"ruleId":"500","severity":1,"message":"501","line":216,"column":16,"nodeType":"502","messageId":"503","endLine":216,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":221,"column":19,"nodeType":"502","messageId":"503","endLine":221,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":226,"column":19,"nodeType":"502","messageId":"503","endLine":226,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":231,"column":21,"nodeType":"502","messageId":"503","endLine":231,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":236,"column":21,"nodeType":"502","messageId":"503","endLine":236,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":241,"column":18,"nodeType":"502","messageId":"503","endLine":241,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":246,"column":18,"nodeType":"502","messageId":"503","endLine":246,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":251,"column":15,"nodeType":"502","messageId":"503","endLine":251,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":256,"column":15,"nodeType":"502","messageId":"503","endLine":256,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":261,"column":15,"nodeType":"502","messageId":"503","endLine":261,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":266,"column":18,"nodeType":"502","messageId":"503","endLine":266,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":271,"column":18,"nodeType":"502","messageId":"503","endLine":271,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":276,"column":15,"nodeType":"502","messageId":"503","endLine":276,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":444,"column":29,"nodeType":"502","messageId":"503","endLine":444,"endColumn":31},{"ruleId":"481","severity":1,"message":"540","line":38,"column":8,"nodeType":"483","messageId":"484","endLine":38,"endColumn":17},{"ruleId":"481","severity":1,"message":"541","line":40,"column":9,"nodeType":"483","messageId":"484","endLine":40,"endColumn":18},{"ruleId":"481","severity":1,"message":"542","line":2,"column":17,"nodeType":"483","messageId":"484","endLine":2,"endColumn":25},{"ruleId":"481","severity":1,"message":"531","line":2,"column":27,"nodeType":"483","messageId":"484","endLine":2,"endColumn":36},{"ruleId":"481","severity":1,"message":"543","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":49},{"ruleId":"481","severity":1,"message":"544","line":26,"column":9,"nodeType":"483","messageId":"484","endLine":26,"endColumn":19},{"ruleId":"481","severity":1,"message":"545","line":27,"column":8,"nodeType":"483","messageId":"484","endLine":27,"endColumn":17},{"ruleId":"481","severity":1,"message":"546","line":28,"column":18,"nodeType":"483","messageId":"484","endLine":28,"endColumn":29},{"ruleId":"547","severity":1,"message":"548","line":62,"column":31,"nodeType":"549","endLine":62,"endColumn":42},{"ruleId":"481","severity":1,"message":"550","line":28,"column":18,"nodeType":"483","messageId":"484","endLine":28,"endColumn":29},{"ruleId":"481","severity":1,"message":"544","line":31,"column":9,"nodeType":"483","messageId":"484","endLine":31,"endColumn":19},{"ruleId":"481","severity":1,"message":"551","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"544","line":14,"column":9,"nodeType":"483","messageId":"484","endLine":14,"endColumn":19},{"ruleId":"481","severity":1,"message":"552","line":6,"column":7,"nodeType":"483","messageId":"484","endLine":6,"endColumn":13},{"ruleId":"481","severity":1,"message":"540","line":43,"column":8,"nodeType":"483","messageId":"484","endLine":43,"endColumn":17},{"ruleId":"481","severity":1,"message":"541","line":45,"column":9,"nodeType":"483","messageId":"484","endLine":45,"endColumn":18},{"ruleId":"481","severity":1,"message":"552","line":6,"column":7,"nodeType":"483","messageId":"484","endLine":6,"endColumn":13},{"ruleId":"481","severity":1,"message":"540","line":46,"column":12,"nodeType":"483","messageId":"484","endLine":46,"endColumn":21},{"ruleId":"481","severity":1,"message":"541","line":48,"column":11,"nodeType":"483","messageId":"484","endLine":48,"endColumn":20},{"ruleId":"481","severity":1,"message":"553","line":27,"column":7,"nodeType":"483","messageId":"484","endLine":27,"endColumn":16},{"ruleId":"481","severity":1,"message":"545","line":32,"column":12,"nodeType":"483","messageId":"484","endLine":32,"endColumn":21},{"ruleId":"481","severity":1,"message":"554","line":32,"column":23,"nodeType":"483","messageId":"484","endLine":32,"endColumn":35},{"ruleId":"481","severity":1,"message":"505","line":33,"column":12,"nodeType":"483","messageId":"484","endLine":33,"endColumn":24},{"ruleId":"481","severity":1,"message":"506","line":33,"column":26,"nodeType":"483","messageId":"484","endLine":33,"endColumn":41},{"ruleId":"481","severity":1,"message":"507","line":34,"column":12,"nodeType":"483","messageId":"484","endLine":34,"endColumn":24},{"ruleId":"481","severity":1,"message":"508","line":34,"column":26,"nodeType":"483","messageId":"484","endLine":34,"endColumn":41},{"ruleId":"481","severity":1,"message":"509","line":35,"column":12,"nodeType":"483","messageId":"484","endLine":35,"endColumn":26},{"ruleId":"481","severity":1,"message":"510","line":35,"column":28,"nodeType":"483","messageId":"484","endLine":35,"endColumn":45},{"ruleId":"481","severity":1,"message":"511","line":36,"column":12,"nodeType":"483","messageId":"484","endLine":36,"endColumn":26},{"ruleId":"481","severity":1,"message":"512","line":36,"column":28,"nodeType":"483","messageId":"484","endLine":36,"endColumn":45},{"ruleId":"481","severity":1,"message":"513","line":37,"column":12,"nodeType":"483","messageId":"484","endLine":37,"endColumn":23},{"ruleId":"481","severity":1,"message":"514","line":37,"column":25,"nodeType":"483","messageId":"484","endLine":37,"endColumn":39},{"ruleId":"481","severity":1,"message":"515","line":38,"column":12,"nodeType":"483","messageId":"484","endLine":38,"endColumn":23},{"ruleId":"481","severity":1,"message":"516","line":38,"column":25,"nodeType":"483","messageId":"484","endLine":38,"endColumn":39},{"ruleId":"481","severity":1,"message":"517","line":39,"column":12,"nodeType":"483","messageId":"484","endLine":39,"endColumn":20},{"ruleId":"481","severity":1,"message":"518","line":39,"column":22,"nodeType":"483","messageId":"484","endLine":39,"endColumn":33},{"ruleId":"481","severity":1,"message":"519","line":40,"column":12,"nodeType":"483","messageId":"484","endLine":40,"endColumn":20},{"ruleId":"481","severity":1,"message":"520","line":40,"column":22,"nodeType":"483","messageId":"484","endLine":40,"endColumn":33},{"ruleId":"481","severity":1,"message":"521","line":41,"column":12,"nodeType":"483","messageId":"484","endLine":41,"endColumn":20},{"ruleId":"481","severity":1,"message":"522","line":41,"column":22,"nodeType":"483","messageId":"484","endLine":41,"endColumn":33},{"ruleId":"481","severity":1,"message":"523","line":42,"column":12,"nodeType":"483","messageId":"484","endLine":42,"endColumn":23},{"ruleId":"481","severity":1,"message":"524","line":42,"column":25,"nodeType":"483","messageId":"484","endLine":42,"endColumn":39},{"ruleId":"481","severity":1,"message":"525","line":43,"column":12,"nodeType":"483","messageId":"484","endLine":43,"endColumn":23},{"ruleId":"481","severity":1,"message":"526","line":43,"column":25,"nodeType":"483","messageId":"484","endLine":43,"endColumn":39},{"ruleId":"481","severity":1,"message":"527","line":44,"column":12,"nodeType":"483","messageId":"484","endLine":44,"endColumn":20},{"ruleId":"481","severity":1,"message":"528","line":44,"column":22,"nodeType":"483","messageId":"484","endLine":44,"endColumn":33},{"ruleId":"481","severity":1,"message":"540","line":38,"column":8,"nodeType":"483","messageId":"484","endLine":38,"endColumn":17},{"ruleId":"481","severity":1,"message":"541","line":40,"column":7,"nodeType":"483","messageId":"484","endLine":40,"endColumn":16},{"ruleId":"481","severity":1,"message":"553","line":33,"column":7,"nodeType":"483","messageId":"484","endLine":33,"endColumn":16},{"ruleId":"477","replacedBy":"555"},{"ruleId":"479","replacedBy":"556"},{"ruleId":"481","severity":1,"message":"486","line":6,"column":27,"nodeType":"483","messageId":"484","endLine":6,"endColumn":33},{"ruleId":"481","severity":1,"message":"487","line":6,"column":46,"nodeType":"483","messageId":"484","endLine":6,"endColumn":57},{"ruleId":"481","severity":1,"message":"557","line":155,"column":12,"nodeType":"483","messageId":"484","endLine":155,"endColumn":22},{"ruleId":"481","severity":1,"message":"558","line":155,"column":24,"nodeType":"483","messageId":"484","endLine":155,"endColumn":37},{"ruleId":"500","severity":1,"message":"501","line":207,"column":49,"nodeType":"502","messageId":"503","endLine":207,"endColumn":51},{"ruleId":"500","severity":1,"message":"501","line":208,"column":38,"nodeType":"502","messageId":"503","endLine":208,"endColumn":40},{"ruleId":"500","severity":1,"message":"501","line":224,"column":51,"nodeType":"502","messageId":"503","endLine":224,"endColumn":53},{"ruleId":"500","severity":1,"message":"501","line":225,"column":44,"nodeType":"502","messageId":"503","endLine":225,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":239,"column":55,"nodeType":"502","messageId":"503","endLine":239,"endColumn":57},{"ruleId":"500","severity":1,"message":"501","line":240,"column":48,"nodeType":"502","messageId":"503","endLine":240,"endColumn":50},{"ruleId":"500","severity":1,"message":"501","line":254,"column":54,"nodeType":"502","messageId":"503","endLine":254,"endColumn":56},{"ruleId":"500","severity":1,"message":"501","line":255,"column":47,"nodeType":"502","messageId":"503","endLine":255,"endColumn":49},{"ruleId":"500","severity":1,"message":"501","line":313,"column":49,"nodeType":"502","messageId":"503","endLine":313,"endColumn":51},{"ruleId":"500","severity":1,"message":"501","line":304,"column":49,"nodeType":"502","messageId":"503","endLine":304,"endColumn":51},{"ruleId":"500","severity":1,"message":"501","line":305,"column":38,"nodeType":"502","messageId":"503","endLine":305,"endColumn":40},{"ruleId":"500","severity":1,"message":"501","line":321,"column":51,"nodeType":"502","messageId":"503","endLine":321,"endColumn":53},{"ruleId":"500","severity":1,"message":"501","line":322,"column":40,"nodeType":"502","messageId":"503","endLine":322,"endColumn":42},{"ruleId":"500","severity":1,"message":"501","line":337,"column":55,"nodeType":"502","messageId":"503","endLine":337,"endColumn":57},{"ruleId":"500","severity":1,"message":"501","line":338,"column":44,"nodeType":"502","messageId":"503","endLine":338,"endColumn":46},{"ruleId":"500","severity":1,"message":"501","line":354,"column":54,"nodeType":"502","messageId":"503","endLine":354,"endColumn":56},{"ruleId":"500","severity":1,"message":"501","line":355,"column":47,"nodeType":"502","messageId":"503","endLine":355,"endColumn":49},{"ruleId":"492","severity":1,"message":"493","line":368,"column":23,"nodeType":"494","messageId":"495","endLine":368,"endColumn":52},{"ruleId":"492","severity":1,"message":"493","line":369,"column":23,"nodeType":"494","messageId":"495","endLine":369,"endColumn":50},{"ruleId":"500","severity":1,"message":"501","line":425,"column":49,"nodeType":"502","messageId":"503","endLine":425,"endColumn":51},{"ruleId":"481","severity":1,"message":"559","line":80,"column":7,"nodeType":"483","messageId":"484","endLine":80,"endColumn":11},{"ruleId":"500","severity":1,"message":"501","line":184,"column":18,"nodeType":"502","messageId":"503","endLine":184,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":187,"column":18,"nodeType":"502","messageId":"503","endLine":187,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":190,"column":18,"nodeType":"502","messageId":"503","endLine":190,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":193,"column":18,"nodeType":"502","messageId":"503","endLine":193,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":201,"column":18,"nodeType":"502","messageId":"503","endLine":201,"endColumn":20},{"ruleId":"496","severity":1,"message":"560","line":206,"column":22,"nodeType":"498","messageId":"561","endLine":206,"endColumn":24},{"ruleId":"500","severity":1,"message":"501","line":210,"column":26,"nodeType":"502","messageId":"503","endLine":210,"endColumn":28},{"ruleId":"500","severity":1,"message":"501","line":215,"column":21,"nodeType":"502","messageId":"503","endLine":215,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":220,"column":19,"nodeType":"502","messageId":"503","endLine":220,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":290,"column":51,"nodeType":"502","messageId":"503","endLine":290,"endColumn":53},{"ruleId":"481","severity":1,"message":"559","line":80,"column":7,"nodeType":"483","messageId":"484","endLine":80,"endColumn":11},{"ruleId":"500","severity":1,"message":"501","line":185,"column":18,"nodeType":"502","messageId":"503","endLine":185,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":188,"column":18,"nodeType":"502","messageId":"503","endLine":188,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":191,"column":18,"nodeType":"502","messageId":"503","endLine":191,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":194,"column":18,"nodeType":"502","messageId":"503","endLine":194,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":202,"column":18,"nodeType":"502","messageId":"503","endLine":202,"endColumn":20},{"ruleId":"496","severity":1,"message":"560","line":207,"column":22,"nodeType":"498","messageId":"561","endLine":207,"endColumn":24},{"ruleId":"500","severity":1,"message":"501","line":211,"column":26,"nodeType":"502","messageId":"503","endLine":211,"endColumn":28},{"ruleId":"500","severity":1,"message":"501","line":216,"column":21,"nodeType":"502","messageId":"503","endLine":216,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":221,"column":19,"nodeType":"502","messageId":"503","endLine":221,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":291,"column":51,"nodeType":"502","messageId":"503","endLine":291,"endColumn":53},{"ruleId":"481","severity":1,"message":"540","line":37,"column":8,"nodeType":"483","messageId":"484","endLine":37,"endColumn":17},{"ruleId":"481","severity":1,"message":"541","line":39,"column":9,"nodeType":"483","messageId":"484","endLine":39,"endColumn":18},{"ruleId":"481","severity":1,"message":"562","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":16},{"ruleId":"481","severity":1,"message":"563","line":8,"column":10,"nodeType":"483","messageId":"484","endLine":8,"endColumn":18},{"ruleId":"481","severity":1,"message":"564","line":10,"column":10,"nodeType":"483","messageId":"484","endLine":10,"endColumn":17},{"ruleId":"481","severity":1,"message":"565","line":11,"column":10,"nodeType":"483","messageId":"484","endLine":11,"endColumn":26},{"ruleId":"481","severity":1,"message":"531","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"542","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"551","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":13},{"ruleId":"481","severity":1,"message":"545","line":117,"column":10,"nodeType":"483","messageId":"484","endLine":117,"endColumn":19},{"ruleId":"481","severity":1,"message":"504","line":117,"column":21,"nodeType":"483","messageId":"484","endLine":117,"endColumn":32},{"ruleId":"481","severity":1,"message":"566","line":118,"column":10,"nodeType":"483","messageId":"484","endLine":118,"endColumn":22},{"ruleId":"481","severity":1,"message":"567","line":118,"column":24,"nodeType":"483","messageId":"484","endLine":118,"endColumn":39},{"ruleId":"481","severity":1,"message":"568","line":119,"column":10,"nodeType":"483","messageId":"484","endLine":119,"endColumn":20},{"ruleId":"481","severity":1,"message":"569","line":119,"column":22,"nodeType":"483","messageId":"484","endLine":119,"endColumn":35},{"ruleId":"481","severity":1,"message":"570","line":120,"column":10,"nodeType":"483","messageId":"484","endLine":120,"endColumn":19},{"ruleId":"481","severity":1,"message":"571","line":121,"column":21,"nodeType":"483","messageId":"484","endLine":121,"endColumn":33},{"ruleId":"481","severity":1,"message":"572","line":122,"column":10,"nodeType":"483","messageId":"484","endLine":122,"endColumn":19},{"ruleId":"481","severity":1,"message":"573","line":122,"column":21,"nodeType":"483","messageId":"484","endLine":122,"endColumn":33},{"ruleId":"481","severity":1,"message":"574","line":123,"column":10,"nodeType":"483","messageId":"484","endLine":123,"endColumn":22},{"ruleId":"481","severity":1,"message":"575","line":123,"column":24,"nodeType":"483","messageId":"484","endLine":123,"endColumn":39},"no-native-reassign",["576"],"no-negated-in-lhs",["577"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'RideSelect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getAttractions, props.location.ride_name] as a second argument to the useEffect Hook.",["578"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setRideName' is assigned a value but never used.","'dailyOpening' is assigned a value but never used.","'setDailyOpening' is assigned a value but never used.","'dailyClosing' is assigned a value but never used.","'setDailyClosing' is assigned a value but never used.","'theoryCapacity' is assigned a value but never used.","'setTheoryCapacity' is assigned a value but never used.","'targetCapacity' is assigned a value but never used.","'setTargetCapacity' is assigned a value but never used.","'minVehicles' is assigned a value but never used.","'setMinVehicles' is assigned a value but never used.","'maxVehicles' is assigned a value but never used.","'setMaxVehicles' is assigned a value but never used.","'maxSeats' is assigned a value but never used.","'setMaxSeats' is assigned a value but never used.","'minStaff' is assigned a value but never used.","'setMinStaff' is assigned a value but never used.","'maxStaff' is assigned a value but never used.","'setMaxStaff' is assigned a value but never used.","'parkSection' is assigned a value but never used.","'setParkSection' is assigned a value but never used.","'weatherCode' is assigned a value but never used.","'setWeatherCode' is assigned a value but never used.","'rideType' is assigned a value but never used.","'setRideType' is assigned a value but never used.","React Hook useEffect contains a call to 'setRideSelect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.ride_name] as a second argument to the useEffect Hook.",["579"],"'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'minTemp'.","ObjectExpression","Duplicate key 'powerRedundancy'.","Duplicate key 'numGates'.","Duplicate key 'ridePrimary'.","Duplicate key 'rideSecondary'.","Duplicate key 'rideTertiary'.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'useState' is defined but never used.","'MdSignalCellularConnectedNoInternet4Bar' is defined but never used.","'styleLight' is assigned a value but never used.","'ride_name' is assigned a value but never used.","'setRideList' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'setStatList' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is assigned a value but never used.","'styleBlue' is assigned a value but never used.","'setRide_name' is assigned a value but never used.",["576"],["577"],"'rideSelect' is assigned a value but never used.","'setRideSelect' is assigned a value but never used.","'Form' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Progress' is defined but never used.","'filename' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'startingTime' is assigned a value but never used.","'setStartingTime' is assigned a value but never used.","'endingTime' is assigned a value but never used.","'setEndingTime' is assigned a value but never used.","'timeValue' is assigned a value but never used.","'setTypeState' is assigned a value but never used.","'unitState' is assigned a value but never used.","'setUnitState' is assigned a value but never used.","'intervalList' is assigned a value but never used.","'setIntervalList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},"Add dependencies array: [getAttractions, props.location.ride_name]",{"range":"584","text":"585"},"Add dependencies array: [props.location.ride_name]",{"range":"586","text":"587"},[5741,5741],", [getAttractions, props.location.ride_name]",[5338,5338],", [props.location.ride_name]"]