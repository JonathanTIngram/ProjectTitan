{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Graph\\\\ChartLine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, LineSeries, HorizontalGridLines, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartLine() {\n  _s();\n\n  var [rideList, setRideList] = useState([]);\n  var [statList, setStatList] = useState([]);\n  var [dataList, setDataList] = useState([]);\n  var graphData = [];\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRideList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStatList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedData = () => {\n    Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n      //console.log(res.data)\n      setDataList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  let index = 0;\n  var rList = [];\n  var wList = [];\n  var tList = [];\n  var asList = [];\n  var adList = [];\n  var timeList = [];\n  var dateList = [];\n  {\n    dataList.map((val, key) => {\n      if (val.ride_name) {\n        var time = new Date(val.ts).toString().substring(16, 24); //time conversion\n\n        var date = val.ts;\n        date = date.substring(0, 10);\n        index = index + 1;\n        console.log(\"Ride name = \", val.ride_name);\n        console.log(\"Time = \", time);\n        console.log(\"Date = \", date);\n        rList.push(val.ride_name);\n        timeList.push(time);\n        dateList.push(date);\n        console.log(\"Wait Time = \", val.WaitTime);\n        wList.push(val.WaitTime);\n        console.log(\"Throughput = \", val.Throughput);\n        tList.push(val.Throughput);\n        console.log(\"Available Seats = \", val.AvailableSeats);\n        asList.push(val.AvailableSeats);\n        console.log(\"Available Down = \", val.AvailableDown);\n        adList.push(val.AvailableDown);\n        console.log('');\n      }\n    });\n  }\n\n  const compareRide = () => {\n    for (var i = 0; i < index; i++) {\n      //check box list is compared with collected data\n      if (rideList.includes(rList[i])) {\n        console.log(\"Matched \", rList[i]); //each variable is compared with the selected stat\n\n        if (statList.includes(\"Wait Time\")) {\n          //locate variable\n          if (wList[i] != -1) {\n            console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n          }\n        }\n\n        if (statList.includes(\"Throughput\")) {\n          //locate variable\n          if (tList[i] != -1) {\n            console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Seats\")) {\n          //locate variable\n          if (asList[i] != -1) {\n            console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Down\")) {\n          //locate variable\n          if (adList[i] != -1) {\n            console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n          }\n        }\n\n        console.log('');\n      }\n    }\n  };\n\n  var data = [];\n\n  for (var i = 0; i < tList.length; i += 1) {\n    if (tList[i] > 0) {\n      var temp = timeList[i].split(\":\");\n      console.log(temp);\n      data.push({\n        x: i,\n        // timeList[i](split(\":\").join(\"\").substring(0,3)),\n        y: tList[i]\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', CheckedData());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n    }, []), console.log(\"Amount of rides \", index), console.log(\"Ride names = \", rList), console.log(\"TimeList = \", timeList), console.log(\"DateList = \", dateList), console.log(\"WaitList = \", wList), console.log(\"ThroughputList = \", tList), console.log(\"AvailableSeatList = \", asList), console.log(\"AvailableDownList = \", adList), compareRide(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 500,\n        width: 900,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          data: data,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartLine, \"vGbCVrqDan+5cQVEl78sxmhvyCo=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Graph/ChartLine.js"],"names":["React","useState","useEffect","Axios","XYPlot","LineSeries","HorizontalGridLines","VerticalGridLines","XAxis","YAxis","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","graphData","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","index","rList","wList","tList","asList","adList","timeList","dateList","map","val","key","ride_name","time","Date","ts","toString","substring","date","push","WaitTime","Throughput","AvailableSeats","AvailableDown","compareRide","i","includes","length","temp","split","x","y","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Axios from 'axios';\r\nimport '../../../node_modules/react-vis/dist/style.css';\r\nimport { XYPlot, LineSeries, HorizontalGridLines, VerticalGridLines, XAxis, YAxis } from 'react-vis';\r\n\r\nfunction ChartLine() {\r\n\r\n\r\n    var [rideList, setRideList] = useState([]);\r\n    var [statList, setStatList] = useState([]);\r\n    var [dataList, setDataList] = useState([]);\r\n    var graphData = [];\r\n\r\n    const CheckedRideName = () => {\r\n\r\n        Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\r\n            //console.log(res.data)\r\n            setRideList(res.data)\r\n        }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n    const CheckedStat = () => {\r\n\r\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\r\n            //console.log(res.data)\r\n            setStatList(res.data)\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    const CheckedData = () => {\r\n\r\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\r\n            //console.log(res.data)\r\n            setDataList(res.data)\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    let index = 0;\r\n    var rList = [];\r\n    var wList = [];\r\n    var tList = [];\r\n    var asList = [];\r\n    var adList = [];\r\n    var timeList = [];\r\n    var dateList = [];\r\n\r\n\r\n    {\r\n        dataList.map((val, key) => {\r\n            if (val.ride_name) {\r\n                var time = new Date(val.ts).toString().substring(16, 24); //time conversion\r\n                var date = val.ts;\r\n                date = date.substring(0, 10)\r\n                index = index + 1;\r\n                console.log(\"Ride name = \", val.ride_name);\r\n                console.log(\"Time = \", time);\r\n                console.log(\"Date = \", date);\r\n                rList.push(val.ride_name);\r\n                timeList.push(time);\r\n                dateList.push(date)\r\n                console.log(\"Wait Time = \", val.WaitTime);\r\n                wList.push(val.WaitTime);\r\n\r\n                console.log(\"Throughput = \", val.Throughput)\r\n                tList.push(val.Throughput);\r\n\r\n\r\n                console.log(\"Available Seats = \", val.AvailableSeats)\r\n                asList.push(val.AvailableSeats);\r\n                console.log(\"Available Down = \", val.AvailableDown)\r\n                adList.push(val.AvailableDown);\r\n\r\n                console.log('');\r\n            }\r\n        })\r\n    }\r\n\r\n    const compareRide = () => {\r\n        for (var i = 0; i < index; i++) {\r\n            //check box list is compared with collected data\r\n            if (rideList.includes(rList[i])) {\r\n                console.log(\"Matched \", rList[i]);\r\n                //each variable is compared with the selected stat\r\n                if (statList.includes(\"Wait Time\")) {\r\n                    //locate variable\r\n                    if (wList[i] != -1) {\r\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\r\n                    }\r\n                }\r\n                if (statList.includes(\"Throughput\")) {\r\n                    //locate variable\r\n                    if (tList[i] != -1) {\r\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\r\n                    }\r\n                }\r\n                if (statList.includes(\"Available Seats\")) {\r\n                    //locate variable\r\n                    if (asList[i] != -1) {\r\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\r\n                    }\r\n                }\r\n                if (statList.includes(\"Available Down\")) {\r\n                    //locate variable\r\n                    if (adList[i] != -1) {\r\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\r\n                    }\r\n                }\r\n\r\n\r\n                console.log('');\r\n            }\r\n        }\r\n    }\r\n\r\n    var data = [];\r\n\r\n    for (var i = 0; i < tList.length; i += 1) {\r\n        if(tList[i] > 0)\r\n        {\r\n            var temp = timeList[i].split(\":\")\r\n            console.log(temp)\r\n            data.push({\r\n                 x: i , // timeList[i](split(\":\").join(\"\").substring(0,3)),\r\n                y: tList[i]\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {useEffect(() => {\r\n                { window.addEventListener('load', CheckedData()) }\r\n                { window.addEventListener('load', CheckedRideName()) }\r\n                { window.addEventListener('load', CheckedStat()) }\r\n            }, [])}\r\n            {console.log(\"Amount of rides \", index)}\r\n            {console.log(\"Ride names = \", rList)}\r\n            {console.log(\"TimeList = \", timeList)}\r\n            {console.log(\"DateList = \", dateList)}\r\n            {console.log(\"WaitList = \", wList)}\r\n            {console.log(\"ThroughputList = \", tList)}\r\n            {console.log(\"AvailableSeatList = \", asList)}\r\n            {console.log(\"AvailableDownList = \", adList)}\r\n\r\n\r\n            {compareRide()}\r\n            <div className=\"App\">\r\n                <XYPlot height={500} width={900}>\r\n                    <VerticalGridLines />\r\n                    <HorizontalGridLines />\r\n                    <XAxis />\r\n                    <YAxis />\r\n                    <LineSeries data={data} color=\"red\" />\r\n                    {/* <LineSeries data={data2} color=\"blue\" />\r\n                    <LineSeries data={data3} color=\"green\" /> */}\r\n                </XYPlot>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}