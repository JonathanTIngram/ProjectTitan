{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\ParkwideIntervals.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`;\n_c = Label1;\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`;\n_c2 = Container;\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c3 = IntervalContainer;\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c4 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 150%;\nfont-weight: bold;\n`;\n_c5 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c6 = CardCollect;\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c7 = CardFrom;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c8 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c9 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`;\n_c10 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\n`;\n_c11 = Button;\n\nconst ParkwideIntervals = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [parkIntervalList, setParkIntervalList] = useState([]);\n\n  const submitIntervals = () => {\n    Axios.post('http://localhost:3001/addParkInterval', {\n      timeValue: timeValue,\n      startingTime: startingTime,\n      endingTime: endingTime\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  }; //recieve data from backend to display\n\n\n  const getParkIntervals = () => {\n    Axios.get('http://localhost:3001/getParkInterval').then(res => {\n      console.log(res.data);\n      return setParkIntervalList(res.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label1, {\n      children: \"Parkwide Intervals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntervalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 42\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParkwideModal, {\n          showModal: showModal,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), useEffect(() => {\n        const every5 = setInterval(() => {\n          getParkIntervals();\n        }, 5000);\n        return () => clearInterval(every5);\n      }, []), parkIntervalList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(IntervalCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardTime, {\n            children: [\"Every \", val.timeValue, \" Minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n            children: [\"Collect \", /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Available Seats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Down Seats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardFrom, {\n            children: [\"From \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"Reported Down Rides\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n            children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Opening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 51\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\" \", val.startingTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n            children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Closing \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 47\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: val.endingTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkwideIntervals, \"tVdqnFUQfaEl+J5Gcq19Z50ffQ0=\");\n\n_c12 = ParkwideIntervals;\nexport default ParkwideIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Label1\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"IntervalContainer\");\n$RefreshReg$(_c4, \"IntervalCard\");\n$RefreshReg$(_c5, \"CardTime\");\n$RefreshReg$(_c6, \"CardCollect\");\n$RefreshReg$(_c7, \"CardFrom\");\n$RefreshReg$(_c8, \"CardStarting\");\n$RefreshReg$(_c9, \"CardEnding\");\n$RefreshReg$(_c10, \"Image\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"ParkwideIntervals\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/ParkwideIntervals.js"],"names":["styled","plus","ParkwideModal","GlobalStyle","Axios","React","useState","useRef","useEffect","useCallback","Label1","h1","Container","div","IntervalContainer","IntervalCard","CardTime","CardCollect","CardFrom","CardStarting","CardEnding","CardH","Image","img","Button","button","ParkwideIntervals","showModal","setShowModal","openModal","prev","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","parkIntervalList","setParkIntervalList","submitIntervals","post","then","alert","console","log","getParkIntervals","get","res","data","every5","setInterval","clearInterval","map","val","key"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 150%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\n`\n\nconst ParkwideIntervals= () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [parkIntervalList, setParkIntervalList] = useState([]);\n\n        const submitIntervals = () =>{\n            Axios.post('http://localhost:3001/addParkInterval', {\n                          timeValue: timeValue,\n                          startingTime: startingTime,\n                          endingTime: endingTime,\n                          }).then(() =>{\n                            alert('successful insert');\n                        }).then( () => {\n                          console.log(\"Successfully sent to port 3001\");\n                        });\n          };\n\n        //recieve data from backend to display\n        const getParkIntervals = () => {\n        Axios.get('http://localhost:3001/getParkInterval').then( (res) => {\n            console.log(res.data)\n            return setParkIntervalList(res.data);\n        });\n    \n        }\n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n\n                \n            {useEffect( () =>{\n                    const every5 = setInterval( () => {\n                        getParkIntervals();\n                    }, 5000);\n\n                    return () => clearInterval(every5);\n                }, [])}\n                {parkIntervalList.map((val, key) => {\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes</CardTime>\n                            <CardCollect>Collect <li>Available Seats</li><li>Down Seats</li></CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals"]},"metadata":{},"sourceType":"module"}