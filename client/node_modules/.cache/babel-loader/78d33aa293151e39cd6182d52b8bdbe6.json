{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js\",\n    _s2 = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`;\n_c = SubmitButton;\n\nfunction GraphCheck() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var [rides, setRides] = useState([]);\n  var [stats, setStats] = useState([]);\n  var [statState, setStatState] = useState([]);\n  var checkedIDList = [];\n  var [Tcheck, setTcheck] = useState();\n\n  const sendStats = statList => {\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  const sendRideName = rideList => {\n    Axios.post('http://localhost:3001/sendRideNameBackend', {\n      rideList: rideList\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRides(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStats(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  var [statList, setStatList] = useState([]);\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  console.log(`idk man ${Tcheck}`);\n  statState = [{\n    id: 1,\n    statistic: \"Throughput\",\n    select: Tcheck\n  }, //Gotta make some JSON or something to set the SELECT as either true or false\n  {\n    id: 2,\n    statistic: \"Wait Time\"\n  }, {\n    id: 3,\n    statistic: \"Available Seats\"\n  }, {\n    id: 4,\n    statistic: \"Available Down\"\n  }];\n  useEffect(() => {\n    setStatState([{\n      id: 1,\n      statistic: \"Throughput\",\n      select: Tcheck\n    }, //Gotta make some JSON or something to set the SELECT as either true or false\n    {\n      id: 2,\n      statistic: \"Wait Time\"\n    }, {\n      id: 3,\n      statistic: \"Available Seats\"\n    }, {\n      id: 4,\n      statistic: \"Available Down\"\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [window.addEventListener('load', GetAttractions()), console.log(stats, rides), useEffect(() => {\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', () => {\n          sendRideName(rides);\n          sendStats(stats);\n          console.log(rides);\n          console.log(stats);\n          setStatState([{\n            statistic: \"Throughput\",\n            select: true\n          }]);\n        });\n      }\n    }, []), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attractionList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                scope: \"row\",\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 27\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => {\n                    console.log(val.ride_name);\n                    setRide_name(val.ride_name);\n\n                    if (!rideList.includes(val.ride_name)) {\n                      rideList = rideList.push(val.ride_name);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 68\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Statistic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: statState.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.statistic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `statCheckbox${d.id}`,\n              onChange: event => {\n                let checked = event.target.checked;\n                Tcheck = checked;\n                console.log(Tcheck);\n                setStatState(statState.map(data => {\n                  if (d.id === data.id) {\n                    data.select = checked;\n                    console.log(d);\n                  }\n\n                  return data;\n                }));\n              },\n              type: \"checkbox\",\n              checked: d.select,\n              onClick: () => {\n                console.log(d.statistic);\n\n                if (!statList.includes(d.statistic)) {\n                  statList = statList.push(d.statistic);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, d.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      onClick: () => {\n        localStorage.clear();\n        console.log(statList);\n        console.log(rideList);\n        sendRideName(rideList);\n        sendStats(statList);\n        setTimeout(function () {\n          window.location.reload();\n        }, 2);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GraphCheck, \"GT6Ffns04U5Q3U2brs1kYIl4H6Q=\");\n\n_c2 = GraphCheck;\nexport default GraphCheck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubmitButton\");\n$RefreshReg$(_c2, \"GraphCheck\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/NewTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js"],"names":["React","useState","useEffect","styled","Axios","SubmitButton","button","GraphCheck","rides","setRides","stats","setStats","statState","setStatState","checkedIDList","Tcheck","setTcheck","sendStats","statList","post","then","alert","console","log","sendRideName","rideList","CheckedRideName","get","res","data","catch","err","CheckedStat","GetAttractions","setAttractionList","setStatList","styleGray","backgroundColor","ride_name","setRide_name","setRideList","attractionList","id","statistic","select","window","addEventListener","map","val","key","includes","push","d","i","event","checked","target","localStorage","clear","setTimeout","location","reload"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\n\nfunction GraphCheck() {\n\n    var [rides, setRides] = useState([]);\n    var [stats, setStats] = useState([]);\n\n    var [statState, setStatState] = useState([]);\n\n    var checkedIDList = [];\n\n    var [Tcheck, setTcheck] = useState();\n\n    \n\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const sendRideName = (rideList) =>{\n    Axios.post('http://localhost:3001/sendRideNameBackend', {\n      rideList: rideList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n\n  const CheckedRideName = () => {\n\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n        //console.log(res.data)\n        setRides(res.data)\n\n    }).catch(err => console.log(err));\n  }\n\n\n  const CheckedStat = () => {\n\n  Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n    //console.log(res.data)\n    setStats(res.data);\n  }).catch(err => console.log(err));\n\n  }\n\n  const GetAttractions = () => {\n    //console.log(res.data)\n    useEffect(() => {\n        Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n        }).catch(err => console.log(err));\n        }, [])\n  }\n\n\n\n  var [statList, setStatList] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n\n\n  console.log(`idk man ${Tcheck}`)\n\n  statState = [\n\n    { id: 1, statistic: \"Throughput\", select: Tcheck}, //Gotta make some JSON or something to set the SELECT as either true or false\n    { id: 2, statistic: \"Wait Time\"},\n    { id: 3, statistic: \"Available Seats\"},\n    { id: 4, statistic: \"Available Down\"},\n  ];\n\n  \n\n\n  useEffect(() => {\n\n    setStatState([\n\n      { id: 1, statistic: \"Throughput\", select: Tcheck}, //Gotta make some JSON or something to set the SELECT as either true or false\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ])\n\n    \n\n  }, []);\n\n  return (\n      \n    <div>\n\n\n        {window.addEventListener('load', GetAttractions())}\n\n        {console.log(stats, rides)}\n        \n        {useEffect(() => {\n            {window.addEventListener('load', CheckedStat())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', () => {\n                sendRideName(rides);\n                sendStats(stats);\n                console.log(rides);\n                console.log(stats);\n\n\n                setStatState([\n                  {statistic: \"Throughput\", select: true}\n                ])\n\n            })}\n            \n        }, [])}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n        {/* <tr><td>ridename</td><td>data</td></tr> */}\n                {attractionList.map((val, key) => {\n                  return (\n                    <>  \n                        \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td><input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                  id={`statCheckbox${d.id}`}\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    Tcheck = checked;\n                    console.log(Tcheck)\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          console.log(d)\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n\n                  onClick={() => {\n                    console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        localStorage.clear();\n        console.log(statList);\n        console.log(rideList)\n        sendRideName(rideList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n         \n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default GraphCheck;"]},"metadata":{},"sourceType":"module"}