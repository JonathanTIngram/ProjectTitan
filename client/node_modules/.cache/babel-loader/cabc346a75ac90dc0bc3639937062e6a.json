{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js\",\n    _s2 = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios';\nimport { saveLists } from './ChartLine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`;\n_c = SubmitButton;\n\nfunction GraphCheck() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var [rides, setRides] = useState([]);\n  var [stats, setStats] = useState([]);\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRides(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStats(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const sendStats = statList => {\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  const sendRideName = rideList => {\n    Axios.post('http://localhost:3001/sendRideNameBackend', {\n      rideList: rideList\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  useEffect(() => {\n    let statState = [{\n      id: 1,\n      statistic: \"Throughput\"\n    }, {\n      id: 2,\n      statistic: \"Wait Time\"\n    }, {\n      id: 3,\n      statistic: \"Available Seats\"\n    }, {\n      id: 4,\n      statistic: \"Available Down\"\n    }];\n    setStatState(statState.map(d => {\n      return {\n        select: false,\n        id: d.id,\n        statistic: d.statistic\n      };\n    }));\n  }, []);\n\n  const changeSelected = () => {\n    statState.map(d => {\n      if (stats.includes(d.statistic)) {\n        console.log(d.statistic);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [window.addEventListener('load', GetAttractions()), console.log(rides, stats), useEffect(() => {\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n      {\n        window.addEventListener('load', changeSelected());\n      }\n    }, []), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attractionList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                scope: \"row\",\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 27\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => {\n                    console.log(val.ride_name);\n                    setRide_name(val.ride_name);\n\n                    if (!rideList.includes(val.ride_name)) {\n                      rideList = rideList.push(val.ride_name);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 29\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Statistic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: statState.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.statistic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => {\n                let checked = event.target.checked;\n                setStatState(statState.map(data => {\n                  if (d.id === data.id) {\n                    data.select = checked;\n                  }\n\n                  return data;\n                }));\n              },\n              type: \"checkbox\",\n              checked: d.select,\n              onClick: () => {\n                //console.log(d.statistic)\n                if (!statList.includes(d.statistic)) {\n                  statList = statList.push(d.statistic);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, d.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      onClick: () => {\n        localStorage.clear(); // console.log(statList);\n        // console.log(rideList)\n\n        sendRideName(rideList);\n        sendStats(statList);\n        setTimeout(function () {\n          window.location.reload();\n        }, 2);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GraphCheck, \"bGdrIWMFQCo8NdkUDIjLKZCDNBA=\");\n\n_c2 = GraphCheck;\nexport default GraphCheck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubmitButton\");\n$RefreshReg$(_c2, \"GraphCheck\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/GraphCheck.js"],"names":["React","useState","useEffect","styled","Axios","saveLists","SubmitButton","button","GraphCheck","rides","setRides","stats","setStats","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","sendStats","statList","post","alert","sendRideName","rideList","GetAttractions","setAttractionList","statState","setStatState","setStatList","styleGray","backgroundColor","ride_name","setRide_name","setRideList","attractionList","id","statistic","map","d","select","changeSelected","includes","window","addEventListener","val","key","push","i","event","checked","target","localStorage","clear","setTimeout","location","reload"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { saveLists } from './ChartLine';\n\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  border-radius: 9px;\n  font-size: 20px;\n`\n\n\nfunction GraphCheck() {\n  var [rides, setRides] = useState([]);\n  var [stats, setStats] = useState([]);\n\n  const CheckedRideName = () => {\n\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n        //console.log(res.data)\n        setRides(res.data)\n    }).catch(err => console.log(err));\n  }\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n        //console.log(res.data)\n        setStats(res.data)\n    }).catch(err => console.log(err));\n}\n  const sendStats = (statList) =>{\n    Axios.post('http://localhost:3001/sendStatsBackend', {\n      statList: statList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const sendRideName = (rideList) =>{\n    Axios.post('http://localhost:3001/sendRideNameBackend', {\n      rideList: rideList\n                  }).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n\n  const GetAttractions = () => {\n    //console.log(res.data)\n    useEffect(() => {\n        Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n        }).catch(err => console.log(err));\n        }, [])\n}\n\n  const [statState, setStatState] = useState([]);\n  var [statList, setStatList] = useState([]);\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  useEffect(() => {\n\n    let statState = [\n      { id: 1, statistic: \"Throughput\"},\n      { id: 2, statistic: \"Wait Time\"},\n      { id: 3, statistic: \"Available Seats\"},\n      { id: 4, statistic: \"Available Down\"},\n    ];\n    \n    setStatState(\n      statState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          statistic: d.statistic,\n  \n        };\n      })\n    );\n  }, []);\n  const changeSelected = () => {\n      statState.map(d => {\n      if(stats.includes(d.statistic)){\n        console.log(d.statistic)\n      }\n    })\n  }\n  return (\n      \n    <div>\n        {window.addEventListener('load', GetAttractions())}\n        {console.log(rides, stats)}\n        {useEffect(() => {\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n            {window.addEventListener('load', changeSelected())}\n            \n        }, [])}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n                {attractionList.map((val, key) => {\n                  return (\n                    <>  \n                        \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td>\n                            <input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Statistic</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          {statState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.statistic}</td>\n              <th scope=\"row\">\n             \n                <input\n                \n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setStatState(\n                      statState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                  \n                  onClick={() => {\n                    //console.log(d.statistic)\n                    if (!statList.includes(d.statistic)){\n                      statList = statList.push(d.statistic)\n                    }\n\n                  }}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n        localStorage.clear();\n        // console.log(statList);\n        // console.log(rideList)\n        sendRideName(rideList);\n        sendStats(statList);\n        setTimeout(function(){\n          window.location.reload(); \n         }, 2);\n      }}>Submit</SubmitButton>\n    </div>\n  );\n}\n\nexport default GraphCheck;"]},"metadata":{},"sourceType":"module"}