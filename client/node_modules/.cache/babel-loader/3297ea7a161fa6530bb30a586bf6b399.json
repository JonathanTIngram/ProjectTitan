{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\AttractionIntervals.js\",\n    _s2 = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`;\n_c2 = RideName;\nconst PauseButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c3 = PauseButton;\nconst MitButton = styled.button`\nmargin-top: 50px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c4 = MitButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c5 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c6 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c7 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c9 = CardCollect;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c10 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c11 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`;\n_c12 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`;\n_c13 = Button;\nconst RideSelect = styled.select`\n    align: right;\n`;\n_c14 = RideSelect;\nvar rideName;\n\nconst AttractionIntervals = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const submitShowRideIntervals = () => {\n    {\n      window.addEventListener('load', GetAttractions());\n    }\n    GetIntervals();\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  const [rideSelect, setRideSelect] = useState(''); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const GetIntervals = () => {\n    Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n      console.log(rideSelect);\n      setIntervalList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(RideName, {\n        children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(RideSelect, {\n          onChange: e => {\n            GetIntervals();\n            setRideSelect(e.target.value);\n            rideName = e.target.value;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Attraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), attractionList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 27\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MitButton, {\n        onClick: setRideSelect(),\n        children: \"Show Rides Intervals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n        children: \" Pause Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n        children: \" End Todays Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n          showModal: showModal,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), useEffect(() => {\n        Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n          console.log(rideSelect);\n          setIntervalList(res.data);\n        }).catch(err => console.log(err));\n      }, []), intervalList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [\"Collect\", /*#__PURE__*/_jsxDEV(\"li\", {\n                children: val.typeState\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 51\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: val.startingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: val.endingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AttractionIntervals, \"rl47EANlNWWcUwqFsxsudwYX+1c=\");\n\n_c15 = AttractionIntervals;\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"RideName\");\n$RefreshReg$(_c3, \"PauseButton\");\n$RefreshReg$(_c4, \"MitButton\");\n$RefreshReg$(_c5, \"EndButton\");\n$RefreshReg$(_c6, \"AddIntervalsBorder\");\n$RefreshReg$(_c7, \"IntervalCard\");\n$RefreshReg$(_c8, \"CardTime\");\n$RefreshReg$(_c9, \"CardCollect\");\n$RefreshReg$(_c10, \"CardStarting\");\n$RefreshReg$(_c11, \"CardEnding\");\n$RefreshReg$(_c12, \"Image\");\n$RefreshReg$(_c13, \"Button\");\n$RefreshReg$(_c14, \"RideSelect\");\n$RefreshReg$(_c15, \"AttractionIntervals\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","CallsBorder","div","RideName","PauseButton","button","MitButton","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","CardH","h1","Image","img","Button","RideSelect","select","rideName","AttractionIntervals","showModal","setShowModal","openModal","prev","submitShowRideIntervals","window","addEventListener","GetAttractions","GetIntervals","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","intervalList","setIntervalList","rideSelect","setRideSelect","attractionList","setAttractionList","get","then","res","data","catch","err","console","log","e","target","value","map","val","key","ride_name"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst MitButton = styled.button`\nmargin-top: 50px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\n    align: right;\n`\nvar rideName;\nconst AttractionIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const submitShowRideIntervals = () => {\n        {window.addEventListener('load', GetAttractions())}\n        GetIntervals();\n    }\n        //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n\n          //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n         //recieve data from backend to display\n         const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n\n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        GetIntervals();\n                        setRideSelect(e.target.value);\n                        rideName = e.target.value;\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n\n                </RideName>\n                <MitButton onClick={setRideSelect()}>Show Rides Intervals</MitButton>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n            \n            </IntervalCard> \n\n            {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])}\n                {intervalList.map((val, key) => {\n                        return (\n                            <>\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes</CardTime>\n                            <CardCollect>Collect\n                                 <li> \n                                     {val.typeState}\n                                 \n                                 </li>\n                                </CardCollect>\n                            <CardStarting>Starting<ul>At Park Opening</ul> <ul>{val.startingTime}</ul></CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul><ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals"]},"metadata":{},"sourceType":"module"}