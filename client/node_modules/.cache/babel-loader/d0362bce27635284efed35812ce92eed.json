{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Graph\\\\RideCheck.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RideCheck() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n  const styleLight = {\n    backgroundColor: '#DFDFDF'\n  };\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n  //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const [rideState, setRideState] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: attractionList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                scope: \"row\",\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 27\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"td\", {\n                scope: \"row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RideCheck, \"PqEVrteCc3eRsvEgiER93G/0Wb0=\");\n\n_c = RideCheck;\nexport default RideCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"RideCheck\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Graph/RideCheck.js"],"names":["React","useState","useEffect","Axios","RideCheck","styleGray","backgroundColor","styleLight","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","rideState","setRideState","window","addEventListener","map","val","key","ride_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAEnB,QAAMC,SAAS,GAAG;AAACC,IAAAA,eAAe,EAAG;AAAnB,GAAlB;AACA,QAAMC,UAAU,GAAG;AAACD,IAAAA,eAAe,EAAG;AAAnB,GAAnB;AAEA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD,CALmB,CAMnB;AAIA;;AACF,QAAMS,cAAc,GAAG,MAAM;AAAA;;AACvB;AACAR,IAAAA,SAAS,CAAC,MAAM;AACZC,MAAAA,KAAK,CAACQ,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAsDC,GAAG,IAAI;AAC7DJ,QAAAA,iBAAiB,CAACI,GAAG,CAACC,IAAL,CAAjB;AACC,OAFD,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGC,KAJI,EAIF,EAJE,CAAT;AAKL,GAPD;;AAXqB,KAWfN,cAXe;;AAmBnB,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AAKA,sBACE;AAAA,eACGoB,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCZ,cAAc,EAA9C,CADH,eAEE;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,KAAK,EAAEL,SAAX;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBAESG,cAAc,CAACe,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEhC,8BACE;AAAA,mCAEI;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiBD,GAAG,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,sBADF,qBACwC;AAAI,gBAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,2BADF;AAQC,SAVF;AAFT;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;IAnDQtB,S;;KAAAA,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\n\nfunction RideCheck() {\n  \n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n \n  const [attractionList, setAttractionList] = useState([]);\n  //recieve data from backend to display\n\n\n\n  //recieve data from backend to display\nconst GetAttractions = () => {\n      //console.log(res.data)\n      useEffect(() => {\n          Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n          }).catch(err => console.log(err));\n          }, [])\n}\n  const [rideState, setRideState] = useState([]);\n    \n  \n\n\n  return (\n    <div>\n      {window.addEventListener('load', GetAttractions())}\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n\n                {attractionList.map((val, key) => {\n                  \n                  return (\n                    <>     \n                   \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td>  <td scope=\"row\"></td>\n                        </tr>\n                    </>\n                  );\n                  })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default RideCheck;"]},"metadata":{},"sourceType":"module"}