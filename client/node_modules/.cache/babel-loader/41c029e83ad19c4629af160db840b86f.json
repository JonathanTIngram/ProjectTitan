{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\NewAttraction\\\\AttractionManagerTable.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 600px;\n`;\n_c = AttractionManagerTableContainer;\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\nborder-top: 2px solid black;\noverflow-y: scroll;\noverflow: hidden;\n`;\n_c2 = Table;\nexport const TH = styled.th`\nwidth: 7.69%;\nheight: 10px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`;\n_c3 = TH;\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`;\n_c4 = TR;\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 7.69%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`;\n_c5 = TD;\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`;\n\nconst AttractionManagerTable = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //states\n  const [ride_name, setRide_name] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState(''); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]);\n  const [phoneList, setPhoneList] = useState([]); //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://54.236.30.18:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n    useEffect(() => {\n      Axios.get('http://54.236.30.18:3001/getPhoneInfo').then(res => {\n        setPhoneList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AttractionManagerTableContainer, {\n      children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"sortable\",\n        children: [/*#__PURE__*/_jsxDEV(TR, {\n          children: [/*#__PURE__*/_jsxDEV(TH, {\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Daily Opening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Daily Closing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Theoretical Capacity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Target Capacity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Minimum Vehicles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Maximum Vehicles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Maximum Seats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Minimum Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Maximum Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Park Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Weather Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TH, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), attractionList.map((val, key) => {\n          var ride = val.ride_name;\n          var parkSection = val.parkSection;\n          var rideModel = val.rideType;\n          var maxVehicles = val.maxVehicles;\n          var minVehicles = val.minVehicles;\n          var maxStaff = val.maxStaff;\n          var maxSeats = val.maxSeats;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TR, {\n              children: [/*#__PURE__*/_jsxDEV(TD, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: {\n                    pathname: '/rideInfo',\n                    ride_name: {\n                      ride\n                    },\n                    parkSection: {\n                      parkSection\n                    },\n                    rideModel: {\n                      rideModel\n                    },\n                    maxVehicles: {\n                      maxVehicles\n                    },\n                    minVehicles: {\n                      minVehicles\n                    },\n                    maxStaff: {\n                      maxStaff\n                    },\n                    maxSeats: {\n                      maxSeats\n                    }\n                  },\n                  children: val.ride_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.dailyOpening\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.dailyClosing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.theoryCapacity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.targetCapacity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.minVehicles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.maxVehicles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.maxSeats\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.minStaff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.maxStaff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.parkSection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.weatherCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TD, {\n                children: val.rideType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AttractionManagerTable, \"/ePxOdVU/zlD81UktJOB0ycIDrE=\");\n\n_c6 = AttractionManagerTable;\nexport default AttractionManagerTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AttractionManagerTableContainer\");\n$RefreshReg$(_c2, \"Table\");\n$RefreshReg$(_c3, \"TH\");\n$RefreshReg$(_c4, \"TR\");\n$RefreshReg$(_c5, \"TD\");\n$RefreshReg$(_c6, \"AttractionManagerTable\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/NewAttraction/AttractionManagerTable.js"],"names":["React","useState","useRef","useEffect","useCallback","NavLink","Link","useSpring","animated","styled","MdClose","Axios","AttractionManagerTableContainer","div","Table","table","TH","th","TR","tr","TD","td","Select","select","AttractionManagerTable","ride_name","setRide_name","dailyOpening","setDailyOpening","dailyClosing","setDailyClosing","theoryCapacity","setTheoryCapacity","targetCapacity","setTargetCapacity","minVehicles","setMinVehicles","maxVehicles","setMaxVehicles","maxSeats","setMaxSeats","minStaff","setMinStaff","maxStaff","setMaxStaff","parkSection","setParkSection","weatherCode","setWeatherCode","rideType","setRideType","attractionList","setAttractionList","phoneList","setPhoneList","GetAttractions","get","then","res","data","catch","err","console","log","window","addEventListener","map","val","key","ride","rideModel","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.8%;\nheight: 600px;\n`;\n\nexport const Table = styled.table`\nwidth: 100%;\nheight: 100%;\nborder-top: 2px solid black;\noverflow-y: scroll;\noverflow: hidden;\n`\nexport const TH = styled.th`\nwidth: 7.69%;\nheight: 10px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\nbackground-color: darkgray;\n`\n\nexport const TR = styled.tr`\nwidth: 100%;\nheight: 50px;\nborder-bottom: 2px solid black;\n`\n\nexport const TD = styled.td`\nbackground-color: lightgrey;\nwidth: 7.69%;\nheight: 50px;\nborder-bottom: 2px solid black;\nborder-left: 2px solid black;\nborder-right: 2px solid black;\ntext-align: center;\n`\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\n\n\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    const [phoneList, setPhoneList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://54.236.30.18:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n\n            useEffect(() => {\n                Axios.get('http://54.236.30.18:3001/getPhoneInfo').then(res => {\n                setPhoneList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <Table className=\"sortable\">\n                    <TR>\n                        \n                        <TH>Ride Name</TH>\n                        <TH>Daily Opening</TH>\n                        <TH>Daily Closing</TH>\n                        <TH>Theoretical Capacity</TH>\n                        <TH>Target Capacity</TH>\n                        <TH>Minimum Vehicles</TH>\n                        <TH>Maximum Vehicles</TH>\n                        <TH>Maximum Seats</TH>\n                        <TH>Minimum Staff</TH>\n                        <TH>Maximum Staff</TH>\n                        <TH>Park Section</TH>\n                        <TH>Weather Code</TH>\n                        <TH>Type</TH>\n                    </TR>\n\n                        {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var parkSection = val.parkSection;\n                        var rideModel = val.rideType;\n                        var maxVehicles = val.maxVehicles;\n                        var minVehicles = val.minVehicles;\n                        var maxStaff = val.maxStaff;\n                        var maxSeats = val.maxSeats;\n\n                        return (\n                            <>\n                            <TR>\n                            <TD><NavLink to = {{\n                                pathname:'/rideInfo',\n                                ride_name: {ride},\n                                parkSection: {parkSection},\n                                rideModel: {rideModel},\n                                maxVehicles: {maxVehicles},\n                                minVehicles: {minVehicles},\n                                maxStaff: {maxStaff},\n                                maxSeats: {maxSeats}\n\n                            }}>{val.ride_name}</NavLink></TD> \n                            <TD>{val.dailyOpening}</TD>\n                            <TD>{val.dailyClosing}</TD>\n                            <TD>{val.theoryCapacity}</TD>\n                            <TD>{val.targetCapacity}</TD>\n                            <TD>{val.minVehicles}</TD>\n                            <TD>{val.maxVehicles}</TD>\n                            <TD>{val.maxSeats}</TD>\n                            <TD>{val.minStaff}</TD>\n                            <TD>{val.maxStaff}</TD>\n                            <TD>{val.parkSection}</TD>\n                            <TD>{val.weatherCode}</TD>\n                            <TD>{val.rideType}</TD>\n                            </TR>\n                            </>\n                        );\n                        })}\n\n            </Table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable\n"]},"metadata":{},"sourceType":"module"}