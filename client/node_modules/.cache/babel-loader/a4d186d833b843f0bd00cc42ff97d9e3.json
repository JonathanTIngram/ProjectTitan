{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`;\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c2 = PauseButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c3 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c4 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c5 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c6 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c7 = CardCollect;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c9 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`;\n_c10 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\n`;\n_c11 = Button;\nconst RideSelect = styled.select`\n    text-align: center;\n    font-size: 30px;\n`;\n_c12 = RideSelect;\n\nconst AttractionIntervals = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  const [rideSelect, setRideSelect] = useState([]); //recieve data from backend to display\n\n  const getAttractions = () => {\n    Axios.get('http://localhost:3001/getAttraction').then(res => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n    });\n  };\n\n  const getIntervals = () => {\n    console.log(rideSelect);\n    Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n      //console.log(res.data)\n      return setIntervalList(res.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n      children: [useEffect(() => {\n        {\n          window.addEventListener('load', () => {\n            getAttractions();\n          });\n        }\n      }), /*#__PURE__*/_jsxDEV(RideSelect, {\n        onChange: e => {\n          getIntervals();\n          setRideSelect(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Attraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this), attractionList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.ride_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n        children: \" Pause Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n        children: \" End Todays Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n          showModal: showModal,\n          setShowModal: setShowModal,\n          rideSelect: rideSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this), intervalList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [\"Collect \", /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\" \", console.log(val.typeState)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 51\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: val.startingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: val.endingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AttractionIntervals, \"QCi0m1z4RPchk7IzyT/js6EWgL4=\");\n\n_c13 = AttractionIntervals;\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"PauseButton\");\n$RefreshReg$(_c3, \"EndButton\");\n$RefreshReg$(_c4, \"AddIntervalsBorder\");\n$RefreshReg$(_c5, \"IntervalCard\");\n$RefreshReg$(_c6, \"CardTime\");\n$RefreshReg$(_c7, \"CardCollect\");\n$RefreshReg$(_c8, \"CardStarting\");\n$RefreshReg$(_c9, \"CardEnding\");\n$RefreshReg$(_c10, \"Image\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"RideSelect\");\n$RefreshReg$(_c13, \"AttractionIntervals\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","CallsBorder","div","RideName","PauseButton","button","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","CardH","h1","Image","img","Button","RideSelect","select","AttractionIntervals","showModal","setShowModal","openModal","prev","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","intervalList","setIntervalList","attractionList","setAttractionList","rideSelect","setRideSelect","getAttractions","get","then","res","data","getIntervals","console","log","window","addEventListener","e","target","value","map","val","key","ride_name"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\n`\n\nconst RideSelect = styled.select`\n    text-align: center;\n    font-size: 30px;\n`\n\nconst AttractionIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n        //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n\n        const [intervalList, setIntervalList] = useState([]);\n        const [attractionList, setAttractionList] = useState([]);\n        const [rideSelect, setRideSelect] = useState([]);\n\n        //recieve data from backend to display\n        const getAttractions = () => {\n            Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n                //console.log(res.data)\n                return setAttractionList(res.data);\n            });\n        \n        }\n\n        const getIntervals= () => {\n            console.log(rideSelect)\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then( (res) => {\n                //console.log(res.data)\n                return setIntervalList(res.data);\n            });\n        \n        }\n\n    return (\n        <>\n\n            <CallsBorder>\n\n            {useEffect(() =>{\n                {window.addEventListener('load',  () => {\n                    getAttractions();\n                })}\n            })}\n\n                \n                <RideSelect onChange={(e) => {\n                            getIntervals();\n                            setRideSelect(e.target.value);\n                            \n                        }}>\n                            <option>Select Attraction</option>\n                {attractionList.map((val, key) => {\n\n                return (\n                    <>                                \n                            <option>{val.ride_name}</option>\n                    </>\n                );\n                })}\n\n                </RideSelect>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} rideSelect={rideSelect}/>\n                    <GlobalStyle /> \n            \n            </IntervalCard> \n\n\n\n                {intervalList.map((val, key) => {\n                        return (\n                            <>\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes</CardTime>\n                            <CardCollect>Collect <li> \n                            <li> {console.log(val.typeState)}</li>\n\n                                </li></CardCollect>\n                            <CardStarting>Starting<ul>At Park Opening</ul> <ul>{val.startingTime}</ul></CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul><ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals\n"]},"metadata":{},"sourceType":"module"}