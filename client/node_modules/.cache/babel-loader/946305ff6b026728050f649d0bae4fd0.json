{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/deletepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\nimport { NavLink as Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Nav = styled.nav`\n  background: transparent;\n  border-bottom: 2px solid black;\n  border-top: 2px solid black;\n  height: 34px;\n  display: flex;\n  padding: 0.5rem calc((62vw - 1000px) / 2);\n  margin: 15px 0px;\n  z-index: 10;\n`;\nexport const NavLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n_c = NavLink;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n_c2 = OuterBorder;\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n_c3 = DeleteBar;\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n_c4 = EditBorder;\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 10.5%;\n  width: 40%;\n  border-right: 2px solid;\n`;\n_c5 = InfoBar;\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n`;\n_c6 = SafetyInfo;\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n_c7 = PhoneInfo;\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n_c8 = ReportInfo;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n_c9 = Box;\nconst DeleteButton = styled.button`\n    padding-right: 10%;\n    padding-left: 10%;\n`;\nconst RideSelect = styled.select`\n    align: right;\n`;\n_c10 = RideSelect;\nconst styleGray = {\n  backgroundColor: '#AFAFAF'\n};\nexport default function DeletePage() {\n  _s();\n\n  //states\n  const [ride_name, setRide_name] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n  const [rideSelect, setRideSelect] = useState(''); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  //recieve data from backend to display\n\n  const getAttractions = () => {\n    Axios.get('http://localhost:3001/getAttraction').then(res => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n    });\n  };\n\n  const getDailyOpening = () => {\n    Axios.get('http://localhost:3001/getDailyOpening').then(res => {\n      return res.data;\n    });\n  };\n\n  const deleteAttraction = ride_name => {\n    Axios.delete(`http://localhost:3001/deleteAttraction/${ride_name}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(OuterBorder, {\n      children: [/*#__PURE__*/_jsxDEV(DeleteBar, {\n        children: \" Delete an Attraction \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RideSelect, {\n        onChange: e => {\n          setRideSelect(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Attraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), attractionList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              children: val.ride_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 27\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InfoBar, {\n        children: \" Basic Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditBorder, {\n        children: [useEffect(() => {\n          {\n            window.addEventListener('load', getAttractions());\n          }\n        }), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: styleGray,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var ride_name;\n\n                    if (rideSelect == val.ride_name) {\n                      ride_name = val.ride_name;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: ride_name\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Daily Opening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var dailyOpening;\n\n                    if (rideSelect == val.ride_name) {\n                      dailyOpening = val.dailyOpening;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: dailyOpening\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Daily Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var dailyClosing;\n\n                    if (rideSelect == val.ride_name) {\n                      dailyClosing = val.dailyClosing;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: dailyClosing\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Theoretical Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var theoryCapacity;\n\n                    if (rideSelect == val.ride_name) {\n                      theoryCapacity = val.theoryCapacity;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: theoryCapacity\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Target Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var targetCapacity;\n\n                    if (rideSelect == val.ride_name) {\n                      targetCapacity = val.targetCapacity;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: targetCapacity\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Maximum Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var maxVehicles;\n\n                    if (rideSelect == val.ride_name) {\n                      maxVehicles = val.maxVehicles;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: maxVehicles\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Minimum Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var minVehicles;\n\n                    if (rideSelect == val.ride_name) {\n                      minVehicles = val.minVehicles;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: minVehicles\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Seats per Vehicle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var dailyClosing;\n\n                    if (rideSelect == val.ride_name) {\n                      dailyClosing = val.dailyClosing;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: dailyClosing\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Maximum Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var maxStaff;\n\n                    if (rideSelect == val.ride_name) {\n                      maxStaff = val.maxStaff;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: maxStaff\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Minimum Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var minStaff;\n\n                    if (rideSelect == val.ride_name) {\n                      minStaff = val.minStaff;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: minStaff\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Park Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var parkSection;\n\n                    if (rideSelect == val.ride_name) {\n                      parkSection = val.parkSection;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: parkSection\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Weather Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var weatherCode;\n\n                    if (rideSelect == val.ride_name) {\n                      weatherCode = val.weatherCode;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: weatherCode\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: attractionList.map((val, key) => {\n                    var rideType;\n\n                    if (rideSelect == val.ride_name) {\n                      rideType = val.rideType;\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: rideType\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/newAttraction\",\n            onClick: () => {\n              window.alert(`The ride: ${ride_name} has been deleted`);\n              deleteAttraction(rideSelect); //ride selected in drop down menu\n            },\n            children: \"Delete Attraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReportInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [\"Required \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: \"  Documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Operations Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Turnstile Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Lockout Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SafetyInfo, {\n        children: \"Safety Critical Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInfo, {\n        children: \"Phone Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeletePage, \"BMQdVeCD6s4TXPDkdFt/53BPVPA=\");\n\n_c11 = DeletePage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"OuterBorder\");\n$RefreshReg$(_c3, \"DeleteBar\");\n$RefreshReg$(_c4, \"EditBorder\");\n$RefreshReg$(_c5, \"InfoBar\");\n$RefreshReg$(_c6, \"SafetyInfo\");\n$RefreshReg$(_c7, \"PhoneInfo\");\n$RefreshReg$(_c8, \"ReportInfo\");\n$RefreshReg$(_c9, \"Box\");\n$RefreshReg$(_c10, \"RideSelect\");\n$RefreshReg$(_c11, \"DeletePage\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/deletepage.js"],"names":["React","useState","useRef","useEffect","useCallback","useSpring","animated","styled","MdClose","Axios","NavLink","Link","Nav","nav","OuterBorder","div","DeleteBar","EditBorder","InfoBar","SafetyInfo","PhoneInfo","ReportInfo","Box","DeleteButton","button","RideSelect","select","styleGray","backgroundColor","DeletePage","ride_name","setRide_name","dailyOpening","setDailyOpening","dailyClosing","setDailyClosing","theoryCapacity","setTheoryCapacity","targetCapacity","setTargetCapacity","minVehicles","setMinVehicles","maxVehicles","setMaxVehicles","maxSeats","setMaxSeats","minStaff","setMinStaff","maxStaff","setMaxStaff","parkSection","setParkSection","weatherCode","setWeatherCode","rideType","setRideType","rideSelect","setRideSelect","attractionList","setAttractionList","getAttractions","get","then","res","data","getDailyOpening","deleteAttraction","delete","e","target","value","map","val","key","window","addEventListener","alert"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios'\n\nimport { NavLink as Link } from 'react-router-dom';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  border-bottom: 2px solid black;\n  border-top: 2px solid black;\n  height: 34px;\n  display: flex;\n  padding: 0.5rem calc((62vw - 1000px) / 2);\n  margin: 15px 0px;\n  z-index: 10;\n`;\n\nexport const NavLink = styled(Link)`\n  margin-left: 40%;\n  font: bold 20px Arial;\n  text-decoration: none;\n  background-color: #EEEEEE;\n  color: #333333;\n  border-top: 1px solid #CCCCCC;\n  border-right: 1px solid #333333;\n  border-bottom: 1px solid #333333;\n  border-left: 1px solid #CCCCCC;\n`;\n\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst DeleteBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 607px;\n  border-right: 2px solid;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 10.5%;\n  width: 40%;\n  border-right: 2px solid;\n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst DeleteButton = styled.button`\n    padding-right: 10%;\n    padding-left: 10%;\n`\n\nconst RideSelect = styled.select`\n    align: right;\n`\n\n\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function DeletePage() {\n\n\n\n  //states\n  const [ride_name, setRide_name] = useState('');\n  const [dailyOpening, setDailyOpening] = useState('');\n  const [dailyClosing, setDailyClosing] = useState('');\n  const [theoryCapacity, setTheoryCapacity] = useState('');\n  const [targetCapacity, setTargetCapacity] = useState('');\n  const [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState('');\n\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n  Axios.get('http://localhost:3001/getAttraction').then( (res) => {\n      //console.log(res.data)\n      return setAttractionList(res.data);\n  });\n\n}\n\nconst getDailyOpening = () => {\n  Axios.get('http://localhost:3001/getDailyOpening').then( (res) =>{\n  return res.data;\n    \n  })\n}\n\n\nconst deleteAttraction = (ride_name) => {\n  Axios.delete(`http://localhost:3001/deleteAttraction/${ride_name}`);\n};\n\nreturn (\n    <>\n\n    <OuterBorder>\n    <DeleteBar> Delete an Attraction </DeleteBar>\n    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}>\n                        <option>Select Attraction</option>\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n\n    </RideSelect>\n    <InfoBar> Basic Information</InfoBar>\n    <EditBorder>\n\n\n\n        {useEffect(() =>{\n              {window.addEventListener('load', getAttractions())}\n            })}\n        <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n\n        <tr>\n        <td>Name</td>\n        <td>                 \n        \n          <label>{attractionList.map((val, key) => {\n                var ride_name;\n                if (rideSelect == val.ride_name){\n                    ride_name = val.ride_name;\n                }\n              return (\n                  <> \n                    {ride_name}   \n                  </>\n              );\n              })}\n            </label>\n\n        </td>\n        </tr>\n\n        <tr>\n        <td>Daily Opening</td>\n        <th> \n           \n          <label>{attractionList.map((val, key) => {\n              var dailyOpening;\n              if (rideSelect == val.ride_name){\n                  dailyOpening = val.dailyOpening;\n              }\n            return (\n                <> \n                  {dailyOpening}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Daily Closing</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Theoretical Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var theoryCapacity;\n              if (rideSelect == val.ride_name){\n                  theoryCapacity = val.theoryCapacity;\n              }\n            return (\n                <> \n                  {theoryCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Target Capacity</td>\n        <th> \n\n            <label>{attractionList.map((val, key) => {\n              var targetCapacity;\n              if (rideSelect == val.ride_name){\n                  targetCapacity = val.targetCapacity;\n              }\n            return (\n                <> \n                  {targetCapacity}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var maxVehicles;\n              if (rideSelect == val.ride_name){\n                  maxVehicles = val.maxVehicles;\n              }\n            return (\n                <> \n                  {maxVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Vehicles</td>\n        <th>\n\n            <label>{attractionList.map((val, key) => {\n              var minVehicles;\n              if (rideSelect == val.ride_name){\n                  minVehicles = val.minVehicles;\n              }\n            return (\n                <> \n                  {minVehicles}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Seats per Vehicle</td>\n        <th>\n\n           <label>{attractionList.map((val, key) => {\n              var dailyClosing;\n              if (rideSelect == val.ride_name){\n                  dailyClosing = val.dailyClosing;\n              }\n            return (\n                <> \n                  {dailyClosing}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Maximum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var maxStaff;\n              if (rideSelect == val.ride_name){\n                  maxStaff = val.maxStaff;\n              }\n            return (\n                <> \n                  {maxStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Minimum Employees</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var minStaff;\n              if (rideSelect == val.ride_name){\n                  minStaff = val.minStaff;\n              }\n            return (\n                <> \n                  {minStaff}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Park Section</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var parkSection;\n              if (rideSelect == val.ride_name){\n                  parkSection = val.parkSection;\n              }\n            return (\n                <> \n                  {parkSection}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Weather Code</td>\n        <th>\n          \n        <label>{attractionList.map((val, key) => {\n              var weatherCode;\n              if (rideSelect == val.ride_name){\n                  weatherCode = val.weatherCode;\n              }\n            return (\n                <> \n                  {weatherCode}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n\n        <tr>\n        <td>Type</td>\n        <th>\n            \n        <label>{attractionList.map((val, key) => {\n              var rideType;\n              if (rideSelect == val.ride_name){\n                  rideType = val.rideType;\n              }\n            return (\n                <> \n                  {rideType}   \n                </>\n            );\n            })}\n          </label>\n\n        </th>\n        </tr>\n      \n        </tbody>\n\n          <NavLink to='/newAttraction' onClick={() => {\n            window.alert(`The ride: ${ride_name} has been deleted`);\n            deleteAttraction(rideSelect) //ride selected in drop down menu\n          }}>Delete Attraction</NavLink>\n\n        </table>\n\n\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n    <SafetyInfo>Safety Critical Information</SafetyInfo>\n    <PhoneInfo>Phone Information</PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}