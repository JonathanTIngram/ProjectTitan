{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\ParkwideIntervals.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`;\n_c = Label1;\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`;\n_c2 = Container;\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c3 = IntervalContainer;\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`;\n_c4 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c5 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c6 = CardCollect;\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c7 = CardFrom;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c8 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c9 = CardEnding;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`;\n_c10 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`;\n_c11 = Button;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`;\n_c12 = DeleteButton;\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`;\n_c13 = Variables;\nconst InputVariables = styled.input`\nwidth: 70px;\n\n`;\n_c14 = InputVariables;\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`;\n_c15 = SubmitButton;\n\nconst ParkwideIntervals = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const [parkIntervalList, setParkIntervalList] = useState([]);\n  const [rideSelect, setRideSelect] = useState('');\n\n  const deleteInterval = id => {\n    Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n  }; //edit info\n\n\n  const [WaitTime, setWaitTime] = useState('');\n  const [Throughput, setThroughput] = useState('');\n  const [AvailableSeats, setAvailableSeats] = useState('');\n  const [AvailableDown, setAvailableDown] = useState('');\n\n  const editParkInterval = id => {\n    Axios.put('http://localhost:3001/editParkInterval', {\n      id: id,\n      WaitTime: WaitTime,\n      Throughput: Throughput,\n      AvailableSeats: AvailableSeats,\n      AvailableDown: AvailableDown\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label1, {\n      children: \"Parkwide Intervals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntervalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 42\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParkwideModal, {\n          showModal: showModal,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), useEffect(() => {\n        Axios.get('http://localhost:3001/getParkInterval').then(res => {\n          setParkIntervalList(res.data);\n        }).catch(err => console.log(err));\n      }, []), parkIntervalList.map((val, key) => {\n        var id = val.id;\n\n        const checkWait = () => {\n          if (val.checkedWaitTime == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Wait Time \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setWaitTime(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 112\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkThroughput = () => {\n          if (val.checkedThroughput == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Throughput \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setThroughput(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 88\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this);\n          }\n        };\n\n        const checkAvailable = () => {\n          if (val.checkedAvailableSeats == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Seats \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableSeats(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkDown = () => {\n          if (val.checkedAvailableDown == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Down \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableDown(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(IntervalCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardTime, {\n            children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n              onClick: () => {\n                console.log(id);\n                deleteInterval(id);\n                setTimeout(function () {\n                  window.location.reload();\n                }, 2);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n            children: [checkWait(), checkThroughput(), checkAvailable(), checkDown(), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              onClick: () => {\n                editParkInterval(id);\n                window.location.reload();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardFrom, {\n            children: [\"From \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"Reported Down Rides\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n            children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Opening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 51\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\" \", val.startingTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n            children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Closing \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 47\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: val.endingTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkwideIntervals, \"hm0y4F8GlSHsC8NmzQI5QpfEmDw=\");\n\n_c16 = ParkwideIntervals;\nexport default ParkwideIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"Label1\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"IntervalContainer\");\n$RefreshReg$(_c4, \"IntervalCard\");\n$RefreshReg$(_c5, \"CardTime\");\n$RefreshReg$(_c6, \"CardCollect\");\n$RefreshReg$(_c7, \"CardFrom\");\n$RefreshReg$(_c8, \"CardStarting\");\n$RefreshReg$(_c9, \"CardEnding\");\n$RefreshReg$(_c10, \"Image\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"DeleteButton\");\n$RefreshReg$(_c13, \"Variables\");\n$RefreshReg$(_c14, \"InputVariables\");\n$RefreshReg$(_c15, \"SubmitButton\");\n$RefreshReg$(_c16, \"ParkwideIntervals\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/ParkwideIntervals.js"],"names":["styled","plus","ParkwideModal","GlobalStyle","Axios","React","useState","useRef","useEffect","useCallback","MdClose","Label1","h1","Container","div","IntervalContainer","IntervalCard","CardTime","CardCollect","CardFrom","CardStarting","CardEnding","Image","img","Button","button","DeleteButton","Variables","li","InputVariables","input","SubmitButton","ParkwideIntervals","showModal","setShowModal","openModal","prev","parkIntervalList","setParkIntervalList","rideSelect","setRideSelect","deleteInterval","id","delete","WaitTime","setWaitTime","Throughput","setThroughput","AvailableSeats","setAvailableSeats","AvailableDown","setAvailableDown","editParkInterval","put","then","alert","console","log","get","res","data","catch","err","map","val","key","checkWait","checkedWaitTime","e","target","value","checkThroughput","checkedThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown","timeValue","setTimeout","window","location","reload","startingTime","endingTime"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: center;\npadding-top: 1%;\nfont-size: 18px;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\noverflow: hidden;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  \n`\nconst Variables = styled.li`\nfont-size: 14px;\nmargin-left: 5%;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n\n`\n\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 80%;\n  height: 20px;\n  font-size: 10px;\n  overflow: hidden;\n`\nconst ParkwideIntervals = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const [parkIntervalList, setParkIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState('');\n\n    const deleteInterval = (id) => {\n        Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n        };\n    \n    //edit info\n    const [WaitTime, setWaitTime] = useState('');\n    const [Throughput, setThroughput] = useState('');\n    const [AvailableSeats, setAvailableSeats] = useState('');\n    const [AvailableDown, setAvailableDown] = useState('');\n\n    const editParkInterval = (id) =>{\n        Axios.put('http://localhost:3001/editParkInterval', {\n\n            id: id,\n            WaitTime: WaitTime,\n            Throughput: Throughput,\n            AvailableSeats: AvailableSeats,\n            AvailableDown: AvailableDown\n                        \n            }).then(() =>{\n            alert('successful insert');\n\n        }).then( () => {\n            console.log(\"Successfully sent to port 3001\");\n        });\n        };\n        \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n            {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n            {parkIntervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/></CardTime>\n \n                        <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    editParkInterval(id);\n                                    window.location.reload(); \n                                }}>Submit</SubmitButton>\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals"]},"metadata":{},"sourceType":"module"}