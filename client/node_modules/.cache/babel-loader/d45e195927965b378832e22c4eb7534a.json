{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/RideCheck.js\",\n    _s2 = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { MdSignalCellularConnectedNoInternet4Bar } from \"react-icons/md\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`;\n_c = SubmitButton;\n\nconst sendRideName = rideList => {\n  Axios.post('http://localhost:3001/sendRideNameBackend', {\n    rideList: rideList\n  }).then(() => {\n    alert('successful insert');\n  }).then(() => {\n    console.log(\"Successfully sent to port 3001\");\n  });\n};\n\nfunction RideCheck() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n  const styleLight = {\n    backgroundColor: '#DFDFDF'\n  };\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n  //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\"return (\", /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              scope: \"row\",\n              children: val.ride_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 27\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: () => {\n                  console.log(val.ride_name);\n                  setRide_name(val.ride_name);\n\n                  if (!rideList.includes(val.ride_name)) {\n                    rideList = rideList.push(val.ride_name);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 68\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false), \");\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      onClick: () => {\n        console.log(rideList);\n        sendRideName(rideList);\n        setTimeout(function () {\n          window.location.reload();\n        }, 1);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RideCheck, \"sZ2izpRBW4gjV6EpwXtKc5WDWqU=\");\n\n_c2 = RideCheck;\nexport default RideCheck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SubmitButton\");\n$RefreshReg$(_c2, \"RideCheck\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/RideCheck.js"],"names":["React","useState","useEffect","Axios","MdSignalCellularConnectedNoInternet4Bar","styled","SubmitButton","button","sendRideName","rideList","post","then","alert","console","log","RideCheck","styleGray","backgroundColor","styleLight","ride_name","setRide_name","setRideList","attractionList","setAttractionList","GetAttractions","get","res","data","catch","err","window","addEventListener","val","includes","push","setTimeout","location","reload"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { MdSignalCellularConnectedNoInternet4Bar } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst SubmitButton = styled.button`\n  height: 40px;\n  width: 100%;\n  font-size: 20px;\n  border-radius: 9px;\n`\n\nconst sendRideName = (rideList) =>{\n  Axios.post('http://localhost:3001/sendRideNameBackend', {\n    rideList: rideList\n                }).then(() =>{\n                  alert('successful insert');\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n};\n\nfunction RideCheck() {\n  \n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n  var [ride_name, setRide_name] = useState('');\n  var [rideList, setRideList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  //recieve data from backend to display\n\n\n\n  //recieve data from backend to display\nconst GetAttractions = () => {\n      //console.log(res.data)\n      useEffect(() => {\n          Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n          }).catch(err => console.log(err));\n          }, [])\n}\n\n  \n  return (\n    <div>\n      {window.addEventListener('load', GetAttractions())}\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n\n\n\n                  return (\n                    <>     \n                   \n                        <tr>\n                          <td scope=\"row\">{val.ride_name}</td> <td><input type=\"checkbox\" onClick={() => {\n                            console.log(val.ride_name)\n                            setRide_name(val.ride_name)\n                            if (!rideList.includes(val.ride_name)){\n                              rideList = rideList.push(val.ride_name)\n                            }\n                          }}></input> </td>\n                        </tr>\n                    </>\n                  );\n               \n        </tbody>\n      </table>\n      <SubmitButton onClick={() => {\n                console.log(rideList)\n                sendRideName(rideList);\n                setTimeout(function(){\n                  window.location.reload(); \n                 }, 1);\n      }\n      }>Submit</SubmitButton>\n    </div>\n  );\n}\nexport default RideCheck;"]},"metadata":{},"sourceType":"module"}