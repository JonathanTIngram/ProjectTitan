{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/ChartLine.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, LineSeries, HorizontalGridLines, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nimport Axios from 'axios'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartLine() {\n  _s();\n\n  var [rideList, setRideList] = useState([]);\n  var [statList, setStatList] = useState([]);\n  var [dataList, setDataList] = useState([]);\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRideList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStatList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedData = () => {\n    Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n      //console.log(res.data)\n      setDataList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  let index = 0;\n  var rList = [];\n  var wList = [];\n  var tList = [];\n  var asList = [];\n  var adList = [];\n  var timeList = [];\n  var dateList = [];\n  {\n    dataList.map((val, key) => {\n      if (val.ride_name) {\n        //convert the time to EST from UTC\n        var time = new Date(val.ts).toString().substring(16, 24);\n        time = time.substring(16, 24);\n        var date = val.ts;\n        date = date.substring(0, 10);\n        index = index + 1;\n        console.log(\"Ride name = \", val.ride_name);\n        console.log(\"Time = \", time);\n        console.log(\"Date = \", date);\n        rList.push(val.ride_name);\n        timeList.push(time);\n        dateList.push(date);\n        console.log(\"Wait Time = \", val.WaitTime);\n        wList.push(val.WaitTime);\n        console.log(\"Throughput = \", val.Throughput);\n        tList.push(val.Throughput);\n        console.log(\"Available Seats = \", val.AvailableSeats);\n        asList.push(val.AvailableSeats);\n        console.log(\"Available Down = \", val.AvailableDown);\n        adList.push(val.AvailableDown);\n        console.log('');\n      }\n    });\n  }\n\n  const compareRide = () => {\n    for (var i = 0; i < index; i++) {\n      //check box list is compared with collected data\n      if (rideList.includes(rList[i])) {\n        console.log(\"Matched \", rList[i]); //each variable is compared with the selected stat\n\n        if (statList.includes(\"Wait Time\")) {\n          //locate variable\n          if (wList[i] != -1) {\n            console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n          }\n        }\n\n        if (statList.includes(\"Throughput\")) {\n          //locate variable\n          if (tList[i] != -1) {\n            console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Seats\")) {\n          //locate variable\n          if (asList[i] != -1) {\n            console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Down\")) {\n          //locate variable\n          if (adList[i] != -1) {\n            console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n          }\n        }\n\n        console.log('');\n      }\n    }\n  };\n\n  var data = [];\n\n  for (var i = 0; i < tList.length; i += 1) {\n    if (tList[i] > 0) {\n      data.push({\n        x: timeList[i],\n        y: tList[i]\n      });\n    }\n  }\n\n  const data2 = [{\n    x: 0,\n    y: tList[0]\n  }, {\n    x: 1,\n    y: tList[1]\n  }, {\n    x: 2,\n    y: 4\n  }, {\n    x: 3,\n    y: 9\n  }, {\n    x: 4,\n    y: 1\n  }, {\n    x: 5,\n    y: 7\n  }, {\n    x: 6,\n    y: 6\n  }, {\n    x: 7,\n    y: 3\n  }, {\n    x: 8,\n    y: 2\n  }, {\n    x: 9,\n    y: 0\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', CheckedData());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n    }, []), console.log(\"Amount of rides \", index), console.log(\"Ride names = \", rList), console.log(\"TimeList = \", timeList), console.log(\"DateList = \", dateList), console.log(\"WaitList = \", wList), console.log(\"ThroughputList = \", tList), console.log(\"AvailableSeatList = \", asList), console.log(\"AvailableDownList = \", adList), compareRide(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        height: 500,\n        width: 900,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), console.log(data)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartLine, \"vGbCVrqDan+5cQVEl78sxmhvyCo=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/ChartLine.js"],"names":["React","Component","useState","useEffect","XYPlot","LineSeries","HorizontalGridLines","VerticalGridLines","XAxis","YAxis","Axios","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","index","rList","wList","tList","asList","adList","timeList","dateList","map","val","key","ride_name","time","Date","ts","toString","substring","date","push","WaitTime","Throughput","AvailableSeats","AvailableDown","compareRide","i","includes","length","x","y","data2","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport {XYPlot, LineSeries, HorizontalGridLines, VerticalGridLines, XAxis, YAxis} from 'react-vis';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    let index = 0;\n    var rList = [];\n    var wList = [];\n    var tList = [];\n    var asList = [];\n    var adList = [];\n    var timeList = [];\n    var dateList = [];\n\n\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            //convert the time to EST from UTC\n            var time = new Date(val.ts).toString().substring(16,24);\n            time = time.substring(16,24)\n            var date= val.ts;\n            date = date.substring(0,10)\n            index = index + 1;\n            console.log(\"Ride name = \", val.ride_name);\n            console.log(\"Time = \", time);\n            console.log(\"Date = \", date);\n            rList.push(val.ride_name);\n            timeList.push(time);\n            dateList.push(date)\n            console.log(\"Wait Time = \", val.WaitTime);\n            wList.push(val.WaitTime);\n        \n            console.log(\"Throughput = \", val.Throughput)\n            tList.push(val.Throughput);\n\n\n            console.log(\"Available Seats = \", val.AvailableSeats)\n            asList.push(val.AvailableSeats);\n            console.log(\"Available Down = \", val.AvailableDown)\n            adList.push( val.AvailableDown);\n\n            console.log('');\n     }\n     })}\n\n     const compareRide = () => {\n        for(var i = 0; i < index; i++) {\n            //check box list is compared with collected data\n            if(rideList.includes(rList[i])) {\n                console.log(\"Matched \", rList[i]);\n                //each variable is compared with the selected stat\n                if(statList.includes(\"Wait Time\"))\n                {\n                    //locate variable\n                    if(wList[i] != -1) {\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n                     } \n                }\n                if(statList.includes(\"Throughput\"))\n                {\n                     //locate variable\n                    if(tList[i] != -1) {\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n                    }\n                }\n                if(statList.includes(\"Available Seats\"))\n                {\n                     //locate variable\n                    if(asList[i] != -1) {\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n                    }\n                }   \n                if(statList.includes(\"Available Down\"))\n                {\n                     //locate variable\n                    if(adList[i] != -1) {\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n                    }\n                }\n\n                \n                console.log('');\n            }\n        }\n    }\n\n    var data = [];\n\n    for (var i = 0; i < tList.length; i += 1) {\n        if(tList[i] > 0)\n        {\n            data.push({\n                 x:  timeList[i],\n                y: tList[i]\n            });\n        }\n    }\n\n    const data2 = [\n        {x: 0, y: tList[0]},\n        {x: 1, y: tList[1]},\n        {x: 2, y: 4},\n        {x: 3, y: 9},\n        {x: 4, y: 1},\n        {x: 5, y: 7},\n        {x: 6, y: 6},\n        {x: 7, y: 3},\n        {x: 8, y: 2},\n        {x: 9, y: 0}\n      ];\n\n    return (\n\n        <div>\n\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {console.log(\"Amount of rides \", index)}\n            {console.log(\"Ride names = \", rList)}\n            {console.log(\"TimeList = \", timeList)}\n            {console.log(\"DateList = \", dateList)}\n            {console.log(\"WaitList = \", wList)}\n            {console.log(\"ThroughputList = \", tList)}\n            {console.log(\"AvailableSeatList = \", asList)}\n            {console.log(\"AvailableDownList = \", adList)}\n\n\n            {compareRide()}\n            <div className=\"App\">\n            <XYPlot height={500} width= {900}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <LineSeries data={data} />\n                {console.log(data)}\n            </XYPlot>\n\n            </div>\n        </div>\n    );\n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}