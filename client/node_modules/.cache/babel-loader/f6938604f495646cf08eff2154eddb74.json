{"ast":null,"code":"import _toConsumableArray from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useState,useEffect}from'react';import Plotly from\"plotly.js-basic-dist\";import createPlotlyComponent from\"react-plotly.js/factory\";import Axios from'axios';import styled from'styled-components';import{sendGraphData}from'./FavoriteBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Plot=createPlotlyComponent(Plotly);var rideListSend;var statListSend;var recData=JSON.parse(localStorage.getItem('data')||'[]');;export function saveLists(){return{rideList:rideListSend,statList:statListSend};}export function ChartLine(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rideList=_useState2[0],setRideList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),statList=_useState4[0],setStatList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),dataList=_useState6[0],setDataList=_useState6[1];var setFavGraph=function setFavGraph(){// localStorage.clear()\nvar rideString=recData[0].rides;var favRides=rideString.split(',');setRideList(favRides);var statString=recData[0].stats;console.log(recData[0].stats);var favStats=statString.split(',');setStatList(favStats);};var CheckedRideName=function CheckedRideName(){Axios.get(\"http://localhost:3001/sendRideNameGraph\").then(function(res){//console.log(res.data)\nsetRideList(res.data);if(recData.length>0){setFavGraph();}rideListSend=res.data;}).catch(function(err){return console.log(err);});};var CheckedStat=function CheckedStat(){Axios.get(\"http://localhost:3001/sendStatsGraph\").then(function(res){//console.log(res.data)\nsetStatList(res.data);if(recData.length>0){setFavGraph();}statListSend=res.data;}).catch(function(err){return console.log(err);});};var CheckedData=function CheckedData(){Axios.get(\"http://localhost:3001/getCollectedData\").then(function(res){//console.log(res.data)\nsetDataList(res.data);}).catch(function(err){return console.log(err);});};var intervalCard=[];{dataList.map(function(val,key){var time=new Date(val.ts);var date=new Date(val.ts).getMonth()+\"/\"+new Date(val.ts).getDate()+\"/\"+new Date(val.ts).getFullYear();intervalCard.push({rideName:val.ride_name,WaitTime:val.WaitTime,Throughput:val.Throughput,AvailableSeats:val.AvailableSeats,AvailableDown:val.AvailableDown,Time:time,Date:date});});}var graphData=[];var graphStat=function graphStat(ride){for(var i=0;i<ride.length;i++){var foundData=false;var temp=ride[i];var TEMPthroughputData=[];var TEMPwaitTimeData=[];var TEMPavailableSeatsData=[];var TEMPavailableDownData=[];var TEMPthroughputTime=[];var TEMPwaitTimeTime=[];var TEMPavailableSeatsTime=[];var TEMPavailableDownTime=[];for(var _i=0;_i<intervalCard.length;_i++){if(intervalCard[_i].rideName==temp){if(statList.includes(\"Throughput\")&&intervalCard[_i].Throughput>=0){TEMPthroughputTime.push(intervalCard[_i].Time);TEMPthroughputData.push(intervalCard[_i].Throughput);foundData=true;}if(statList.includes(\"Wait Time\")&&intervalCard[_i].WaitTime>=0){TEMPwaitTimeData.push(intervalCard[_i].WaitTime);TEMPwaitTimeTime.push(intervalCard[_i].Time);foundData=true;}if(statList.includes(\"Available Seats\")&&intervalCard[_i].AvailableSeats>=0){TEMPavailableSeatsData.push(intervalCard[_i].AvailableSeats);TEMPavailableSeatsTime.push(intervalCard[_i].Time);foundData=true;}if(statList.includes(\"Available Down\")&&intervalCard[_i].AvailableDown>=0){TEMPavailableDownData.push(intervalCard[_i].AvailableDown);TEMPavailableDownTime.push(intervalCard[_i].Time);foundData=true;}if(intervalCard[_i].rideName!=temp){break;}}}if(foundData){graphData.push({temp:temp,TEMPthroughputTime:TEMPthroughputTime,TEMPthroughputData:TEMPthroughputData,TEMPwaitTimeTime:TEMPwaitTimeTime,TEMPwaitTimeData:TEMPwaitTimeData,TEMPavailableSeatsTime:TEMPavailableSeatsTime,TEMPavailableSeatsData:TEMPavailableSeatsData,TEMPavailableDownTime:TEMPavailableDownTime,TEMPavailableDownData:TEMPavailableDownData});}getGraphData();}};var rideTraceArray=[];var tempRide='';var getGraphData=function getGraphData(){//console.log(graphData)\nfor(var i=0;i<graphData.length;i++){if(statList.includes(\"Throughput\")){tempRide=graphData[i].temp;tempRide=\"\".concat(tempRide,\"Trace\");window[tempRide]={x:graphData[i].TEMPthroughputTime,y:graphData[i].TEMPthroughputData,name:graphData[i].temp+\" Throughput\"};rideTraceArray.push(window[tempRide]);}if(statList.includes(\"Wait Time\")){tempRide=graphData[i].temp;tempRide=\"\".concat(tempRide,\"Trace\");window[tempRide]={x:graphData[i].TEMPwaitTimeTime,y:graphData[i].TEMPwaitTimeData,name:graphData[i].temp+\" Wait Time\"};rideTraceArray.push(window[tempRide]);}if(statList.includes(\"Available Seats\")){tempRide=graphData[i].temp;tempRide=\"\".concat(tempRide,\"Trace\");window[tempRide]={x:graphData[i].TEMPavailableSeatsTime,y:graphData[i].TEMPavailableSeatsData,name:graphData[i].temp+\" Available Seats\"};rideTraceArray.push(window[tempRide]);}if(statList.includes(\"Available Down\")){tempRide=graphData[i].temp;tempRide=\"\".concat(tempRide,\"Trace\");window[tempRide]={x:graphData[i].TEMPavailableDownTime,y:graphData[i].TEMPavailableDownData,name:graphData[i].temp+\" Available Down\"};rideTraceArray.push(window[tempRide]);}}var unique=_toConsumableArray(new Map(rideTraceArray.map(function(o){return[o.name,o];})).values());rideTraceArray=unique;};var title='';for(var i=0;i<rideList.length;i++){if(statList==''){title=rideList[0];}else if(rideList.length==1){if(rideList.length==1){title=rideList[0]+' '+title+'('+statList+')';}}else if(rideList.length==2){title=rideList[0]+' and '+rideList[1];}else if(rideList.length>2){var tmp=_toConsumableArray(new Set(rideList));var last=tmp.pop();var result=tmp.join(', ')+' and '+last;title=result;}}return/*#__PURE__*/_jsxs(\"div\",{children:[useEffect(function(){{window.addEventListener('load',CheckedData());}{window.addEventListener('load',CheckedRideName());}{window.addEventListener('load',CheckedStat());}},[]),console.log(recData),graphStat(rideList),/*#__PURE__*/_jsx(\"div\",{id:\"myDiv\",children:/*#__PURE__*/_jsx(Plot,{data:rideTraceArray,layout:{width:950,height:570,xaxis:{title:'Time',type:'time'},yaxis:{title:'Amount'},title:title}})})]});}export default ChartLine;","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/ChartLine.js"],"names":["React","useState","useEffect","Plotly","createPlotlyComponent","Axios","styled","sendGraphData","Plot","rideListSend","statListSend","recData","JSON","parse","localStorage","getItem","saveLists","rideList","statList","ChartLine","setRideList","setStatList","dataList","setDataList","setFavGraph","rideString","rides","favRides","split","statString","stats","console","log","favStats","CheckedRideName","get","then","res","data","length","catch","err","CheckedStat","CheckedData","intervalCard","map","val","key","time","Date","ts","date","getMonth","getDate","getFullYear","push","rideName","ride_name","WaitTime","Throughput","AvailableSeats","AvailableDown","Time","graphData","graphStat","ride","i","foundData","temp","TEMPthroughputData","TEMPwaitTimeData","TEMPavailableSeatsData","TEMPavailableDownData","TEMPthroughputTime","TEMPwaitTimeTime","TEMPavailableSeatsTime","TEMPavailableDownTime","includes","getGraphData","rideTraceArray","tempRide","window","x","y","name","unique","Map","o","values","title","tmp","Set","last","pop","result","join","addEventListener","width","height","xaxis","type","yaxis"],"mappings":"0XAAA,oBACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,KAA8B,eAA9B,C,wFACA,GAAIC,CAAAA,IAAI,CAAGJ,qBAAqB,CAACD,MAAD,CAAhC,CACA,GAAIM,CAAAA,YAAJ,CACA,GAAIC,CAAAA,YAAJ,CACA,GAAIC,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,GAAgC,IAA3C,CAAd,CAA+D,CAE/D,MAAO,SAASC,CAAAA,SAAT,EACH,CACI,MAAO,CACPC,QAAQ,CAAER,YADH,CAEPS,QAAQ,CAAER,YAFH,CAAP,CAIH,CAEL,MAAO,SAASS,CAAAA,SAAT,EAAqB,CAKxB,cAA8BlB,QAAQ,CAAC,EAAD,CAAtC,wCAAKgB,QAAL,eAAeG,WAAf,eACA,eAA8BnB,QAAQ,CAAC,EAAD,CAAtC,yCAAKiB,QAAL,eAAeG,WAAf,eACA,eAA8BpB,QAAQ,CAAC,EAAD,CAAtC,yCAAKqB,QAAL,eAAeC,WAAf,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB;AACA,GAAIC,CAAAA,UAAU,CAAGd,OAAO,CAAC,CAAD,CAAP,CAAWe,KAA5B,CACA,GAAIC,CAAAA,QAAQ,CAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAf,CACAR,WAAW,CAACO,QAAD,CAAX,CAEA,GAAIE,CAAAA,UAAU,CAAGlB,OAAO,CAAC,CAAD,CAAP,CAAWmB,KAA5B,CACAC,OAAO,CAACC,GAAR,CAAYrB,OAAO,CAAC,CAAD,CAAP,CAAWmB,KAAvB,EACA,GAAIG,CAAAA,QAAQ,CAAGJ,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAf,CACAP,WAAW,CAACY,QAAD,CAAX,CAGH,CAZD,CAcA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAEtB7B,KAAK,CAAC8B,GAAN,4CAAqDC,IAArD,CAA0D,SAAAC,GAAG,CAAI,CAC7D;AACAjB,WAAW,CAACiB,GAAG,CAACC,IAAL,CAAX,CACA,GAAG3B,OAAO,CAAC4B,MAAR,CAAiB,CAApB,CACA,CACIf,WAAW,GACd,CACDf,YAAY,CAAG4B,GAAG,CAACC,IAAnB,CACH,CARD,EAQGE,KARH,CAQS,SAAAC,GAAG,QAAIV,CAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ,EARZ,EASP,CAXD,CAcA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAEtBrC,KAAK,CAAC8B,GAAN,yCAAkDC,IAAlD,CAAuD,SAAAC,GAAG,CAAI,CAC1D;AACAhB,WAAW,CAACgB,GAAG,CAACC,IAAL,CAAX,CACA,GAAG3B,OAAO,CAAC4B,MAAR,CAAiB,CAApB,CACI,CACIf,WAAW,GACd,CACLd,YAAY,CAAG2B,GAAG,CAACC,IAAnB,CACH,CARD,EAQGE,KARH,CAQS,SAAAC,GAAG,QAAIV,CAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ,EARZ,EASH,CAXD,CAaA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAEtBtC,KAAK,CAAC8B,GAAN,2CAAoDC,IAApD,CAAyD,SAAAC,GAAG,CAAI,CAC5D;AACAd,WAAW,CAACc,GAAG,CAACC,IAAL,CAAX,CACH,CAHD,EAGGE,KAHH,CAGS,SAAAC,GAAG,QAAIV,CAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ,EAHZ,EAIH,CAND,CAUA,GAAIG,CAAAA,YAAY,CAAG,EAAnB,CAEA,CAACtB,QAAQ,CAACuB,GAAT,CAAa,SAACC,GAAD,CAAMC,GAAN,CAAc,CACpB,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASH,GAAG,CAACI,EAAb,CAAX,CACA,GAAIC,CAAAA,IAAI,CAAG,GAAIF,CAAAA,IAAJ,CAASH,GAAG,CAACI,EAAb,EAAiBE,QAAjB,GAA8B,GAA9B,CAAoC,GAAIH,CAAAA,IAAJ,CAASH,GAAG,CAACI,EAAb,EAAiBG,OAAjB,EAApC,CAAiE,GAAjE,CAAuE,GAAIJ,CAAAA,IAAJ,CAASH,GAAG,CAACI,EAAb,EAAiBI,WAAjB,EAAlF,CACAV,YAAY,CAACW,IAAb,CAAkB,CAACC,QAAQ,CAAEV,GAAG,CAACW,SAAf,CAA0BC,QAAQ,CAAEZ,GAAG,CAACY,QAAxC,CAClBC,UAAU,CAAEb,GAAG,CAACa,UADE,CACUC,cAAc,CAAEd,GAAG,CAACc,cAD9B,CAElBC,aAAa,CAAEf,GAAG,CAACe,aAFD,CAEgBC,IAAI,CAAEd,IAFtB,CAE4BC,IAAI,CAAEE,IAFlC,CAAlB,EAIN,CAPD,EAOG,CAGJ,GAAIY,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAClB,CACI,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGD,IAAI,CAAC1B,MAAxB,CAAgC2B,CAAC,EAAjC,CACA,CACI,GAAIC,CAAAA,SAAS,CAAG,KAAhB,CACA,GAAIC,CAAAA,IAAI,CAAGH,IAAI,CAACC,CAAD,CAAf,CACA,GAAIG,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,sBAAsB,CAAG,EAA7B,CACA,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CACA,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,GAAIC,CAAAA,sBAAsB,CAAG,EAA7B,CACA,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CAEI,IAAI,GAAIV,CAAAA,EAAC,CAAG,CAAZ,CAAeA,EAAC,CAAGtB,YAAY,CAACL,MAAhC,CAAwC2B,EAAC,EAAzC,CACA,CACI,GAAGtB,YAAY,CAACsB,EAAD,CAAZ,CAAgBV,QAAhB,EAA4BY,IAA/B,CACA,CAEI,GAAGlD,QAAQ,CAAC2D,QAAT,CAAkB,YAAlB,GAAmCjC,YAAY,CAACsB,EAAD,CAAZ,CAAgBP,UAAhB,EAA8B,CAApE,CAAsE,CAClEc,kBAAkB,CAAClB,IAAnB,CAAwBX,YAAY,CAACsB,EAAD,CAAZ,CAAgBJ,IAAxC,EACAO,kBAAkB,CAACd,IAAnB,CAAwBX,YAAY,CAACsB,EAAD,CAAZ,CAAgBP,UAAxC,EACAQ,SAAS,CAAG,IAAZ,CACH,CAED,GAAGjD,QAAQ,CAAC2D,QAAT,CAAkB,WAAlB,GAAkCjC,YAAY,CAACsB,EAAD,CAAZ,CAAgBR,QAAhB,EAA4B,CAAjE,CAAmE,CAC/DY,gBAAgB,CAACf,IAAjB,CAAsBX,YAAY,CAACsB,EAAD,CAAZ,CAAgBR,QAAtC,EACAgB,gBAAgB,CAACnB,IAAjB,CAAsBX,YAAY,CAACsB,EAAD,CAAZ,CAAgBJ,IAAtC,EACAK,SAAS,CAAG,IAAZ,CACH,CAED,GAAGjD,QAAQ,CAAC2D,QAAT,CAAkB,iBAAlB,GAAwCjC,YAAY,CAACsB,EAAD,CAAZ,CAAgBN,cAAhB,EAAkC,CAA7E,CAA+E,CAC3EW,sBAAsB,CAAChB,IAAvB,CAA4BX,YAAY,CAACsB,EAAD,CAAZ,CAAgBN,cAA5C,EACAe,sBAAsB,CAACpB,IAAvB,CAA4BX,YAAY,CAACsB,EAAD,CAAZ,CAAgBJ,IAA5C,EACAK,SAAS,CAAG,IAAZ,CACH,CAED,GAAGjD,QAAQ,CAAC2D,QAAT,CAAkB,gBAAlB,GAAuCjC,YAAY,CAACsB,EAAD,CAAZ,CAAgBL,aAAhB,EAAiC,CAA3E,CAA6E,CACzEW,qBAAqB,CAACjB,IAAtB,CAA2BX,YAAY,CAACsB,EAAD,CAAZ,CAAgBL,aAA3C,EACAe,qBAAqB,CAACrB,IAAtB,CAA2BX,YAAY,CAACsB,EAAD,CAAZ,CAAgBJ,IAA3C,EACAK,SAAS,CAAG,IAAZ,CACH,CAED,GAAGvB,YAAY,CAACsB,EAAD,CAAZ,CAAgBV,QAAhB,EAA4BY,IAA/B,CACA,CACI,MACH,CACJ,CACJ,CACD,GAAGD,SAAH,CACA,CACIJ,SAAS,CAACR,IAAV,CAAe,CAACa,IAAI,CAAJA,IAAD,CAAOK,kBAAkB,CAAlBA,kBAAP,CAA2BJ,kBAAkB,CAAlBA,kBAA3B,CAA+CK,gBAAgB,CAAhBA,gBAA/C,CAAiEJ,gBAAgB,CAAhBA,gBAAjE,CAAmFK,sBAAsB,CAAtBA,sBAAnF,CAA2GJ,sBAAsB,CAAtBA,sBAA3G,CAAmIK,qBAAqB,CAArBA,qBAAnI,CAA0JJ,qBAAqB,CAArBA,qBAA1J,CAAf,EACH,CACHM,YAAY,GACjB,CACJ,CAxDD,CAyDA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAGA,GAAMF,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB;AACA,IAAI,GAAIZ,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,SAAS,CAACxB,MAA7B,CAAqC2B,CAAC,EAAtC,CACA,CACI,GAAGhD,QAAQ,CAAC2D,QAAT,CAAkB,YAAlB,CAAH,CACA,CACIG,QAAQ,CAAGjB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAxB,CACAY,QAAQ,WAAMA,QAAN,SAAR,CACAC,MAAM,CAACD,QAAD,CAAN,CAAmB,CACfE,CAAC,CAAEnB,SAAS,CAACG,CAAD,CAAT,CAAaO,kBADD,CAEfU,CAAC,CAAEpB,SAAS,CAACG,CAAD,CAAT,CAAaG,kBAFD,CAGfe,IAAI,CAAErB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAb,CAAoB,aAHX,CAAnB,CAKAW,cAAc,CAACxB,IAAf,CAAoB0B,MAAM,CAACD,QAAD,CAA1B,EACH,CACD,GAAG9D,QAAQ,CAAC2D,QAAT,CAAkB,WAAlB,CAAH,CACA,CACIG,QAAQ,CAAGjB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAxB,CACAY,QAAQ,WAAMA,QAAN,SAAR,CACAC,MAAM,CAACD,QAAD,CAAN,CAAmB,CACfE,CAAC,CAAEnB,SAAS,CAACG,CAAD,CAAT,CAAaQ,gBADD,CAEfS,CAAC,CAAEpB,SAAS,CAACG,CAAD,CAAT,CAAaI,gBAFD,CAGfc,IAAI,CAAErB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAb,CAAoB,YAHX,CAAnB,CAKAW,cAAc,CAACxB,IAAf,CAAoB0B,MAAM,CAACD,QAAD,CAA1B,EACH,CACD,GAAG9D,QAAQ,CAAC2D,QAAT,CAAkB,iBAAlB,CAAH,CACA,CACIG,QAAQ,CAAGjB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAxB,CACAY,QAAQ,WAAMA,QAAN,SAAR,CACAC,MAAM,CAACD,QAAD,CAAN,CAAmB,CACfE,CAAC,CAAEnB,SAAS,CAACG,CAAD,CAAT,CAAaS,sBADD,CAEfQ,CAAC,CAAEpB,SAAS,CAACG,CAAD,CAAT,CAAaK,sBAFD,CAGfa,IAAI,CAAErB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAb,CAAqB,kBAHZ,CAAnB,CAKAW,cAAc,CAACxB,IAAf,CAAoB0B,MAAM,CAACD,QAAD,CAA1B,EACH,CACD,GAAG9D,QAAQ,CAAC2D,QAAT,CAAkB,gBAAlB,CAAH,CACA,CACIG,QAAQ,CAAGjB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAxB,CACAY,QAAQ,WAAMA,QAAN,SAAR,CACAC,MAAM,CAACD,QAAD,CAAN,CAAmB,CACfE,CAAC,CAAEnB,SAAS,CAACG,CAAD,CAAT,CAAaU,qBADD,CAEfO,CAAC,CAAEpB,SAAS,CAACG,CAAD,CAAT,CAAaM,qBAFD,CAGfY,IAAI,CAAErB,SAAS,CAACG,CAAD,CAAT,CAAaE,IAAb,CAAoB,iBAHX,CAAnB,CAKAW,cAAc,CAACxB,IAAf,CAAoB0B,MAAM,CAACD,QAAD,CAA1B,EACH,CACJ,CACD,GAAMK,CAAAA,MAAM,oBAAO,GAAIC,CAAAA,GAAJ,CAAQP,cAAc,CAAClC,GAAf,CAAmB,SAAA0C,CAAC,QAAI,CAACA,CAAC,CAACH,IAAH,CAASG,CAAT,CAAJ,EAApB,CAAR,EAA8CC,MAA9C,EAAP,CAAZ,CACAT,cAAc,CAAGM,MAAjB,CACH,CAnDD,CAqDA,GAAII,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIvB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGjD,QAAQ,CAACsB,MAA7B,CAAqC2B,CAAC,EAAtC,CAA0C,CAEtC,GAAGhD,QAAQ,EAAI,EAAf,CAAkB,CACduE,KAAK,CAAGxE,QAAQ,CAAC,CAAD,CAAhB,CACH,CAFD,IAGK,IAAGA,QAAQ,CAACsB,MAAT,EAAmB,CAAtB,CAAyB,CAC1B,GAAGtB,QAAQ,CAACsB,MAAT,EAAmB,CAAtB,CAAyB,CACrBkD,KAAK,CAAGxE,QAAQ,CAAC,CAAD,CAAR,CAAc,GAAd,CAAoBwE,KAApB,CAA4B,GAA5B,CAAkCvE,QAAlC,CAA6C,GAArD,CACH,CACJ,CAJI,IAKA,IAAGD,QAAQ,CAACsB,MAAT,EAAmB,CAAtB,CAAyB,CAC1BkD,KAAK,CAAGxE,QAAQ,CAAC,CAAD,CAAR,CAAc,OAAd,CAAwBA,QAAQ,CAAC,CAAD,CAAxC,CACH,CAFI,IAGA,IAAGA,QAAQ,CAACsB,MAAT,CAAkB,CAArB,CAAwB,CACzB,GAAImD,CAAAA,GAAG,oBAAO,GAAIC,CAAAA,GAAJ,CAAQ1E,QAAR,CAAP,CAAP,CACA,GAAI2E,CAAAA,IAAI,CAAGF,GAAG,CAACG,GAAJ,EAAX,CACA,GAAIC,CAAAA,MAAM,CAAGJ,GAAG,CAACK,IAAJ,CAAS,IAAT,EAAiB,OAAjB,CAA2BH,IAAxC,CACAH,KAAK,CAAGK,MAAR,CACH,CACJ,CAKD,mBAEI,uBACK5F,SAAS,CAAC,UAAM,CACjB,CAAC+E,MAAM,CAACe,gBAAP,CAAwB,MAAxB,CAAgCrD,WAAW,EAA3C,EAA+C,CAChD,CAACsC,MAAM,CAACe,gBAAP,CAAwB,MAAxB,CAAgC9D,eAAe,EAA/C,EAAmD,CACpD,CAAC+C,MAAM,CAACe,gBAAP,CAAwB,MAAxB,CAAgCtD,WAAW,EAA3C,EAA+C,CAEnD,CALa,CAKX,EALW,CADd,CAOCX,OAAO,CAACC,GAAR,CAAYrB,OAAZ,CAPD,CAQKqD,SAAS,CAAC/C,QAAD,CARd,cAUI,YAAK,EAAE,CAAC,OAAR,uBACA,KAAC,IAAD,EACA,IAAI,CAAE8D,cADN,CAEA,MAAM,CAAE,CACJkB,KAAK,CAAE,GADH,CACQC,MAAM,CAAE,GADhB,CAEJC,KAAK,CAAE,CACPV,KAAK,CAAE,MADA,CAEPW,IAAI,CAAE,MAFC,CAFH,CAMJC,KAAK,CAAE,CACHZ,KAAK,CAAE,QADJ,CANH,CASJA,KAAK,CAAEA,KATH,CAFR,EADA,EAVJ,GAFJ,CA+BH,CAED,cAAetE,CAAAA,SAAf","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect} from 'react';\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport Axios from 'axios';\nimport styled from 'styled-components';\nimport { sendGraphData } from './FavoriteBar';\nvar Plot = createPlotlyComponent(Plotly);\nvar rideListSend;\nvar statListSend;\nvar recData = JSON.parse(localStorage.getItem('data') || '[]');;\n\nexport function saveLists()\n    {\n        return {\n        rideList: rideListSend,\n        statList: statListSend\n        }\n    }\n\nexport function ChartLine() {\n\n   \n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const setFavGraph = () => {\n        // localStorage.clear()\n        var rideString = recData[0].rides\n        var favRides = rideString.split(',')\n        setRideList(favRides)\n\n        var statString = recData[0].stats\n        console.log(recData[0].stats)\n        var favStats = statString.split(',')\n        setStatList(favStats)\n\n        \n    }\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n                if(recData.length > 0)\n                {\n                    setFavGraph();\n                }\n                rideListSend = res.data;\n            }).catch(err => console.log(err));\n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n            if(recData.length > 0)\n                {\n                    setFavGraph();\n                }\n            statListSend = res.data;\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n\n\n    var intervalCard = [];\n\n    {dataList.map((val, key) => {\t\n            var time = new Date(val.ts)\n            var date = new Date(val.ts).getMonth() + \"/\" + new Date(val.ts).getDate() + \"/\" + new Date(val.ts).getFullYear();\n            intervalCard.push({rideName: val.ride_name, WaitTime: val.WaitTime,\n            Throughput: val.Throughput, AvailableSeats: val.AvailableSeats, \n            AvailableDown: val.AvailableDown, Time: time, Date: date})\n        \n     })}\n  \n\n    var graphData = [];\n\n    const graphStat = (ride) => \n    {\n        for(let i = 0; i < ride.length; i++)\n        {\n            var foundData = false;\n            var temp = ride[i];\n            var TEMPthroughputData = [];\n            var TEMPwaitTimeData = [];\n            var TEMPavailableSeatsData = [];\n            var TEMPavailableDownData = [];\n            var TEMPthroughputTime = [];\n            var TEMPwaitTimeTime = [];\n            var TEMPavailableSeatsTime = [];\n            var TEMPavailableDownTime = [];\n\n                for(let i = 0; i < intervalCard.length; i++) \n                {   \n                    if(intervalCard[i].rideName == temp)\n                    {\n\n                        if(statList.includes(\"Throughput\") && intervalCard[i].Throughput >= 0){\n                            TEMPthroughputTime.push(intervalCard[i].Time)\n                            TEMPthroughputData.push(intervalCard[i].Throughput);\n                            foundData = true;\n                        }\n\n                        if(statList.includes(\"Wait Time\") && intervalCard[i].WaitTime >= 0){\n                            TEMPwaitTimeData.push(intervalCard[i].WaitTime);\n                            TEMPwaitTimeTime.push(intervalCard[i].Time)\n                            foundData = true;\n                        }\n\n                        if(statList.includes(\"Available Seats\") && intervalCard[i].AvailableSeats >= 0){\n                            TEMPavailableSeatsData.push(intervalCard[i].AvailableSeats);\n                            TEMPavailableSeatsTime.push(intervalCard[i].Time)\n                            foundData = true;\n                        }\n\n                        if(statList.includes(\"Available Down\") && intervalCard[i].AvailableDown >= 0){\n                            TEMPavailableDownData.push(intervalCard[i].AvailableDown);\n                            TEMPavailableDownTime.push(intervalCard[i].Time)\n                            foundData = true;\n                        }\n                        \n                        if(intervalCard[i].rideName != temp)\n                        {\n                            break;\n                        }\n                    }  \n                }\n                if(foundData)\n                {\n                    graphData.push({temp ,TEMPthroughputTime, TEMPthroughputData, TEMPwaitTimeTime, TEMPwaitTimeData, TEMPavailableSeatsTime, TEMPavailableSeatsData, TEMPavailableDownTime, TEMPavailableDownData})\n                }\n              getGraphData();  \n        }\n    }\n    var rideTraceArray = [];\n    var tempRide = '';\n    \n\n    const getGraphData = () => {\n        //console.log(graphData)\n        for(let i = 0; i < graphData.length; i++)\n        {   \n            if(statList.includes(\"Throughput\"))\n            {\n                tempRide = graphData[i].temp;\n                tempRide = `${tempRide}Trace`;\n                window[tempRide] = {\n                    x: graphData[i].TEMPthroughputTime,\n                    y: graphData[i].TEMPthroughputData,\n                    name: graphData[i].temp + \" Throughput\"\n                };\n                rideTraceArray.push(window[tempRide])\n            }\n            if(statList.includes(\"Wait Time\"))\n            {\n                tempRide = graphData[i].temp;\n                tempRide = `${tempRide}Trace`;\n                window[tempRide] = {\n                    x: graphData[i].TEMPwaitTimeTime,\n                    y: graphData[i].TEMPwaitTimeData,\n                    name: graphData[i].temp + \" Wait Time\"\n                };\n                rideTraceArray.push(window[tempRide])\n            }\n            if(statList.includes(\"Available Seats\"))\n            {\n                tempRide = graphData[i].temp;\n                tempRide = `${tempRide}Trace`;\n                window[tempRide] = {\n                    x: graphData[i].TEMPavailableSeatsTime,\n                    y: graphData[i].TEMPavailableSeatsData,\n                    name: graphData[i].temp +  \" Available Seats\"\n                };\n                rideTraceArray.push(window[tempRide])\n            }\n            if(statList.includes(\"Available Down\"))\n            {\n                tempRide = graphData[i].temp;\n                tempRide = `${tempRide}Trace`;\n                window[tempRide] = {\n                    x: graphData[i].TEMPavailableDownTime,\n                    y: graphData[i].TEMPavailableDownData,\n                    name: graphData[i].temp + \" Available Down\"\n                };\n                rideTraceArray.push(window[tempRide])\n            } \n        }\n        const unique = [...new Map(rideTraceArray.map(o => [o.name, o])).values()]\n        rideTraceArray = unique\n    }\n\n    var title = ''\n    for (let i = 0; i < rideList.length; i++) {\n\n        if(statList == ''){\n            title = rideList[0]\n        }\n        else if(rideList.length == 1) {\n            if(rideList.length == 1) {\n                title = rideList[0] + ' ' + title + '(' + statList + ')'\n            }\n        }\n        else if(rideList.length == 2) {\n            title = rideList[0] + ' and ' + rideList[1]\n        }\n        else if(rideList.length > 2) {\n            var tmp = [...new Set(rideList)]\n            var last = tmp.pop();\n            var result = tmp.join(', ') + ' and ' + last;\n            title = result\n        }\n    }\n\n    \n   \n    \n    return (\n\n        <div>\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n            \n        }, [])}\n        {console.log(recData)}\n            {graphStat(rideList)}\n            {/* {console.log('trace', rideTraceArray), console.log('data', graphData)} */}\n            <div id='myDiv'>\n            <Plot \n            data={rideTraceArray}\n            layout={{\n                width: 950, height: 570,\n                xaxis: {\n                title: 'Time',\n                type: 'time'\n                }, \n                yaxis: {\n                    title: 'Amount',\n                }, \n                title: title\n            }}\n            />\n            </div>\t\t\t\t\n        </div>\n    );\n    \n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}