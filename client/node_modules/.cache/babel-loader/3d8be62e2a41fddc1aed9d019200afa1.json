{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\ParkwideIntervals.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`;\n_c = Label1;\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`;\n_c2 = Container;\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c3 = IntervalContainer;\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c4 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\npadding-left: 20px;\npadding-top: 20px;\nfont-size: 18px;\nfont-weight: bold;\n`;\n_c5 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c6 = CardCollect;\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c7 = CardFrom;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c8 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c9 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`;\n_c10 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`;\n_c11 = Button;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n\n`;\n_c12 = DeleteButton;\n\nconst ParkwideIntervals = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [parkIntervalList, setParkIntervalList] = useState([]);\n\n  const deleteInterval = id => {\n    Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label1, {\n      children: \"Parkwide Intervals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntervalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 42\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParkwideModal, {\n          showModal: showModal,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), useEffect(() => {\n        Axios.get('http://localhost:3001/getParkInterval').then(res => {\n          setParkIntervalList(res.data);\n        }).catch(err => console.log(err));\n      }, []), parkIntervalList.map((val, key) => {\n        var id = val.id;\n\n        const checkWait = () => {\n          if (val.checkedWaitTime == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Wait Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 28\n            }, this);\n          }\n        };\n\n        const checkThroughput = () => {\n          if (val.checkedThroughput == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Throughtput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 28\n            }, this);\n          }\n        };\n\n        const checkAvailable = () => {\n          if (val.checkedAvailableSeats == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Available Seats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 28\n            }, this);\n          }\n        };\n\n        const checkDown = () => {\n          if (val.checkedAvailableDown == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Available Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 28\n            }, this);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(IntervalCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardTime, {\n            children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n              onClick: () => {\n                console.log(id);\n                deleteInterval(id);\n                setTimeout(function () {\n                  window.location.reload();\n                }, 1);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n            children: [\"Collect\", checkWait(), checkThroughput(), checkAvailable(), checkDown()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardFrom, {\n            children: [\"From \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"Reported Down Rides\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n            children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Opening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 51\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\" \", val.startingTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n            children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: \"At Park Closing \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 47\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: val.endingTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkwideIntervals, \"tVdqnFUQfaEl+J5Gcq19Z50ffQ0=\");\n\n_c13 = ParkwideIntervals;\nexport default ParkwideIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Label1\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"IntervalContainer\");\n$RefreshReg$(_c4, \"IntervalCard\");\n$RefreshReg$(_c5, \"CardTime\");\n$RefreshReg$(_c6, \"CardCollect\");\n$RefreshReg$(_c7, \"CardFrom\");\n$RefreshReg$(_c8, \"CardStarting\");\n$RefreshReg$(_c9, \"CardEnding\");\n$RefreshReg$(_c10, \"Image\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"DeleteButton\");\n$RefreshReg$(_c13, \"ParkwideIntervals\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/ParkwideIntervals.js"],"names":["styled","plus","ParkwideModal","GlobalStyle","Axios","React","useState","useRef","useEffect","useCallback","MdClose","Label1","h1","Container","div","IntervalContainer","IntervalCard","CardTime","CardCollect","CardFrom","CardStarting","CardEnding","CardH","Image","img","Button","button","DeleteButton","ParkwideIntervals","showModal","setShowModal","openModal","prev","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","parkIntervalList","setParkIntervalList","deleteInterval","id","delete","get","then","res","data","catch","err","console","log","map","val","key","checkWait","checkedWaitTime","checkThroughput","checkedThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown","setTimeout","window","location","reload"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\npadding-left: 20px;\npadding-top: 20px;\nfont-size: 18px;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n\n`;\nconst ParkwideIntervals= () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [parkIntervalList, setParkIntervalList] = useState([]);\n\n        const deleteInterval = (id) => {\n            Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n          };\n \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard>\n                {useEffect(() => {\n                Axios.get('http://localhost:3001/getParkInterval').then(res => {\n                setParkIntervalList(res.data)\n                }).catch(err => console.log(err));\n                }, [])}\n                {parkIntervalList.map((val, key) => {\n                var id = val.id;\n                const checkWait = () => {\n                if (val.checkedWaitTime == true){\n                    return <li>Wait Time</li>;\n                 }\n                }\n\n            const checkThroughput = () => {\n                if (val.checkedThroughput == true){\n                    return <li>Throughtput</li>\n                }\n               }\n\n            const checkAvailable = () => {\n                if (val.checkedAvailableSeats == true){\n                    return <li>Available Seats</li>\n                    }\n                }\n\n            const checkDown = () => {\n                if (val.checkedAvailableDown == true){\n                    return <li>Available Down</li>\n                }\n            }\n                        return (\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            \n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 1);\n                               }}/></CardTime>\n \n                        <CardCollect>Collect \n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                            \n                        </CardCollect>\n                            <CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n                            <CardStarting>Starting<ul>At Park Opening</ul>  <ul> {val.startingTime} </ul> </CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing </ul> <ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                        );\n                    })}\n\n\n\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals"]},"metadata":{},"sourceType":"module"}