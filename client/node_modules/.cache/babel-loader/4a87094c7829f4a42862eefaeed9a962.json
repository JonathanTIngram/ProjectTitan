{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginUser } from \"../actions\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = () => ({\n  \"@global\": {\n    body: {\n      backgroundColor: \"#fff\"\n    }\n  },\n  paper: {\n    marginTop: 100,\n    display: \"flex\",\n    padding: 20,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    backgroundColor: \"#f50057\"\n  },\n  form: {\n    marginTop: 1\n  },\n  errorText: {\n    color: \"#f50057\",\n    marginBottom: 5,\n    textAlign: \"center\"\n  }\n});\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleEmailChange = ({\n      target\n    }) => {\n      this.setState({\n        email: target.value\n      });\n    };\n\n    this.handlePasswordChange = ({\n      target\n    }) => {\n      this.setState({\n        password: target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      dispatch(loginUser(email, password));\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loginError,\n      isAuthenticated\n    } = this.props;\n\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            onChange: this.handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            onChange: this.handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), loginError && /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            className: classes.errorText,\n            children: \"Incorrect email or password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: this.handleSubmit,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    loginError: state.auth.loginError,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(Login));","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/pages/login.js"],"names":["React","Component","connect","Redirect","loginUser","withStyles","Avatar","Button","TextField","LockOutlinedIcon","Typography","Paper","Container","styles","body","backgroundColor","paper","marginTop","display","padding","flexDirection","alignItems","avatar","marginLeft","marginRight","form","errorText","color","marginBottom","textAlign","Login","state","email","password","handleEmailChange","target","setState","value","handlePasswordChange","handleSubmit","dispatch","props","render","classes","loginError","isAuthenticated","submit","mapStateToProps","isLoggingIn","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginUser } from \"../actions\";\nimport { withStyles } from \"@material-ui/styles\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\n\nconst styles = () => ({\n  \"@global\": {\n    body: {\n      backgroundColor: \"#fff\"\n    }\n  },\n  paper: {\n    marginTop: 100,\n    display: \"flex\",\n    padding: 20,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    backgroundColor: \"#f50057\"\n  },\n  form: {\n    marginTop: 1\n  },\n  errorText: {\n    color: \"#f50057\",\n    marginBottom: 5,\n    textAlign: \"center\"\n  }\n});\n\nclass Login extends Component {\n  state = { email: \"\", password: \"\" };\n\n  handleEmailChange = ({ target }) => {\n    this.setState({ email: target.value });\n  };\n\n  handlePasswordChange = ({ target }) => {\n    this.setState({ password: target.value });\n  };\n\n  handleSubmit = () => {\n    const { dispatch } = this.props;\n    const { email, password } = this.state;\n\n    dispatch(loginUser(email, password));\n  };\n\n  render() {\n    const { classes, loginError, isAuthenticated } = this.props;\n    if (isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <Container component=\"main\" maxWidth=\"xs\">\n          <Paper className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={this.handleEmailChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handlePasswordChange}\n            />\n            {loginError && (\n              <Typography component=\"p\" className={classes.errorText}>\n                Incorrect email or password.\n              </Typography>\n            )}\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={this.handleSubmit}\n            >\n              Sign In\n            </Button>\n          </Paper>\n        </Container>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    loginError: state.auth.loginError,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(Login));"]},"metadata":{},"sourceType":"module"}