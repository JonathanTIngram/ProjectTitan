{"ast":null,"code":"import _slicedToArray from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState,useEffect}from'react';import styled from'styled-components';import Axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Border=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\noverflow: hidden;\\nbackground: transparent;\\nmargin: 15px 0px;\\nposition: absolute;\\nleft: 0px;\\nwidth: 25%;\\nheight: 240px;\\nborder-right: 2px solid black;\\n\"])));var InfoContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\noverflow: hidden;\\noverflow-y: scroll;\\nbackground: transparent;\\nposition: absolute;\\nleft: 0px;\\nwidth: 100%;\\nheight: 200px;\\n\"])));var Label1=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\nmargin-top: 2%;\\nmargin-left: 0%;\\nfont-size: 175%;\\ntext-align: center;\\nfont-weight: normal;\\n\"])));var styleBlue={backgroundColor:'#8EAAD1'};var styleGray={backgroundColor:'#AFAFAF'};var IntervalsCountDisplay=function IntervalsCountDisplay(){//state to get all attractions\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),attractionList=_useState2[0],setAttractionList=_useState2[1];//recieve data from backend to display\nvar GetAttractions=function GetAttractions(){//console.log(res.data)\nuseEffect(function(){Axios.get('http://18.204.6.173:3001/getAttraction').then(function(res){setAttractionList(res.data);}).catch(function(err){return console.log(err);});},[]);};return/*#__PURE__*/_jsxs(Border,{children:[/*#__PURE__*/_jsx(Label1,{children:\" Attraction Intervals \"}),/*#__PURE__*/_jsxs(InfoContainer,{children:[window.addEventListener('load',GetAttractions()),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:styleGray,children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"# of Specific Intervals\"})]})}),attractionList.map(function(val,key){var ride=val.ride_name;var cardCount=0;return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ride}),/*#__PURE__*/_jsx(\"td\",{children:cardCount})]})});})]})]})]});};export default IntervalsCountDisplay;","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/IntervalsCountDisplay.js"],"names":["React","useState","useEffect","styled","Axios","Border","div","InfoContainer","Label1","h1","styleBlue","backgroundColor","styleGray","IntervalsCountDisplay","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","window","addEventListener","map","val","key","ride","ride_name","cardCount"],"mappings":"wbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,GAAV,iOAAZ,CAWA,GAAMC,CAAAA,aAAa,CAAGJ,MAAM,CAACG,GAAV,sMAAnB,CAUA,GAAME,CAAAA,MAAM,CAAGL,MAAM,CAACM,EAAV,qKAAZ,CAOA,GAAMC,CAAAA,SAAS,CAAG,CAACC,eAAe,CAAG,SAAnB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,CAACD,eAAe,CAAG,SAAnB,CAAlB,CACA,GAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAEhC;AAFgC,cAGYZ,QAAQ,CAAC,EAAD,CAHpB,wCAGzBa,cAHyB,eAGTC,iBAHS,eAKhC;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB;AACAd,SAAS,CAAC,UAAM,CACZE,KAAK,CAACa,GAAN,CAAU,wCAAV,EAAoDC,IAApD,CAAyD,SAAAC,GAAG,CAAI,CAChEJ,iBAAiB,CAACI,GAAG,CAACC,IAAL,CAAjB,CACC,CAFD,EAEGC,KAFH,CAES,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAFZ,EAGC,CAJI,CAIF,EAJE,CAAT,CAKH,CAPD,CASA,mBACI,MAAC,MAAD,yBAEI,KAAC,MAAD,qCAFJ,cAGQ,MAAC,aAAD,YACCG,MAAM,CAACC,gBAAP,CAAwB,MAAxB,CAAgCV,cAAc,EAA9C,CADD,cAEA,eAAO,SAAS,CAAC,oCAAjB,wBACI,oCACI,YAAI,KAAK,CAAIJ,SAAb,wBACI,WAAI,KAAK,CAAC,KAAV,kBADJ,cAEI,WAAI,KAAK,CAAC,KAAV,qCAFJ,GADJ,EADJ,CAQKE,cAAc,CAACa,GAAf,CAAmB,SAACC,GAAD,CAAMC,GAAN,CAAc,CAC9B,GAAIC,CAAAA,IAAI,CAAGF,GAAG,CAACG,SAAf,CACA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CAEA,mBACJ,oCAEI,mCACI,oBAAKF,IAAL,EADJ,cAEI,oBAAKE,SAAL,EAFJ,GAFJ,EADI,CAUH,CAdA,CARL,GAFA,GAHR,GADJ,CAoCH,CAnDD,CAqDA,cAAenB,CAAAA,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\nheight: 200px;\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst IntervalsCountDisplay = () => {\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n    //recieve data from backend to display\n    const GetAttractions = () => {\n        //console.log(res.data)\n        useEffect(() => {\n            Axios.get('http://18.204.6.173:3001/getAttraction').then(res => {\n            setAttractionList(res.data);\n            }).catch(err => console.log(err));\n            }, [])\n    }\n\n    return (\n        <Border>\n     \n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        var cardCount = 0;\n                        \n                        return(\n                    <tbody>\n\n                        <tr>\n                            <td>{ride}</td>\n                            <td>{cardCount}</td>\n                        </tr>\n\n                    </tbody>\n                        );\n                    })}\n\n                    \n                </table>\n                    </InfoContainer>    \n \n        </Border>\n    )\n}\n\nexport default IntervalsCountDisplay"]},"metadata":{},"sourceType":"module"}