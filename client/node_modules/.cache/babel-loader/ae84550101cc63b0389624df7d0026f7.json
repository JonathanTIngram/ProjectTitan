{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\ParkwideIntervals.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`;\n_c = Label1;\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`;\n_c2 = Container;\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c3 = IntervalContainer;\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c4 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\npadding-left: 20px;\npadding-top: 20px;\nfont-size: 18px;\nfont-weight: bold;\n`;\n_c5 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c6 = CardCollect;\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c7 = CardFrom;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c8 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`;\n_c9 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`;\n_c10 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`;\n_c11 = Button;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n\n`;\n_c12 = DeleteButton;\n\nconst ParkwideIntervals = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [parkIntervalList, setParkIntervalList] = useState([]);\n\n  const deleteInterval = id => {\n    Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label1, {\n      children: \"Parkwide Intervals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IntervalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 42\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParkwideModal, {\n          showModal: showModal,\n          setShowModal: setShowModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), intervalList.map((val, key) => {\n        var id = val.id;\n\n        const checkWait = () => {\n          if (val.checkedWaitTime == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Wait Time \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setWaitTime(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 112\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkThroughput = () => {\n          if (val.checkedThroughput == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Throughput \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setThroughput(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 92\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkAvailable = () => {\n          if (val.checkedAvailableSeats == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Seats \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableSeats(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkDown = () => {\n          if (val.checkedAvailableDown == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Down \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableDown(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n                onClick: () => {\n                  console.log(id);\n                  deleteInterval(id);\n                  setTimeout(function () {\n                    window.location.reload();\n                  }, 2);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [checkWait(), checkThroughput(), checkAvailable(), checkDown(), /*#__PURE__*/_jsxDEV(SubmitButton, {\n                onClick: () => {\n                  editInterval(id);\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 51\n              }, this), \" \", val.startingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 47\n              }, this), val.endingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      }), \"); })}\", /*#__PURE__*/_jsxDEV(CardFrom, {\n        children: [\"From \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Reported Down Rides\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ParkwideIntervals, \"ZlZl7heQ62Umr2qcmAVCLyJpqeQ=\");\n\n_c13 = ParkwideIntervals;\nexport default ParkwideIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Label1\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"IntervalContainer\");\n$RefreshReg$(_c4, \"IntervalCard\");\n$RefreshReg$(_c5, \"CardTime\");\n$RefreshReg$(_c6, \"CardCollect\");\n$RefreshReg$(_c7, \"CardFrom\");\n$RefreshReg$(_c8, \"CardStarting\");\n$RefreshReg$(_c9, \"CardEnding\");\n$RefreshReg$(_c10, \"Image\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"DeleteButton\");\n$RefreshReg$(_c13, \"ParkwideIntervals\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/ParkwideIntervals.js"],"names":["styled","plus","ParkwideModal","GlobalStyle","Axios","React","useState","useRef","useEffect","useCallback","MdClose","Label1","h1","Container","div","IntervalContainer","IntervalCard","CardTime","CardCollect","CardFrom","CardStarting","CardEnding","CardH","Image","img","Button","button","DeleteButton","ParkwideIntervals","showModal","setShowModal","openModal","prev","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","parkIntervalList","setParkIntervalList","deleteInterval","id","delete","intervalList","map","val","key","checkWait","checkedWaitTime","e","setWaitTime","target","value","checkThroughput","checkedThroughput","setThroughput","checkAvailable","checkedAvailableSeats","setAvailableSeats","checkDown","checkedAvailableDown","setAvailableDown","console","log","setTimeout","window","location","reload","editInterval"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { ParkwideModal } from './ParkwideModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport Axios from 'axios'\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { MdClose } from 'react-icons/md';\n\nconst Label1 = styled.h1`\nmargin-left: .8%;\nmargin-top: .1%;\nfont-size: 175%;\ntext-align: left;\nfont-weight: normal;\n`\n\nconst Container = styled.div`\nposition: absolute;\nmargin-top: 20px;\ntop: 300px;\nwidth: 100%;\nheight: 50%;\nborder-bottom: 2px solid black;\nborder-top: 2px solid black;\n`\n\nconst IntervalContainer = styled.div`\nposition: absolute;\nbottom: 0%;\nleft: 0%;\nheight: 90%;\nwidth: 95%;\nborder-top: 2px solid black;\nborder-right: 2px solid black;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`\n\n\nconst IntervalCard = styled.div`\nwidth: 20%;;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\npadding-left: 20px;\npadding-top: 20px;\nfont-size: 18px;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 15%;\nheight: 30%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardFrom = styled.div`\nposition: absolute;\ntop: 45%;\nheight: 15%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 60%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\n\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 80%;\nheight: 20%;\nwidth: 20%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 120%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\n`\n\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 7%;\ntop: 42%;\nborder: none;\n`\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n\n`;\nconst ParkwideIntervals= () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [parkIntervalList, setParkIntervalList] = useState([]);\n\n        const deleteInterval = (id) => {\n            Axios.delete(`http://localhost:3001/deleteParkInterval/${id}`);\n          };\n \n    return (\n        <Container>\n            <Label1>Parkwide Intervals</Label1>\n            <IntervalContainer>\n            \n            <IntervalCard>\n\n            <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <ParkwideModal showModal={showModal} setShowModal={setShowModal} />\n                    <GlobalStyle /> \n\n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                            return (\n                                <div>\n                                    <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables type=\"text\" onChange={(e) => {\n                                    setThroughput(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <>\n\n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                    editInterval(id)\n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n                        );\n                    })}\n\n\n<CardFrom>From <ul>Reported Down Rides</ul></CardFrom>\n            </IntervalContainer>\n        </Container>\n    )\n}\n\nexport default ParkwideIntervals"]},"metadata":{},"sourceType":"module"}