{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { Component, useState, useEffect } from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { XYPlot, Borders, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, LineMarkSeries } from 'react-vis';\nimport { FlexibleXYPlot, FlexibleWidthXYPlot, FlexibleHeightXYPlot } from 'react-vis';\nimport Plot from 'react-plotly.js';\nimport Plotly from 'plotly.js';\nimport Axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartLine() {\n  _s();\n\n  var [rideList, setRideList] = useState([]);\n  var [statList, setStatList] = useState([]);\n  var [dataList, setDataList] = useState([]);\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRideList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStatList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedData = () => {\n    Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n      //console.log(res.data)\n      setDataList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  var intervalCard = [];\n  {\n    dataList.map((val, key) => {\n      var time = new Date(val.ts);\n      var date = new Date(val.ts).getMonth() + \"/\" + new Date(val.ts).getDate() + \"/\" + new Date(val.ts).getFullYear();\n      intervalCard.push({\n        rideName: val.ride_name,\n        WaitTime: val.WaitTime,\n        Throughput: val.Throughput,\n        AvailableSeats: val.AvailableSeats,\n        AvailableDown: val.AvailableDown,\n        Time: time,\n        Date: date\n      });\n    });\n  }\n  var data = [];\n  var selected = '';\n  var result = [];\n  var organized = [];\n\n  const printOrdered = () => {\n    var temp = [];\n    var name = '';\n    intervalCard.forEach(i => {\n      name = i.rideName;\n\n      if (!temp.includes(name)) {\n        temp.push(name);\n      }\n    });\n    {\n      intervalCard.map((val, key) => {\n        var j = 0;\n\n        if (temp[j] == val.rideName) {\n          j++;\n          organized.push(val);\n        } else {\n          organized.unshift(val);\n        }\n      });\n    }\n    console.log(organized);\n    console.log(temp);\n  };\n\n  var time = [];\n  var throughput = [];\n\n  const push = () => {\n    for (var i = 0; i < intervalCard.length; i++) {\n      if (intervalCard[i].Throughput != -1) {\n        var x = intervalCard[i].Time;\n        var y = intervalCard[i].Throughput;\n        test1.push(x);\n        test2.push(y);\n      }\n    }\n\n    result = {\n      x: test1,\n      y: test2\n    };\n    data.push(result);\n    data.sort((a, b) => a.x > b.x ? 1 : a.x === b.x ? 1 : -1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', CheckedData());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n    }, []), printOrdered(), push(), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myDiv\",\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: data,\n        layout: {\n          xaxis: {\n            type: 'time'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartLine, \"vGbCVrqDan+5cQVEl78sxmhvyCo=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js"],"names":["React","Component","useState","useEffect","XYPlot","Borders","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","LineMarkSeries","FlexibleXYPlot","FlexibleWidthXYPlot","FlexibleHeightXYPlot","Plot","Plotly","Axios","styled","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","intervalCard","map","val","key","time","Date","ts","date","getMonth","getDate","getFullYear","push","rideName","ride_name","WaitTime","Throughput","AvailableSeats","AvailableDown","Time","selected","result","organized","printOrdered","temp","name","forEach","i","includes","j","unshift","throughput","length","x","y","test1","test2","sort","a","b","window","addEventListener","xaxis","type"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component, useState, useEffect} from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport {XYPlot, Borders, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, LineMarkSeries} from 'react-vis';\nimport {\n  FlexibleXYPlot,\n  FlexibleWidthXYPlot,\n  FlexibleHeightXYPlot\n} from 'react-vis';\nimport Plot from 'react-plotly.js';\nimport Plotly from 'plotly.js';\nimport Axios from 'axios';\nimport styled from 'styled-components';\n\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n\n\n    var intervalCard = [];\n    {dataList.map((val, key) => {\t\n            var time = new Date(val.ts)\n            var date = new Date(val.ts).getMonth() + \"/\" + new Date(val.ts).getDate() + \"/\" + new Date(val.ts).getFullYear();\n            intervalCard.push({rideName: val.ride_name, WaitTime: val.WaitTime,\n            Throughput: val.Throughput, AvailableSeats: val.AvailableSeats, \n            AvailableDown: val.AvailableDown, Time: time, Date: date})\n     })}\n  \n    var data = []\n    var selected = '';\n    var result = []\n    var organized = []\n    const printOrdered = () => {\n        var temp = [];\n        var name = ''\n        intervalCard.forEach(i => {\n            name = i.rideName;\n            if(!temp.includes(name)){\n                temp.push(name)\n            }\n        });\n            {intervalCard.map((val, key) => {\t\n            var j = 0\n            if(temp[j] == val.rideName){\n                j++;\n                organized.push(val)\n            }\n            else{\n                organized.unshift(val)\n            }\n        })}\n        console.log(organized)\n        console.log(temp)\n    }\n    var time = []\n    var throughput = []\n    const push = () => {\n        for ( var i = 0 ; i < intervalCard.length ; i++ ) {\n            if(intervalCard[i].Throughput != -1){\n                var x = intervalCard[i].Time\n                var y = intervalCard[i].Throughput\n                test1.push(x)\n                test2.push(y)\n         }\n        }\n        result = {\n            x: test1,\n            y: test2,\n\n        };\n        data.push(result);\n        data.sort((a, b) => (a.x > b.x) ? 1 : (a.x === b.x) ? 1 : -1)\n    \n    }\n    return (\n\n        <div>\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {printOrdered()}\n            {push()}\n            <div id='myDiv'>\n            <Plot \n            data={data}\n            layout={{\n                xaxis: {\n                type: 'time'\n                \n                }, \n            }}\n            >\n\n\n\n\n            </Plot>\n            </div>\t\t\t\t\n        </div>\n    );\n    \n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}