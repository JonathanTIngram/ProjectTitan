{"ast":null,"code":"import _slicedToArray from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useEffect}from'react';import{NavLink}from'react-router-dom';import styled from'styled-components';import Axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AttractionManagerTableContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\noverflow: hidden;\\noverflow-y: scroll;\\nbackground: transparent;\\nborder-bottom: 2px solid black;\\nborder-bottom: 2px solid black;\\nmargin: 15px 0px;\\nposition: absolute;\\nleft: 0px;\\nwidth: 88.5%;\\nheight: 83.5%;\\n\"])));export var Select=styled.select(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\nheight: 95%;\\nwidth: 95%;\\nfont-size: 100%;\\nfont-weight: bold;\\n\"])));var styleBlue={backgroundColor:'#8EAAD1'};var styleGray={backgroundColor:'#AFAFAF'};var AttractionManagerTable=function AttractionManagerTable(){//states\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),ride_name=_useState2[0],setRide_name=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),dailyOpening=_useState4[0],setDailyOpening=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),dailyClosing=_useState6[0],setDailyClosing=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),theoryCapacity=_useState8[0],setTheoryCapacity=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),targetCapacity=_useState10[0],setTargetCapacity=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),minVehicles=_useState12[0],setMinVehicles=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),maxVehicles=_useState14[0],setMaxVehicles=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),maxSeats=_useState16[0],setMaxSeats=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),minStaff=_useState18[0],setMinStaff=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),maxStaff=_useState20[0],setMaxStaff=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),parkSection=_useState22[0],setParkSection=_useState22[1];var _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),weatherCode=_useState24[0],setWeatherCode=_useState24[1];var _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),rideType=_useState26[0],setRideType=_useState26[1];//state to get all attractions\nvar _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),attractionList=_useState28[0],setAttractionList=_useState28[1];//recieve data from backend to display\nvar GetAttractions=function GetAttractions(){//console.log(res.data)\nuseEffect(function(){Axios.get('http://18.204.6.173:3001/getAttraction').then(function(res){setAttractionList(res.data);}).catch(function(err){return console.log(err);});},[]);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(AttractionManagerTableContainer,{children:[window.addEventListener('load',GetAttractions()),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:styleGray,children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Ride Name\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Daily Opening\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Daily Closing\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Theoretical Capacity\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Target Capacity\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Minimum Vehicles\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Maximum Vehicles\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Maximum Seats\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Minimum Staff\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Maximum Staff\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Park Section\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Weather Code\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Type\"})]})}),attractionList.map(function(val,key){var ride=val.ride_name;return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(NavLink,{to:{pathname:'/rideInfo',ride_name:{ride:ride}},children:val.ride_name})}),/*#__PURE__*/_jsx(\"td\",{children:val.dailyOpening}),/*#__PURE__*/_jsx(\"td\",{children:val.dailyClosing}),/*#__PURE__*/_jsx(\"td\",{children:val.theoryCapacity}),/*#__PURE__*/_jsx(\"td\",{children:val.targetCapacity}),/*#__PURE__*/_jsx(\"td\",{children:val.minVehicles}),/*#__PURE__*/_jsx(\"td\",{children:val.maxVehicles}),/*#__PURE__*/_jsx(\"td\",{children:val.maxSeats}),/*#__PURE__*/_jsx(\"td\",{children:val.minStaff}),/*#__PURE__*/_jsx(\"td\",{children:val.maxStaff}),/*#__PURE__*/_jsx(\"td\",{children:val.parkSection}),/*#__PURE__*/_jsx(\"td\",{children:val.weatherCode}),/*#__PURE__*/_jsx(\"td\",{children:val.rideType})]})});})]})]})});};export default AttractionManagerTable;","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/NewAttraction/AttractionManagerTable.js"],"names":["React","useState","useEffect","NavLink","styled","Axios","AttractionManagerTableContainer","div","Select","select","styleBlue","backgroundColor","styleGray","AttractionManagerTable","ride_name","setRide_name","dailyOpening","setDailyOpening","dailyClosing","setDailyClosing","theoryCapacity","setTheoryCapacity","targetCapacity","setTargetCapacity","minVehicles","setMinVehicles","maxVehicles","setMaxVehicles","maxSeats","setMaxSeats","minStaff","setMinStaff","maxStaff","setMaxStaff","parkSection","setParkSection","weatherCode","setWeatherCode","rideType","setRideType","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","window","addEventListener","map","val","key","ride","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Axios from 'axios'\n\nconst AttractionManagerTableContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nborder-bottom: 2px solid black;\nborder-bottom: 2px solid black;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 88.5%;\nheight: 83.5%;\n`;\n\nexport const Select = styled.select`\nheight: 95%;\nwidth: 95%;\nfont-size: 100%;\nfont-weight: bold;\n`\n\n\nconst styleBlue = {backgroundColor : '#8EAAD1'};\nconst styleGray = {backgroundColor : '#AFAFAF'};\nconst AttractionManagerTable = () => {\n\n    //states\n    const [ride_name, setRide_name] = useState('');\n    const [dailyOpening, setDailyOpening] = useState('');\n    const [dailyClosing, setDailyClosing] = useState('');\n    const [theoryCapacity, setTheoryCapacity] = useState('');\n    const [targetCapacity, setTargetCapacity] = useState('');\n    const [minVehicles, setMinVehicles] = useState('');\n    const [maxVehicles, setMaxVehicles] = useState('');\n    const [maxSeats, setMaxSeats] = useState('');\n    const [minStaff, setMinStaff] = useState('');\n    const [maxStaff, setMaxStaff] = useState('');\n    const [parkSection, setParkSection] = useState('');\n    const [weatherCode, setWeatherCode] = useState('');\n    const [rideType, setRideType] = useState('');\n\n\n\n    //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n\n\n        //recieve data from backend to display\n    const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://18.204.6.173:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n    }\n\n    return (\n        <>\n\n        <AttractionManagerTableContainer>\n        {window.addEventListener('load', GetAttractions())}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <tr style = {styleGray}>\n                        <th scope=\"col\">Ride Name</th>\n                        <th scope=\"col\">Daily Opening</th>\n                        <th scope=\"col\">Daily Closing</th>\n                        <th scope=\"col\">Theoretical Capacity</th>\n                        <th scope=\"col\">Target Capacity</th>\n                        <th scope=\"col\">Minimum Vehicles</th>\n                        <th scope=\"col\">Maximum Vehicles</th>\n                        <th scope=\"col\">Maximum Seats</th>\n                        <th scope=\"col\">Minimum Staff</th>\n                        <th scope=\"col\">Maximum Staff</th>\n                        <th scope=\"col\">Park Section</th>\n                        <th scope=\"col\">Weather Code</th>\n                        <th scope=\"col\">Type</th>\n                    </tr>\n                </thead>\n\n                {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                        return (\n                <tbody>\n                    <tr>\n                        <td><NavLink to = {{\n                            pathname:'/rideInfo',\n                            ride_name: {ride}\n                            \n                        }}>{val.ride_name}</NavLink></td>\n                        <td>{val.dailyOpening}</td>\n                        <td>{val.dailyClosing}</td>\n                        <td>{val.theoryCapacity}</td>\n                        <td>{val.targetCapacity}</td>\n                        <td>{val.minVehicles}</td>\n                        <td>{val.maxVehicles}</td>\n                        <td>{val.maxSeats}</td>\n                        <td>{val.minStaff}</td>\n                        <td>{val.maxStaff}</td>\n                        <td>{val.parkSection}</td>\n                        <td>{val.weatherCode}</td>\n                        <td>{val.rideType}</td>\n                    </tr>\n                </tbody>\n                        );\n                    })}\n                \n            </table>\n        </AttractionManagerTableContainer>\n        </>\n    )\n}\n\nexport default AttractionManagerTable"]},"metadata":{},"sourceType":"module"}