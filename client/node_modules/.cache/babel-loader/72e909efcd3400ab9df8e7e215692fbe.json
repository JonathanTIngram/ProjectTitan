{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Interval\\\\AttractionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n_c = Background;\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n_c2 = ModalWrapper;\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n_c3 = ModalContent;\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n_c4 = CloseModalButton;\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`;\n_c5 = InputStyle;\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`;\n_c6 = Submit;\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`;\n_c7 = TR;\nexport const Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n_c8 = Menu;\nconst RideSelect = styled.select`\n    align-content: right;\n`;\n_c9 = RideSelect;\nexport const AttractionModal = ({\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n      console.log('I pressed');\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]); //states\n\n  const [rideName, setRideName] = useState('');\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  useEffect(() => {\n    let typeState = [{\n      id: 1,\n      type: \"Wait Time\"\n    }, {\n      id: 2,\n      type: \"Throughput\"\n    }, {\n      id: 3,\n      type: \"Available Seats\"\n    }, {\n      id: 4,\n      type: \"Available Down\"\n    }];\n    setTypeState(typeState.map(d => {\n      return {\n        select: false,\n        id: d.id,\n        type: d.type\n      };\n    }));\n  }, []); //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n\n  const submitInterval = () => {\n    Axios.post('http://localhost:3001/addInterval', {\n      rideName: rideName,\n      timeValue: timeValue,\n      typeState: typeState.map((d, i) => {\n        if (d.select === true) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }),\n      startingTime: startingTime,\n      endingTime: endingTime\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      onClick: closeModal,\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              children: \"Add an Interval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: \" Ride Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RideSelect, {\n              onChange: e => {\n                setRideSelect(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select Attraction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this), attractionList.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: val.ride_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: \"Time Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n              type: \"number\",\n              name: \"Time\",\n              onChange: e => {\n                setTime(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: \"Collect:            \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              children: typeState.map((d, i) => /*#__PURE__*/_jsxDEV(TR, {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: event => {\n                      let checked = event.target.checked;\n                      setTypeState(typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n\n                        return data;\n                      }));\n                    },\n                    type: \"checkbox\",\n                    checked: d.select\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: d.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 15\n                }, this)]\n              }, d.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: \"Starting:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n              type: \"time\",\n              name: \"startingTime\",\n              onChange: e => {\n                setStartingTime(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: \"Ending:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n              type: \"time\",\n              name: \"endingTime\",\n              onChange: e => {\n                setEndingTime(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Submit, {\n              onClick: () => {\n                setShowModal(prev => !prev);\n                submitInterval();\n                setTimeout(function () {\n                  window.location.reload();\n                }, 1);\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => setShowModal(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(AttractionModal, \"H/PnNQ3i3veRiVNzgsry1WCRC9Q=\", false, function () {\n  return [useSpring];\n});\n\n_c10 = AttractionModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"ModalWrapper\");\n$RefreshReg$(_c3, \"ModalContent\");\n$RefreshReg$(_c4, \"CloseModalButton\");\n$RefreshReg$(_c5, \"InputStyle\");\n$RefreshReg$(_c6, \"Submit\");\n$RefreshReg$(_c7, \"TR\");\n$RefreshReg$(_c8, \"Menu\");\n$RefreshReg$(_c9, \"RideSelect\");\n$RefreshReg$(_c10, \"AttractionModal\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Interval/AttractionModal.js"],"names":["React","useState","useRef","useEffect","useCallback","useSpring","animated","styled","MdClose","Axios","Background","div","ModalWrapper","ModalContent","CloseModalButton","InputStyle","input","Submit","button","TR","Menu","RideSelect","select","AttractionModal","showModal","setShowModal","modalRef","animation","config","duration","opacity","transform","closeModal","e","current","target","keyPress","key","console","log","document","addEventListener","removeEventListener","rideName","setRideName","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","intervalList","setIntervalList","attractionList","setAttractionList","id","type","map","d","submitInterval","post","i","then","alert","setRideSelect","value","val","ride_name","event","checked","data","checkID","prev","setTimeout","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport Axios from 'axios';\n\n\nconst Background = styled.div`\n  width: 0px;\n  height: 0px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n`;\n\nconst ModalWrapper = styled.div`\n  top: 200px;\n  width: 485px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: grey;\n  position: relative;\n  border-radius: 10px;\n`;\n\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  line-height: 1.8;\n  p {\n    margin-bottom: 1rem;\n  }\n  form {\n    text-align: left;\n    color: lightblue;\n  }\n  header {\n    \n    font-size: 20pt;\n    text-align: left;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 20px;\n  width: 20px;\n  height: 40px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst InputStyle = styled.input`\nmargin-bottom: 20px;\nwidth: 40%;\n`\nconst Submit = styled.button`\nmargin-top: 20px;\nwidth: 50%;\nposition: relative;\nleft: 20%;\n`\nconst TR = styled.div`\npadding-right: 10px;\nfont-size: 17px;\n`\n\nexport const Menu = styled.div`\n  display: flex;\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst RideSelect = styled.select`\n    align-content: right;\n`\n\nexport const AttractionModal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  //states\n  const [rideName, setRideName] = useState('');\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  const [attractionList, setAttractionList] = useState([]);\n  useEffect(() => {\n    let typeState = [\n      { id: 1, type: \"Wait Time\"},\n      { id: 2, type: \"Throughput\"},\n      { id: 3, type: \"Available Seats\"},\n      { id: 4, type: \"Available Down\"},\n    ];\n    setTypeState(\n      typeState.map(d => {\n        return {\n          select: false,\n          id: d.id,\n          type: d.type,\n        };\n      })\n    );\n  }, []);\n  //state to get all attractions\n  //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  \n  const submitInterval = () =>{\n    Axios.post('http://localhost:3001/addInterval', {\n                  rideName: rideName,\n                  timeValue: timeValue,\n                  typeState: typeState.map((d, i)=>  {\n                  if (d.select === true) {\n                    return 1;\n                  }\n                  else {\n                    return 0;\n                  }\n                  }),\n                  startingTime: startingTime,\n                  endingTime: endingTime}).then(() =>{\n                    alert('successful insert');\n                }).then( () => {\n                  console.log(\"Successfully sent to port 3001\");\n                });\n  };\n  \n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              <ModalContent>\n\n                <header>Add an Interval</header>\n                <form> Ride Name</form>\n                <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n                <form>Time Value:</form>\n                <InputStyle type='number' name='Time' onChange={(e) => {\n                  setTime(e.target.value);\n                }}></InputStyle>\n                <form >Collect:            </form>\n                  <Menu>\n                {typeState.map((d, i) => ( \n                <TR key={d.id}>\n             <th>\n\n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setTypeState(\n                      typeState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                          var checkID = d.id;\n                          console.log(checkID);\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                </th>\n              <td>{d.type}</td>\n\n            </TR>\n                ))}\n                </Menu>\n\n                <form>Starting:</form>\n                <InputStyle type='time' name='startingTime' onChange={(e) => {\n                  setStartingTime(e.target.value);\n                }}></InputStyle>\n\n                <form>Ending:</form>\n                <InputStyle type='time' name='endingTime' onChange={(e) => {\n                  setEndingTime(e.target.value);\n                }}></InputStyle>\n\n                <Submit \n                onClick={() => { setShowModal(prev => !prev);\n                                  submitInterval();\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                }, 1);\n                               }}>Submit</Submit>\n              \n                \n\n\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}