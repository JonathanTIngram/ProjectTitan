{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\College\\\\Rowan\\\\Spring 2021\\\\Software Engineering\\\\project-titan\\\\client\\\\src\\\\components\\\\Graph\\\\ChartLine.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartLine() {\n  _s();\n\n  var [rideList, setRideList] = useState([]);\n  var [statList, setStatList] = useState([]);\n  var [dataList, setDataList] = useState([]);\n\n  const CheckedRideName = () => {\n    Axios.get(`http://18.204.6.173:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRideList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://18.204.6.173:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStatList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedData = () => {\n    Axios.get(`http://18.204.6.173:3001/getCollectedData`).then(res => {\n      //console.log(res.data)\n      setDataList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  let index = 0;\n  var rList = [];\n  var wList = [];\n  var tList = [];\n  var asList = [];\n  var adList = [];\n  var timeList = [];\n  var dateList = [];\n  {\n    dataList.map((val, key) => {\n      if (val.ride_name) {\n        var time = val.ts;\n        time = time.substring(11, 19);\n        var date = val.ts;\n        date = date.substring(0, 10);\n        index = index + 1;\n        console.log(\"Ride name = \", val.ride_name);\n        console.log(\"Time = \", time);\n        console.log(\"Date = \", date);\n        rList.push(val.ride_name);\n        timeList.push(time);\n        dateList.push(date);\n        console.log(\"Wait Time = \", val.WaitTime);\n        wList.push(val.WaitTime);\n        console.log(\"Throughput = \", val.Throughput);\n        tList.push(val.Throughput);\n        console.log(\"Available Seats = \", val.AvailableSeats);\n        asList.push(val.AvailableSeats);\n        console.log(\"Available Down = \", val.AvailableDown);\n        adList.push(val.AvailableDown);\n        console.log('');\n      }\n    });\n  }\n\n  const compareRide = () => {\n    for (var i = 0; i < index; i++) {\n      //check box list is compared with collected data\n      if (rideList.includes(rList[i])) {\n        console.log(\"Matched \", rList[i]); //each variable is compared with the selected stat\n\n        if (statList.includes(\"Wait Time\")) {\n          //locate variable\n          if (wList[i] != -1) {\n            console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n          }\n        }\n\n        if (statList.includes(\"Throughput\")) {\n          //locate variable\n          if (tList[i] != -1) {\n            console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Seats\")) {\n          //locate variable\n          if (asList[i] != -1) {\n            console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n          }\n        }\n\n        if (statList.includes(\"Available Down\")) {\n          //locate variable\n          if (adList[i] != -1) {\n            console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n          }\n        }\n\n        console.log('');\n      }\n    }\n  };\n\n  const data = [{\n    color: \"steelblue\",\n    points: []\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', CheckedData());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        window.addEventListener('load', CheckedStat());\n      }\n    }, []), console.log(\"Amount of rides \", index), console.log(\"Ride names = \", rList), console.log(\"TimeList = \", timeList), console.log(\"DateList = \", dateList), console.log(\"WaitList = \", wList), console.log(\"ThroughputList = \", tList), console.log(\"AvailableSeatList = \", asList), console.log(\"AvailableDownList = \", adList), compareRide(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 850,\n        height: 630,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartLine, \"vGbCVrqDan+5cQVEl78sxmhvyCo=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/College/Rowan/Spring 2021/Software Engineering/project-titan/client/src/components/Graph/ChartLine.js"],"names":["React","Component","useState","useEffect","LineChart","Axios","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","index","rList","wList","tList","asList","adList","timeList","dateList","map","val","key","ride_name","time","ts","substring","date","push","WaitTime","Throughput","AvailableSeats","AvailableDown","compareRide","i","includes","color","points","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://18.204.6.173:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n        \n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://18.204.6.173:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://18.204.6.173:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    let index = 0;\n    var rList = [];\n    var wList = [];\n    var tList = [];\n    var asList = [];\n    var adList = [];\n    var timeList = [];\n    var dateList = [];\n\n\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            var time = val.ts;\n            time = time.substring(11,19)\n            var date= val.ts;\n            date = date.substring(0,10)\n            index = index + 1;\n            console.log(\"Ride name = \", val.ride_name);\n            console.log(\"Time = \", time);\n            console.log(\"Date = \", date);\n            rList.push(val.ride_name);\n            timeList.push(time);\n            dateList.push(date)\n            console.log(\"Wait Time = \", val.WaitTime);\n            wList.push(val.WaitTime);\n        \n            console.log(\"Throughput = \", val.Throughput)\n            tList.push(val.Throughput);\n\n\n            console.log(\"Available Seats = \", val.AvailableSeats)\n            asList.push(val.AvailableSeats);\n            console.log(\"Available Down = \", val.AvailableDown)\n            adList.push( val.AvailableDown);\n\n            console.log('');\n     }\n     })}\n\n     const compareRide = () => {\n        for(var i = 0; i < index; i++) {\n            //check box list is compared with collected data\n            if(rideList.includes(rList[i])) {\n                console.log(\"Matched \", rList[i]);\n                //each variable is compared with the selected stat\n                if(statList.includes(\"Wait Time\"))\n                {\n                    //locate variable\n                    if(wList[i] != -1) {\n                        console.log(\"Wait Time of \" + rList[i] + \" = \" + wList[i]);\n                     } \n                }\n                if(statList.includes(\"Throughput\"))\n                {\n                     //locate variable\n                    if(tList[i] != -1) {\n                        console.log(\"Throughput of \" + rList[i] + \" = \" + tList[i]);\n                    }\n                }\n                if(statList.includes(\"Available Seats\"))\n                {\n                     //locate variable\n                    if(asList[i] != -1) {\n                        console.log(\"Available seats of \" + rList[i] + \" = \" + asList[i]);\n                    }\n                }   \n                if(statList.includes(\"Available Down\"))\n                {\n                     //locate variable\n                    if(adList[i] != -1) {\n                        console.log(\"Available down of \" + rList[i] + \" = \" + adList[i]);\n                    }\n                }\n\n                \n                console.log('');\n            }\n        }\n    }\n     \n    const data = [\n        {\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n  \n            ]\n        }\n    ];  \n\n    return (\n\n        <div>\n\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {console.log(\"Amount of rides \", index)}\n            {console.log(\"Ride names = \", rList)}\n            {console.log(\"TimeList = \", timeList)}\n            {console.log(\"DateList = \", dateList)}\n            {console.log(\"WaitList = \", wList)}\n            {console.log(\"ThroughputList = \", tList)}\n            {console.log(\"AvailableSeatList = \", asList)}\n            {console.log(\"AvailableDownList = \", adList)}\n\n\n            {compareRide()}\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}