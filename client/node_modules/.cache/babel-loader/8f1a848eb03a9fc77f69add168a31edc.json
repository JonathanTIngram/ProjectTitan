{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint5V2/client/src/components/Graph/RideCheck.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RideCheck() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [rideState, setRideState] = useState([]); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]);\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n  const styleLight = {\n    backgroundColor: '#DFDFDF'\n  }; //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  window.addEventListener('load', GetAttractions());\n  attractionList.map((val, key) => {\n    let rideState = [{\n      id: 1,\n      ridename: val.ride_name\n    }];\n    setRideState(rideState.map(d => {\n      return {\n        select: false,\n        id: d.id,\n        ridename: d.ridename\n      };\n    }));\n  }); // useEffect(() => {\n  //   let rideState = [\n  //     { id: 1, ridename: \"The Joker\"},\n  //     { id: 2, ridename: \"Superman\"},\n  //   ];\n  //   setRideState(\n  //     rideState.map(d => {\n  //       return {\n  //         select: false,\n  //         id: d.id,\n  //         ridename: d.ridename,\n  //       };\n  //     })\n  //   );\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styleGray,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ride Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Include\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Check All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => {\n                let checked = e.target.checked;\n                setRideState(rideState.map(d => {\n                  d.select = checked;\n                  return d;\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), rideState.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.ridename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => {\n                let checked = event.target.checked;\n                setRideState(rideState.map(data => {\n                  if (d.id === data.id) {\n                    data.select = checked;\n                  }\n\n                  return data;\n                }));\n              },\n              type: \"checkbox\",\n              checked: d.select\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, d.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RideCheck, \"JMqMYfYtgPWH9sOoTLCCc1yvjQc=\");\n\n_c = RideCheck;\nexport default RideCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"RideCheck\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint5V2/client/src/components/Graph/RideCheck.js"],"names":["React","useState","useEffect","Axios","RideCheck","rideState","setRideState","attractionList","setAttractionList","styleGray","backgroundColor","styleLight","GetAttractions","get","then","res","data","catch","err","console","log","window","addEventListener","map","val","key","id","ridename","ride_name","d","select","e","checked","target","i","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\n\nfunction RideCheck() {\n  const [rideState, setRideState] = useState([]);\n\n  //state to get all attractions\n  const [attractionList, setAttractionList] = useState([]);\n\n  const styleGray = {backgroundColor : '#AFAFAF'};\n  const styleLight = {backgroundColor : '#DFDFDF'};\n\n\n  //recieve data from backend to display\n  const GetAttractions = () => {\n    //console.log(res.data)\n    useEffect(() => {\n        Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n        }).catch(err => console.log(err));\n        }, [])\n    }\n\n\n\n  window.addEventListener('load', GetAttractions());\n  attractionList.map((val, key) => {\n      let rideState = [\n        { id: 1, ridename: val.ride_name}\n      ];\n  \n      setRideState(\n        rideState.map(d => {\n          return {\n            select: false,\n            id: d.id,\n            ridename: d.ridename,\n          };\n        })\n      );\n  });\n\n  // useEffect(() => {\n  //   let rideState = [\n  //     { id: 1, ridename: \"The Joker\"},\n  //     { id: 2, ridename: \"Superman\"},\n  //   ];\n\n  //   setRideState(\n  //     rideState.map(d => {\n  //       return {\n  //         select: false,\n  //         id: d.id,\n  //         ridename: d.ridename,\n  //       };\n  //     })\n  //   );\n  // }, []);\n\n\n\n\n\n  return (\n\n    \n    <div>\n\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style={styleGray}>\n            <th scope=\"col\">Ride Name</th>\n            <th scope=\"col\">Include</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n           <td>Check All</td>\n           <th scope=\"row\">\n              <input\n                type=\"checkbox\"\n                onChange={e => {\n                  let checked = e.target.checked;\n                  setRideState(\n                    rideState.map(d => {\n                      d.select = checked;\n                      return d;\n                    })\n                  );\n                }}\n              ></input>\n              </th>\n            </tr>\n          {rideState.map((d, i) => (\n            <tr key={d.id}>\n              <td>{d.ridename}</td>\n              <th scope=\"row\">\n             \n                <input\n                  onChange={event => {\n                    let checked = event.target.checked;\n                    setRideState(\n                      rideState.map(data => {\n                        if (d.id === data.id) {\n                          data.select = checked;\n                        }\n                        return data;\n                      })\n                    );\n                  }}\n                  type=\"checkbox\"\n                  checked={d.select}\n                ></input>\n                \n              </th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default RideCheck;"]},"metadata":{},"sourceType":"module"}