{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js\",\n    _s2 = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { MdClose } from 'react-icons/md';\nimport { IntervalCollectModal } from './IntervalCollectModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`;\n_c2 = RideName;\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c3 = PauseButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c4 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c5 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c6 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c7 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardCollect;\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c9 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c10 = CardEnding;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`;\n_c11 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`;\n_c12 = Button;\nconst RideSelect = styled.select`\nalign-content: right;\n`;\n_c13 = RideSelect;\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\n`;\n_c14 = RideButton;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n`;\n_c15 = DeleteButton;\nconst IntervalDataButton = styled.button`\nborder: none;\npadding: none;\n\n`;\n_c16 = IntervalDataButton;\n\nconst AttractionIntervals = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [showModal, setShowModal] = useState(false);\n  const [showCollectModal, setShowCollectModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const openCollectModal = ride_name => {\n    setShowCollectModal(prev => !prev);\n    Axios.get(`http://localhost:3001/getInterval/:${ride_name}`).then(res => {\n      console.log(ride_name);\n    }).catch(err => console.log(err));\n  }; //states\n\n\n  const [startingTime, setStartingTime] = useState('');\n  const [endingTime, setEndingTime] = useState('');\n  const [timeValue, setTime] = useState('');\n  const [typeState, setTypeState] = useState([]);\n  const [unitState, setUnitState] = useState(\"\");\n  const [intervalList, setIntervalList] = useState([]);\n  const [rideSelect, setRideSelect] = useState(''); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const GetIntervals = () => {\n    Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n      console.log(rideSelect);\n      setIntervalList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteInterval = ride_name => {\n    Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(RideName, {\n        children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(RideSelect, {\n          onChange: e => {\n            setRideSelect(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Attraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), attractionList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 27\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RideButton, {\n          onClick: () => {\n            GetIntervals();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n        children: \" Pause Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n        children: \" End Todays Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n          showModal: showModal,\n          setShowModal: setShowModal,\n          ride: rideSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), intervalList.map((val, key) => {\n        var id = val.id;\n\n        const checkWait = () => {\n          if (val.checkedWaitTime == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Wait Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 36\n            }, this);\n          }\n        };\n\n        const checkThroughput = () => {\n          if (val.checkedThroughput == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Throughtput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 36\n            }, this);\n          }\n        };\n\n        const checkAvailable = () => {\n          if (val.checkedAvailableSeats == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Available Seats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 36\n            }, this);\n          }\n        };\n\n        const checkDown = () => {\n          if (val.checkedAvailableDown == true) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Available Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 36\n            }, this);\n          }\n        };\n\n        const checkCollectedId = id => {\n          if (id == 4) {\n            return /*#__PURE__*/_jsxDEV(IntervalCollectModal, {\n              showCollectModal: showCollectModal,\n              setShowCollectModal: setShowCollectModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n                onClick: () => {\n                  console.log(id);\n                  deleteInterval(id);\n                  setTimeout(function () {\n                    window.location.reload();\n                  }, 2);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [/*#__PURE__*/_jsxDEV(IntervalDataButton, {\n                onClick: () => {\n                  //console.log(id);\n                  openCollectModal(id);\n                },\n                children: \"Collect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 29\n              }, this), checkCollectedId(), checkWait(), checkThroughput(), checkAvailable(), checkDown()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 51\n              }, this), \" \", val.startingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 47\n              }, this), val.endingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AttractionIntervals, \"1q0KpsDBwCpy4aVK+dJyKhxOJBY=\");\n\n_c17 = AttractionIntervals;\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"RideName\");\n$RefreshReg$(_c3, \"PauseButton\");\n$RefreshReg$(_c4, \"EndButton\");\n$RefreshReg$(_c5, \"AddIntervalsBorder\");\n$RefreshReg$(_c6, \"IntervalCard\");\n$RefreshReg$(_c7, \"CardTime\");\n$RefreshReg$(_c8, \"CardCollect\");\n$RefreshReg$(_c9, \"CardStarting\");\n$RefreshReg$(_c10, \"CardEnding\");\n$RefreshReg$(_c11, \"Image\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"RideSelect\");\n$RefreshReg$(_c14, \"RideButton\");\n$RefreshReg$(_c15, \"DeleteButton\");\n$RefreshReg$(_c16, \"IntervalDataButton\");\n$RefreshReg$(_c17, \"AttractionIntervals\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","MdClose","IntervalCollectModal","CallsBorder","div","RideName","PauseButton","button","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","Image","img","Button","RideSelect","select","RideButton","DeleteButton","IntervalDataButton","AttractionIntervals","props","showModal","setShowModal","showCollectModal","setShowCollectModal","openModal","prev","openCollectModal","ride_name","get","then","res","console","log","catch","err","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","intervalList","setIntervalList","rideSelect","setRideSelect","attractionList","setAttractionList","GetAttractions","data","GetIntervals","deleteInterval","delete","window","addEventListener","e","target","value","map","val","key","id","checkWait","checkedWaitTime","checkThroughput","checkedThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown","checkCollectedId","setTimeout","location","reload"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\nimport { IntervalCollectModal } from './IntervalCollectModal';\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n`\n\nconst IntervalDataButton = styled.button`\nborder: none;\npadding: none;\n\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const [showCollectModal, setShowCollectModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n    const openCollectModal = (ride_name) => {\n        setShowCollectModal(prev => !prev);\n        Axios.get(`http://localhost:3001/getInterval/:${ride_name}`).then(res => {\n            console.log(ride_name)\n        }).catch(err => console.log(err));\n    }\n        //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n\n          //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n         //recieve data from backend to display\n         const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = () => {\n                        if (val.checkedWaitTime == true){\n                            return <li>Wait Time</li>;\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                            return <li>Throughtput</li>\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return <li>Available Seats</li>\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return <li>Available Down</li>\n                        }\n                    }\n                    const checkCollectedId = (id) => {\n                        if(id == 4)\n                        {\n                             return <IntervalCollectModal showCollectModal={showCollectModal} setShowCollectModal={setShowCollectModal}/>\n                        }\n                    }\n                        return (\n                            <>\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                            <IntervalDataButton onClick={() =>{\n                                //console.log(id);\n                                openCollectModal(id)\n                            }\n                            }>Collect</IntervalDataButton>\n                            {checkCollectedId()}\n\n                                {/* <IntervalDataButton onClick={() => {console.log(id); collectData(id);\n                                    setTimeout(() => {\n                                        window.location.reload();\n                                    }, 2);\n                                }}>Collect</IntervalDataButton> */}\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                </CardCollect>\n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals"]},"metadata":{},"sourceType":"module"}