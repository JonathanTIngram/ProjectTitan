{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/FavoriteBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { saveLists } from './ChartLine';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n`;\n_c = SideNav;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n_c2 = FavButton;\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n_c3 = CustomExport;\n\nconst FavoriteBar = () => {\n  _s();\n\n  // const editParkInterval = (rides, stats) =>{\n  //   Axios.put('http://localhost:3001/editParkInterval', {\n  //       rides: rides,\n  //       stats: stats\n  //       }).then( () => {\n  //       console.log(\"Successfully sent to port 3001\");\n  //   });\n  // };\n  const [showModal, setShowModal] = useState(false);\n  const [graphData, setGraphData] = useState();\n  var [selectedFav, setSelectedFav] = useState();\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const sendFavGraph = (rides, stats, id) => {\n    Axios.post('http://localhost:3001/favGraph', {\n      rides: rides,\n      stats: stats,\n      id: id\n    }).then(() => {\n      alert('successful insert');\n    });\n  };\n\n  var getFavGraph = (rides, stats, id) => {\n    Axios.get('http://localhost:3001/getFavGraph').then(res => {\n      setSelectedFav(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const updateFavGraph = (rides, stats, id) => {\n    Axios.post('http://localhost:3001/updateFavGraph', {\n      rides: rides,\n      stats: stats,\n      id: id\n    }).then(() => {\n      alert('successful update of ' + rides + ' (' + stats + ')' + ' to ' + id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', getFavGraph());\n      }\n    }, []), /*#__PURE__*/_jsxDEV(SideNav, {\n      children: [/*#__PURE__*/_jsxDEV(FavButton, {\n        onClick: () => {\n          setGraphData(saveLists());\n          console.log(saveLists());\n          getFavGraph();\n\n          if (selectedFav.id == 1) {\n            updateFavGraph(saveLists().rideList, saveLists().statList, 1);\n            sendFavGraph(saveLists().rideList, saveLists().statList, 1);\n          } else {\n            sendFavGraph(saveLists().rideList, saveLists().statList, 1);\n          }\n\n          console.log(`Rides from backend : ${selectedFav.rides}`);\n          console.log(`Stats from backend : ${selectedFav.stats}`);\n          console.log(`\"Id from backend : ${selectedFav.id}`);\n        },\n        children: \"My Favorite1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(FavButton, {\n        children: \"My Favorite2 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(FavButton, {\n        children: \"My Favorite3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(FavButton, {\n        children: \"My Favorite4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(CustomExport, {\n        children: \"Custom Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FavoriteBar, \"KvmMmzmQ5szSDB6l9VjCt1fr+4s=\");\n\n_c4 = FavoriteBar;\nexport default FavoriteBar;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SideNav\");\n$RefreshReg$(_c2, \"FavButton\");\n$RefreshReg$(_c3, \"CustomExport\");\n$RefreshReg$(_c4, \"FavoriteBar\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Graph/FavoriteBar.js"],"names":["React","useState","useEffect","styled","saveLists","Axios","Button","button","SideNav","div","FavButton","CustomExport","FavoriteBar","showModal","setShowModal","graphData","setGraphData","selectedFav","setSelectedFav","openModal","prev","sendFavGraph","rides","stats","id","post","then","alert","getFavGraph","get","res","data","catch","err","console","log","updateFavGraph","window","addEventListener","rideList","statList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport { saveLists } from './ChartLine';\nimport Axios from 'axios';\n\n\nconst Button = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const SideNav = styled.div`\nbackground: transparent;\nborder-bottom: 2px solid black;\nposition: absolute;\nright: 0px;\nwidth: 20%;\nmargin: 37px 0px;\n`;\nexport const FavButton = styled.button`\ndisplay: block;\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n\nexport const CustomExport = styled.button`\nwidth: 100%;\nheight: 45px;\nfont-size: 16px;\nborder-top: 2px solid black;\nborder-bottom: 1px solid black;\nborder-left: 2px solid black;\ntext-align: center;\n`;\n\n\n\nconst FavoriteBar = () => {\n\n  // const editParkInterval = (rides, stats) =>{\n  //   Axios.put('http://localhost:3001/editParkInterval', {\n\n  //       rides: rides,\n  //       stats: stats\n                    \n  //       }).then( () => {\n  //       console.log(\"Successfully sent to port 3001\");\n  //   });\n  // };\n    const [showModal, setShowModal] = useState(false);\n    const [graphData, setGraphData] = useState();\n\n    var [selectedFav, setSelectedFav] = useState();\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n\n\n    const sendFavGraph = (rides, stats, id) => {\n      Axios.post('http://localhost:3001/favGraph', {\n\n        rides: rides,\n        stats: stats,\n        id: id\n                    \n        }).then(() =>{\n        alert('successful insert');\n\n    })\n    }\n\n    var getFavGraph = (rides, stats, id) => {\n\n          Axios.get('http://localhost:3001/getFavGraph').then(res => {\n          setSelectedFav(res.data);\n          }).catch(err => console.log(err));\n    }\n\n    const updateFavGraph = (rides, stats, id) => {\n      Axios.post('http://localhost:3001/updateFavGraph', {\n        rides: rides,\n        stats: stats,\n        id: id\n        }).then(() =>{\n        alert('successful update of ' + rides + ' (' + stats + ')' + ' to ' + id);\n\n      })\n    }\n\n    return (\n        <>\n\n\n          {useEffect(() => {\n              {window.addEventListener('load', getFavGraph())}\n\n          }, [])}\n        <SideNav>\n\n           <FavButton onClick={() => {\n                setGraphData(saveLists());\n\n                console.log(saveLists())\n\n\n\n                getFavGraph();\n\n                if(selectedFav.id == 1){\n                  updateFavGraph(saveLists().rideList, saveLists().statList, 1);\n                  sendFavGraph(saveLists().rideList, saveLists().statList, 1);\n                }\n\n                else {\n                  sendFavGraph(saveLists().rideList, saveLists().statList, 1);\n                }\n\n\n                console.log(`Rides from backend : ${selectedFav.rides}`);\n                console.log(`Stats from backend : ${selectedFav.stats}`)\n                console.log(`\"Id from backend : ${selectedFav.id}`)\n                \n               \n      }}>My Favorite1</FavButton>\n           <FavButton>My Favorite2 </FavButton>\n           <FavButton>My Favorite3</FavButton>\n           <FavButton>My Favorite4</FavButton>\n           <CustomExport>Custom Export</CustomExport>\n        </SideNav>\n        </>\n    )\n\n}\n\nexport default FavoriteBar"]},"metadata":{},"sourceType":"module"}