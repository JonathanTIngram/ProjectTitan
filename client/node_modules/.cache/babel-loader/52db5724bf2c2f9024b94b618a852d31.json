{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/editpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios';\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n_c = Nav;\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c2 = NavMenu;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n_c3 = NavLink;\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\n_c4 = Upload;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n_c5 = OuterBorder;\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n_c6 = CreateBar;\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n_c7 = EditBorder;\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n_c8 = InfoBar;\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n_c9 = SafetyInfo;\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n_c10 = PhoneInfo;\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n_c11 = ReportInfo;\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n_c12 = Box;\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`;\n_c13 = EditButton;\nconst RideSelect = styled.select`\n    text-align: right;\n`;\nconst styleGray = {\n  backgroundColor: '#AFAFAF'\n};\nexport default function EditPage(props) {\n  _s();\n\n  //states\n  const [ride_name, setRideName] = useState('');\n  var [dailyOpening, setDailyOpening] = useState('');\n  var [dailyClosing, setDailyClosing] = useState('');\n  var [theoryCapacity, setTheoryCapacity] = useState('');\n  var [targetCapacity, setTargetCapacity] = useState('');\n  var [minVehicles, setMinVehicles] = useState('');\n  const [maxVehicles, setMaxVehicles] = useState('');\n  const [maxSeats, setMaxSeats] = useState('');\n  const [minStaff, setMinStaff] = useState('');\n  const [maxStaff, setMaxStaff] = useState('');\n  const [parkSection, setParkSection] = useState('');\n  const [weatherCode, setWeatherCode] = useState('');\n  const [rideType, setRideType] = useState(''); //for the drop down menu\n\n  const [rideSelect, setRideSelect] = useState(''); //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //send the attraction data to the backend running on port 3001\n  //specifically /addAttraction\n  //recieve data from backend to display\n\n  const getAttractions = () => {\n    Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n    }).catch(err => console.log(err));\n  };\n\n  const editAttraction = () => {\n    Axios.put('http://localhost:3001/editAttraction', {\n      ride_name: ride_name,\n      dailyOpening: dailyOpening,\n      dailyClosing: dailyClosing,\n      theoryCapacity: theoryCapacity,\n      targetCapacity: targetCapacity,\n      minVehicles: minVehicles,\n      maxVehicles: maxVehicles,\n      maxSeats: maxSeats,\n      minStaff: minStaff,\n      maxStaff: maxStaff,\n      parkSection: parkSection,\n      weatherCode: weatherCode,\n      rideType: rideType,\n      rideSelect: setRideSelect\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n    window.location.href = '/newAttraction';\n  };\n\n  var emptyBoxArray = [];\n\n  const checkEmpty = () => {\n    var empty = false;\n\n    if (dailyOpening == '') {\n      alert(\"Daily Opening is empty\");\n      emptyBoxArray.push('dailyOpeningID');\n      empty = true;\n    }\n\n    if (dailyClosing == '') {\n      alert(\"Daily Closing is empty\");\n      emptyBoxArray.push('dailyClosingID');\n      empty = true;\n    }\n\n    if (theoryCapacity == '') {\n      alert(\"Theoretical Capacity is empty\");\n      emptyBoxArray.push('theoryCapacityID');\n      empty = true;\n    }\n\n    if (targetCapacity == '') {\n      alert(\"Target Capacity is empty\");\n      emptyBoxArray.push('targetCapacityID');\n      empty = true;\n    }\n\n    if (maxVehicles == '') {\n      alert(\"Max Vehicles is empty\");\n      emptyBoxArray.push('maxVehiclesID');\n      empty = true;\n    }\n\n    if (minVehicles == '') {\n      alert(\"Min Vehicles is empty\");\n      emptyBoxArray.push('minVehiclesID');\n      empty = true;\n    }\n\n    if (maxSeats == '') {\n      alert(\"Max seats is empty\");\n      emptyBoxArray.push('maxSeatsID');\n      empty = true;\n    }\n\n    if (maxStaff == '') {\n      alert(\"Max Staff is empty\");\n      emptyBoxArray.push('maxStaffID');\n      empty = true;\n    }\n\n    if (minStaff == '') {\n      alert(\"Min Staff is empty\");\n      emptyBoxArray.push('minStaffID');\n      empty = true;\n    }\n\n    if (parkSection == '') {\n      alert(\"Park Section is empty\");\n      emptyBoxArray.push('parkSectionID');\n      empty = true;\n    }\n\n    if (weatherCode == '') {\n      alert(\"Weather Code is empty\");\n      emptyBoxArray.push('weatherCodeID');\n      empty = true;\n    }\n\n    if (rideType == '') {\n      alert(\"Ride Type is empty\");\n      emptyBoxArray.push('rideTypeID');\n      empty = true;\n    }\n\n    return empty;\n  };\n\n  const changeInputColor = emptyBoxArray => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(element);\n      document.getElementById(element).style.backgroundColor = \"pink\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }, this), useEffect(() => {\n      {\n        window.addEventListener('load', getAttractions());\n      }\n      {\n        window.addEventListener('load', setRideSelect(props.location.ride_name));\n      }\n      {\n        window.addEventListener('load', setRideName(props.location.ride_name));\n      }\n    }), /*#__PURE__*/_jsxDEV(OuterBorder, {\n      children: [/*#__PURE__*/_jsxDEV(CreateBar, {\n        children: [\" Edit an Attraction\", /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(NavMenu, {\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/EditPage/Block\",\n              activeStyle: true,\n              children: \"Block Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/EditPage/Danger\",\n              activeStyle: true,\n              children: \"Danger Areas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/EditPage/Restrict\",\n              activeStyle: true,\n              children: \"Restricted Areas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditBorder, {\n        children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n          children: \" Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: styleGray,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" \", props.location.ride_name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Daily Opening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  if (rideSelect == val.ride_name) {\n                    dailyOpening = val.dailyOpening;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        id: \"dailyOpeningID\",\n                        name: \"dailyOpening\",\n                        placeholder: dailyOpening,\n                        onInput: e => {\n                          e.target.value = e.target.value + ':00';\n                          console.log(e.target.value);\n                          setDailyOpening(e.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Daily Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var dailyClosing;\n\n                  if (rideSelect == val.ride_name) {\n                    dailyClosing = val.dailyClosing;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        id: \"dailyClosingID\",\n                        name: \"dailyClosing\",\n                        placeHolder: dailyClosing,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setDailyClosing(dailyClosing);\n                          } else {\n                            setDailyClosing(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Theoretical Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var theoryCapacity;\n\n                  if (rideSelect == val.ride_name) {\n                    theoryCapacity = val.theoryCapacity;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"theoryCapacityID\",\n                        name: \"theoryCapacity\",\n                        placeHolder: theoryCapacity,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setTheoryCapacity(theoryCapacity);\n                          } else {\n                            setTheoryCapacity(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Target Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var targetCapacity;\n\n                  if (rideSelect == val.ride_name) {\n                    targetCapacity = val.targetCapacity;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"targetCapacityID\",\n                        name: \"targetCapacity\",\n                        placeHolder: targetCapacity,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setTargetCapacity(targetCapacity);\n                          } else {\n                            setTargetCapacity(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Max Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var maxVehicles;\n\n                  if (rideSelect == val.ride_name) {\n                    maxVehicles = val.maxVehicles;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"maxVehiclesID\",\n                        name: \"maxVehicles\",\n                        placeHolder: maxVehicles,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setMaxVehicles(maxVehicles);\n                          } else {\n                            setMaxVehicles(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 472,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Min Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var minVehicles;\n\n                  if (rideSelect == val.ride_name) {\n                    minVehicles = val.minVehicles;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"minVehiclesID\",\n                        name: \"minVehicle\",\n                        placeHolder: minVehicles,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setMinVehicles(minVehicles);\n                          } else {\n                            setMinVehicles(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Seats per Vehicle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var maxSeats;\n\n                  if (rideSelect == val.ride_name) {\n                    maxSeats = val.maxSeats;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"maxSeatsID\",\n                        name: \"maxSeats\",\n                        placeHolder: maxSeats,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setMaxSeats(maxSeats);\n                          } else {\n                            setMaxSeats(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Max Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var maxStaff;\n\n                  if (rideSelect == val.ride_name) {\n                    maxStaff = val.maxStaff;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"maxStaffID\",\n                        name: \"maxStaff\",\n                        placeHolder: maxStaff,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setMaxStaff(maxStaff);\n                          } else {\n                            setMaxStaff(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Min Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var minStaff;\n\n                  if (rideSelect == val.ride_name) {\n                    minStaff = val.minStaff;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"minStaffID\",\n                        name: \"minStaff\",\n                        placeHolder: minStaff,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setMinStaff(minStaff);\n                          } else {\n                            setMinStaff(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 580,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Park Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var parkSection;\n\n                  if (rideSelect == val.ride_name) {\n                    parkSection = val.parkSection;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"parkSectionID\",\n                        name: \"parkSection\",\n                        placeHolder: parkSection,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setParkSection(parkSection);\n                          } else {\n                            setParkSection(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 607,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Weather Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var weatherCode;\n\n                  if (rideSelect == val.ride_name) {\n                    weatherCode = val.weatherCode;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"weatherCodeID\",\n                        name: \"weatherCode\",\n                        placeHolder: weatherCode,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setWeatherCode(weatherCode);\n                          } else {\n                            setWeatherCode(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: attractionList.map((val, key) => {\n                  var rideType;\n\n                  if (rideSelect == val.ride_name) {\n                    rideType = val.rideType;\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: \"rideTypeID\",\n                        name: \"rideType\",\n                        placeHolder: rideType,\n                        onChange: e => {\n                          if (!e.target.value) {\n                            setRideType(rideType);\n                          } else {\n                            setRideType(e.target.value);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n          onClick: () => {\n            window.alert(`The ride: ${ride_name} has been edited`);\n            editAttraction();\n          },\n          children: \"Edit Attraction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReportInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [\"Required \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: \"  Documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Operations Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Turnstile Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"Lockout Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"display-4 text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fab fa-react\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 7\n          }, this), \" Titan Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 5\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SafetyInfo, {\n        children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n          children: \"Safety Critical Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: styleGray,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Weather Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Alpha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Max Operating Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"34 MPH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Min Operating Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"41 F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Power Redundancy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"On-Site\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Number of Gates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInfo, {\n        children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n          children: \"Phone Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: styleGray,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3152\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3153\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tertiary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3154\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditPage, \"hA3/Xsu5dnN5UDs6dnN6xQIjkt8=\");\n\n_c14 = EditPage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"NavMenu\");\n$RefreshReg$(_c3, \"NavLink\");\n$RefreshReg$(_c4, \"Upload\");\n$RefreshReg$(_c5, \"OuterBorder\");\n$RefreshReg$(_c6, \"CreateBar\");\n$RefreshReg$(_c7, \"EditBorder\");\n$RefreshReg$(_c8, \"InfoBar\");\n$RefreshReg$(_c9, \"SafetyInfo\");\n$RefreshReg$(_c10, \"PhoneInfo\");\n$RefreshReg$(_c11, \"ReportInfo\");\n$RefreshReg$(_c12, \"Box\");\n$RefreshReg$(_c13, \"EditButton\");\n$RefreshReg$(_c14, \"EditPage\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/pages/editpage.js"],"names":["React","useState","useEffect","styled","Axios","NavLink","Link","Navbar","Banner","Nav","nav","NavMenu","div","EditLink","Upload","OuterBorder","CreateBar","EditBorder","InfoBar","SafetyInfo","PhoneInfo","ReportInfo","Box","EditButton","button","RideSelect","select","styleGray","backgroundColor","EditPage","props","ride_name","setRideName","dailyOpening","setDailyOpening","dailyClosing","setDailyClosing","theoryCapacity","setTheoryCapacity","targetCapacity","setTargetCapacity","minVehicles","setMinVehicles","maxVehicles","setMaxVehicles","maxSeats","setMaxSeats","minStaff","setMinStaff","maxStaff","setMaxStaff","parkSection","setParkSection","weatherCode","setWeatherCode","rideType","setRideType","rideSelect","setRideSelect","attractionList","setAttractionList","getAttractions","get","then","res","data","catch","err","console","log","editAttraction","put","alert","window","location","href","emptyBoxArray","checkEmpty","empty","push","changeInputColor","index","length","element","document","getElementById","style","addEventListener","map","val","key","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAO,IAAIC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;;AAEA,OAAO,MAAMC,GAAG,GAAGN,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;KAAMD,G;AAWb,OAAO,MAAME,OAAO,GAAGR,MAAM,CAACS,GAAI;AAClC;AACA;AACA,CAHO;MAAMD,O;AAIb,OAAO,MAAME,QAAQ,GAAGV,MAAM,CAACG,IAAD,CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO;AAeP,OAAO,MAAMD,OAAO,GAAGF,MAAM,CAACG,IAAD,CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;MAAMD,O;AAgBb,MAAMS,MAAM,GAAGX,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,M;AAQN,MAAMC,WAAW,GAAGZ,MAAM,CAACS,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMG,W;AAQN,MAAMC,SAAS,GAAGb,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMI,S;AASN,MAAMC,UAAU,GAAGd,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMO,U;AAQN,MAAMC,OAAO,GAAGf,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMM,O;AAWN,MAAMC,UAAU,GAAGhB,MAAM,CAACS,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMO,U;AAaN,MAAMC,SAAS,GAAGjB,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;OAAMQ,S;AAYN,MAAMC,UAAU,GAAGlB,MAAM,CAACS,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;OAAMS,U;AAcN,MAAMC,GAAG,GAAGnB,MAAM,CAACS,GAAI;AACvB;AACA;AACA;AACA,CAJA;OAAMU,G;AAMN,MAAMC,UAAU,GAAGpB,MAAM,CAACqB,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;OAAMD,U;AAQN,MAAME,UAAU,GAAGtB,MAAM,CAACuB,MAAO;AACjC;AACA,CAFA;AAIA,MAAMC,SAAS,GAAG;AAACC,EAAAA,eAAe,EAAG;AAAnB,CAAlB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAGpC;AACJ,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2B/B,QAAQ,CAAC,EAAD,CAAzC;AACA,MAAI,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAI,CAACkC,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAI,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAI,CAACsC,cAAD,EAAiBC,iBAAjB,IAAsCvC,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAI,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0C,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4C,QAAD,EAAWC,WAAX,IAA0B7C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8C,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgD,QAAD,EAAWC,WAAX,IAA0BjD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkD,WAAD,EAAcC,cAAd,IAAgCnD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoD,WAAD,EAAcC,cAAd,IAAgCrD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACsD,QAAD,EAAWC,WAAX,IAA0BvD,QAAQ,CAAC,EAAD,CAAxC,CAhBwC,CAqBxC;;AACA,QAAM,CAACwD,UAAD,EAAaC,aAAb,IAA8BzD,QAAQ,CAAC,EAAD,CAA5C,CAtBwC,CAwBxC;;AACA,QAAM,CAAC0D,cAAD,EAAiBC,iBAAjB,IAAsC3D,QAAQ,CAAC,EAAD,CAApD,CAzBwC,CA0BxC;AACA;AAEA;;AACA,QAAM4D,cAAc,GAAG,MAAM;AACvBzD,IAAAA,KAAK,CAAC0D,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAsDC,GAAG,IAAI;AAC7DJ,MAAAA,iBAAiB,CAACI,GAAG,CAACC,IAAL,CAAjB;AACA,aAAON,cAAP;AACC,KAHD,EAGGO,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAIC,GALP;;AAQA,QAAMG,cAAc,GAAG,MAAK;AAC1BlE,IAAAA,KAAK,CAACmE,GAAN,CAAU,sCAAV,EAAkD;AACpCxC,MAAAA,SAAS,EAAEA,SADyB;AAEpCE,MAAAA,YAAY,EAAEA,YAFsB;AAGpCE,MAAAA,YAAY,EAAEA,YAHsB;AAIpCE,MAAAA,cAAc,EAAEA,cAJoB;AAKpCE,MAAAA,cAAc,EAAEA,cALoB;AAMpCE,MAAAA,WAAW,EAAEA,WANuB;AAOpCE,MAAAA,WAAW,EAAEA,WAPuB;AAQpCE,MAAAA,QAAQ,EAAEA,QAR0B;AASpCE,MAAAA,QAAQ,EAAEA,QAT0B;AAUpCE,MAAAA,QAAQ,EAAEA,QAV0B;AAWpCE,MAAAA,WAAW,EAAEA,WAXuB;AAYpCE,MAAAA,WAAW,EAAEA,WAZuB;AAapCE,MAAAA,QAAQ,EAAEA,QAb0B;AAepCE,MAAAA,UAAU,EAAEC;AAfwB,KAAlD,EAiBiBK,IAjBjB,CAiBsB,MAAK;AACXS,MAAAA,KAAK,CAAC,mBAAD,CAAL;AAEH,KApBb,EAoBeT,IApBf,CAoBqB,MAAM;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,KAtBb;AAuBYI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,gBAArB;AACb,GAzBD;;AA2BA,MAAIC,aAAa,GAAG,EAApB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIC,KAAK,GAAG,KAAZ;;AAEA,QAAG7C,YAAY,IAAI,EAAnB,EAAuB;AACrBuC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,gBAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAG3C,YAAY,IAAI,EAAnB,EAAuB;AACrBqC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,gBAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGzC,cAAc,IAAI,EAArB,EAAyB;AACvBmC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,kBAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGvC,cAAc,IAAI,EAArB,EAAyB;AACvBiC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,kBAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGnC,WAAW,IAAI,EAAlB,EAAsB;AACpB6B,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,eAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGrC,WAAW,IAAI,EAAlB,EAAsB;AACpB+B,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,eAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGjC,QAAQ,IAAI,EAAf,EAAmB;AACjB2B,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,YAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAG7B,QAAQ,IAAI,EAAf,EAAmB;AACjBuB,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,YAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAG/B,QAAQ,IAAI,EAAf,EAAmB;AACjByB,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,YAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAG3B,WAAW,IAAI,EAAlB,EAAsB;AACpBqB,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,eAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGzB,WAAW,IAAI,EAAlB,EAAsB;AACpBmB,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,eAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAGvB,QAAQ,IAAI,EAAf,EAAmB;AACjBiB,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAI,MAAAA,aAAa,CAACG,IAAd,CAAmB,YAAnB;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,WAAOA,KAAP;AACD,GAhED;;AAiEA,QAAME,gBAAgB,GAAIJ,aAAD,IAAmB;AAC1C,SAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,aAAa,CAACM,MAA1C,EAAkDD,KAAK,EAAvD,EAA2D;AACzD,UAAIE,OAAO,GAAGP,aAAa,CAACK,KAAD,CAA3B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,EAAiCG,KAAjC,CAAuC1D,eAAvC,GAAyD,MAAzD;AACD;AACF,GAND;;AAOA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFA,EAIC1B,SAAS,CAAC,MAAK;AACd;AAACuE,QAAAA,MAAM,CAACc,gBAAP,CAAwB,MAAxB,EAAgC1B,cAAc,EAA9C;AAAkD;AACnD;AAACY,QAAAA,MAAM,CAACc,gBAAP,CAAwB,MAAxB,EAAgC7B,aAAa,CAAC5B,KAAK,CAAC4C,QAAN,CAAe3C,SAAhB,CAA7C;AAAyE;AAC1E;AAAC0C,QAAAA,MAAM,CAACc,gBAAP,CAAwB,MAAxB,EAAgCvD,WAAW,CAACF,KAAK,CAAC4C,QAAN,CAAe3C,SAAhB,CAA3C;AAAuE;AAEzE,KALS,CAJV,eAUA,QAAC,WAAD;AAAA,8BACA,QAAC,SAAD;AAAA,uDACM,QAAC,GAAD;AAAA,iCACD,QAAC,OAAD;AAAA,oCACI,QAAC,OAAD;AAAS,cAAA,EAAE,EAAC,iBAAZ;AAA8B,cAAA,WAAW,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,OAAD;AAAS,cAAA,EAAE,EAAC,kBAAZ;AAA+B,cAAA,WAAW,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI,QAAC,OAAD;AAAS,cAAA,EAAE,EAAC,oBAAZ;AAAiC,cAAA,WAAW,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,gBADN;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAiBA,QAAC,UAAD;AAAA,gCAEA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAMA;AAAO,UAAA,SAAS,EAAC,oCAAjB;AAAA,kCACI;AAAA,mCACE;AAAI,cAAA,KAAK,EAAIJ,SAAb;AAAA,sCAEE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,oCAEE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,uCAGgB;AAAA,yCACA;AAAA,oCAASG,KAAK,CAAC4C,QAAN,CAAe3C,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHhB;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAiBE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAGK4B,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEhC,sBAAIjC,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BE,oBAAAA,YAAY,GAAGwD,GAAG,CAACxD,YAAnB;AAEA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,gBAAtB;AAAuC,wBAAA,IAAI,EAAC,cAA5C;AAA2D,wBAAA,WAAW,EAAEA,YAAxE;AAAsF,wBAAA,OAAO,EAAG0D,CAAD,IAAO;AACtGA,0BAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBF,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,KAAlC;AACAzB,0BAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAC,CAACC,MAAF,CAASC,KAArB;AAGA3D,0BAAAA,eAAe,CAACyD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACC;AAND;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAYH;AACA,iBAlBF;AAHL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,eA6CE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,sBAAIvD,YAAJ;;AACA,sBAAIsB,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BI,oBAAAA,YAAY,GAAGsD,GAAG,CAACtD,YAAnB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,gBAAtB;AAAuC,wBAAA,IAAI,EAAC,cAA5C;AAA2D,wBAAA,WAAW,EAAEA,YAAxE;AAAsF,wBAAA,QAAQ,EAAGwD,CAAD,IAAO;AACrG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBzD,4BAAAA,eAAe,CAACD,YAAD,CAAf;AACD,2BAFD,MAGI;AACFC,4BAAAA,eAAe,CAACuD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACJ,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7CF,eAwEE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxB,sBAAIrD,cAAJ;;AACA,sBAAIoB,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BM,oBAAAA,cAAc,GAAGoD,GAAG,CAACpD,cAArB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,kBAAtB;AAAyC,wBAAA,IAAI,EAAC,gBAA9C;AAA+D,wBAAA,WAAW,EAAEA,cAA5E;AAA4F,wBAAA,QAAQ,EAAGsD,CAAD,IAAO;AAC3G,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBvD,4BAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,2BAFD,MAGI;AACFC,4BAAAA,iBAAiB,CAACqD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBA;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxEF,eAmGE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEGlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxB,sBAAInD,cAAJ;;AACA,sBAAIkB,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BQ,oBAAAA,cAAc,GAAGkD,GAAG,CAAClD,cAArB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,kBAAtB;AAAyC,wBAAA,IAAI,EAAC,gBAA9C;AAA+D,wBAAA,WAAW,EAAEA,cAA5E;AAA4F,wBAAA,QAAQ,EAAGoD,CAAD,IAAO;AACzG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBrD,4BAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,2BAFD,MAGI;AACFC,4BAAAA,iBAAiB,CAACmD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD;AACF;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACR,iBAlBF;AAFH;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnGF,eA8HE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAI/C,WAAJ;;AACA,sBAAIc,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BY,oBAAAA,WAAW,GAAG8C,GAAG,CAAC9C,WAAlB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,eAAtB;AAAsC,wBAAA,IAAI,EAAC,aAA3C;AAAyD,wBAAA,WAAW,EAAEA,WAAtE;AAAmF,wBAAA,QAAQ,EAAGgD,CAAD,IAAO;AAClG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBjD,4BAAAA,cAAc,CAACD,WAAD,CAAd;AACD,2BAFD,MAGI;AACFC,4BAAAA,cAAc,CAAC+C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9HF,eAyJE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAIjD,WAAJ;;AACA,sBAAIgB,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BU,oBAAAA,WAAW,GAAGgD,GAAG,CAAChD,WAAlB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,eAAtB;AAAsC,wBAAA,IAAI,EAAC,YAA3C;AAAwD,wBAAA,WAAW,EAAEA,WAArE;AAAkF,wBAAA,QAAQ,EAAGkD,CAAD,IAAO;AACjG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBnD,4BAAAA,cAAc,CAACD,WAAD,CAAd;AACD,2BAFD,MAGI;AACFC,4BAAAA,cAAc,CAACiD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzJF,eAoLE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAI7C,QAAJ;;AACA,sBAAIY,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5Bc,oBAAAA,QAAQ,GAAG4C,GAAG,CAAC5C,QAAf;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,YAAtB;AAAmC,wBAAA,IAAI,EAAC,UAAxC;AAAmD,wBAAA,WAAW,EAAEA,QAAhE;AAA0E,wBAAA,QAAQ,EAAG8C,CAAD,IAAO;AACzF,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjB/C,4BAAAA,WAAW,CAACD,QAAD,CAAX;AACD,2BAFD,MAGI;AACFC,4BAAAA,WAAW,CAAC6C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApLF,eA+ME;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAIzC,QAAJ;;AACA,sBAAIQ,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BkB,oBAAAA,QAAQ,GAAGwC,GAAG,CAACxC,QAAf;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,YAAtB;AAAmC,wBAAA,IAAI,EAAC,UAAxC;AAAmD,wBAAA,WAAW,EAAEA,QAAhE;AAA0E,wBAAA,QAAQ,EAAG0C,CAAD,IAAO;AACzF,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjB3C,4BAAAA,WAAW,CAACD,QAAD,CAAX;AACD,2BAFD,MAGI;AACFC,4BAAAA,WAAW,CAACyC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/MF,eA0OE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAI3C,QAAJ;;AACA,sBAAIU,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BgB,oBAAAA,QAAQ,GAAG0C,GAAG,CAAC1C,QAAf;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,YAAtB;AAAmC,wBAAA,IAAI,EAAC,UAAxC;AAAmD,wBAAA,WAAW,EAAEA,QAAhE;AAA0E,wBAAA,QAAQ,EAAG4C,CAAD,IAAO;AACzF,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjB7C,4BAAAA,WAAW,CAACD,QAAD,CAAX;AACD,2BAFD,MAGI;AACFC,4BAAAA,WAAW,CAAC2C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1OF,eAqQE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAIvC,WAAJ;;AACA,sBAAIM,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BoB,oBAAAA,WAAW,GAAGsC,GAAG,CAACtC,WAAlB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,eAAtB;AAAsC,wBAAA,IAAI,EAAC,aAA3C;AAAyD,wBAAA,WAAW,EAAEA,WAAtE;AAAmF,wBAAA,QAAQ,EAAGwC,CAAD,IAAO;AAClG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBzC,4BAAAA,cAAc,CAACD,WAAD,CAAd;AACD,2BAFD,MAGI;AACFC,4BAAAA,cAAc,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArQF,eAgSE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAIrC,WAAJ;;AACA,sBAAII,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BsB,oBAAAA,WAAW,GAAGoC,GAAG,CAACpC,WAAlB;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,eAAtB;AAAsC,wBAAA,IAAI,EAAC,aAA3C;AAAyD,wBAAA,WAAW,EAAEA,WAAtE;AAAmF,wBAAA,QAAQ,EAAGsC,CAAD,IAAO;AAClG,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBvC,4BAAAA,cAAc,CAACD,WAAD,CAAd;AACD,2BAFD,MAGI;AACFC,4BAAAA,cAAc,CAACqC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhSF,eA2TE;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAEKlC,cAAc,CAAC6B,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,sBAAInC,QAAJ;;AACA,sBAAIE,UAAU,IAAIgC,GAAG,CAAC1D,SAAtB,EAAgC;AAC5BwB,oBAAAA,QAAQ,GAAGkC,GAAG,CAAClC,QAAf;AACA,wCACE;AAAA,6CACE;AAAO,wBAAA,IAAI,EAAC,MAAZ;AAAmB,wBAAA,EAAE,EAAC,YAAtB;AAAmC,wBAAA,IAAI,EAAC,UAAxC;AAAmD,wBAAA,WAAW,EAAEA,QAAhE;AAA0E,wBAAA,QAAQ,EAAGoC,CAAD,IAAO;AACzF,8BAAG,CAACA,CAAC,CAACC,MAAF,CAASC,KAAb,EAAmB;AACjBrC,4BAAAA,WAAW,CAACD,QAAD,CAAX;AACD,2BAFD,MAGI;AACFC,4BAAAA,WAAW,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AACA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAaH;AACV,iBAlBF;AAFL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3TF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,eAyWI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM;AAErBpB,YAAAA,MAAM,CAACD,KAAP,CAAc,aAAYzC,SAAU,kBAApC;AACAuC,YAAAA,cAAc;AACnB,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzWJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,eAiYA,QAAC,UAAD;AAAA,gCACI,QAAC,GAAD;AAAA,+CACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjYA,eAyYA,QAAC,MAAD;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzYA,eA4YE,QAAC,UAAD;AAAA,gCACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,SAAS,EAAC,oCAAjB;AAAA,kCACE;AAAA,mCACE;AAAI,cAAA,KAAK,EAAI3C,SAAb;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAWE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,eAgBE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAqBE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5YF,eAibA,QAAC,SAAD;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,oCAAjB;AAAA,kCACE;AAAA,mCACE;AAAI,cAAA,KAAK,EAAIA,SAAb;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF,eAME;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF,eAME;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eAuBE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF,eAME;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA,kBADJ;AA8eC;;GAxnBuBE,Q;;OAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport { NavLink as Link } from 'react-router-dom';\nimport Navbar from '../components/General/Navbar';\nimport Banner from '../components/General/Bannerbar';\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 3px;\n  display: flex;\n  position: absolute;\n  top: 3%;\n  right: 7%;\n  font-size: 15px;\n  font-family: \"Lucida Console\", monospace;\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const EditLink = styled(Link)`\n  color: black;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: black;\n  border-bottom: 25px solid lightgray;\n  border-right: 10px solid transparent;\n  display: block;\n  margin: 0 -0.3%;\n  align-items: center;\n  text-decoration: none;\n  padding: 2px;\n  height: 100%;\n  cursor: default;\n  &.active {\n    color: black;\n  }\n`;\n\nconst Upload = styled.div`\n    border: 0px solid;   \n    height: 54%;\n    width: 43%;\n    position: absolute;\n    top: 6%;\n    right: 0%;\n`;\nconst OuterBorder = styled.div`\n  width: 100%;\n  height: 685px;\n  position: absolute;\n  margin: 13px 0px;\n  border: solid 2px;\n`;\n\nconst CreateBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  width: 100%;\n  height: 6%;\n  padding: 6px;\n  border-bottom: 2px solid;\n  font-size: 22px;\n`;\n\nconst EditBorder = styled.nav`\n  width: 40%;\n  height: 590px;\n  font-family: 'Arial', sans-serif;\n  font-size: 18px;\n  overflow: scroll;\n`;\n\nconst InfoBar = styled.div`\n  font-family: \"Lucida Console\", monospace;\n  font-size: 22px;\n  align-content: center;\n  border-bottom: 2px solid;\n  padding-left: 5%;\n  text-align: center;\n  border-right: 2px solid;\n  \n`;\n\nconst SafetyInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    position: absolute;\n    right: 30%;\n    bottom: 0%;\n    height: 41%;\n    width: 30%;\n    border: 2px solid;\n    overflow: scroll;\n`;\n\nconst PhoneInfo = styled.div`\n    font-family: 'Arial', sans-serif;\n    font-size: 19px;\n    text-align: center;\n    width: 30%;\n    height: 41%;\n    position: absolute;\n    left: 69.9%;\n    bottom: 0%;\n    border: 2px solid;\n`;\n\nconst ReportInfo = styled.div`\n    overflow: hidden;\n    border: 2px solid;\n    font-family: 'Arial', sans-serif;\n    font-size: 16px;\n    position: absolute;\n    padding: 5px;\n    text-align: center;\n    width: 17%;\n    height: 365px;\n    right: 43%;\n    top: 5.8%;\n`;\n\nconst Box = styled.div`\n    border-bottom: 2px solid;   \n    height: 14%;\n    margin-bottom: 4px;\n`;\n\nconst EditButton = styled.button`\n  padding-left: 40%;\n  padding-right: 40%;\n  margin-top: -500px;\n  width: 100%;\n  height: 8%;\n`\n\nconst RideSelect = styled.select`\n    text-align: right;\n`\n\nconst styleGray = {backgroundColor : '#AFAFAF'};\nexport default function EditPage(props) {\n  \n\n    //states\nconst [ride_name, setRideName] = useState('');\nvar [dailyOpening, setDailyOpening] = useState('');\nvar [dailyClosing, setDailyClosing] = useState('');\nvar [theoryCapacity, setTheoryCapacity] = useState('');\nvar [targetCapacity, setTargetCapacity] = useState('');\nvar [minVehicles, setMinVehicles] = useState('');\nconst [maxVehicles, setMaxVehicles] = useState('');\nconst [maxSeats, setMaxSeats] = useState('');\nconst [minStaff, setMinStaff] = useState('');\nconst [maxStaff, setMaxStaff] = useState('');\nconst [parkSection, setParkSection] = useState('');\nconst [weatherCode, setWeatherCode] = useState('');\nconst [rideType, setRideType] = useState('');\n\n\n\n\n//for the drop down menu\nconst [rideSelect, setRideSelect] = useState('');\n\n//state to get all attractions\nconst [attractionList, setAttractionList] = useState([]);\n//send the attraction data to the backend running on port 3001\n//specifically /addAttraction\n\n//recieve data from backend to display\nconst getAttractions = () => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n      setAttractionList(res.data);\n      return attractionList;\n      }).catch(err => console.log(err));\n      }\n\n\nconst editAttraction = () =>{\n  Axios.put('http://localhost:3001/editAttraction', {\n                ride_name: ride_name,\n                dailyOpening: dailyOpening,\n                dailyClosing: dailyClosing,\n                theoryCapacity: theoryCapacity,\n                targetCapacity: targetCapacity,\n                minVehicles: minVehicles,\n                maxVehicles: maxVehicles,\n                maxSeats: maxSeats,\n                minStaff: minStaff,\n                maxStaff: maxStaff,\n                parkSection: parkSection,\n                weatherCode: weatherCode,\n                rideType: rideType,\n\n                rideSelect: setRideSelect\n                \n                }).then(() =>{\n                  alert('successful insert');\n\n              }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n              });\n              window.location.href='/newAttraction';\n};\n\nvar emptyBoxArray = [];\nconst checkEmpty = () => {\n  var empty = false;\n\n  if(dailyOpening == '') {\n    alert(\"Daily Opening is empty\");\n    emptyBoxArray.push('dailyOpeningID');\n    empty = true;\n  }\n  if(dailyClosing == '') {\n    alert(\"Daily Closing is empty\");\n    emptyBoxArray.push('dailyClosingID');\n    empty = true;\n  }\n  if(theoryCapacity == '') {\n    alert(\"Theoretical Capacity is empty\");\n    emptyBoxArray.push('theoryCapacityID');\n    empty = true;\n  }\n  if(targetCapacity == '') {\n    alert(\"Target Capacity is empty\");\n    emptyBoxArray.push('targetCapacityID');\n    empty = true;\n  }\n  if(maxVehicles == '') {\n    alert(\"Max Vehicles is empty\");\n    emptyBoxArray.push('maxVehiclesID');\n    empty = true;\n  }\n  if(minVehicles == '') {\n    alert(\"Min Vehicles is empty\");\n    emptyBoxArray.push('minVehiclesID');\n    empty = true;\n  }\n  if(maxSeats == '') {\n    alert(\"Max seats is empty\");\n    emptyBoxArray.push('maxSeatsID');\n    empty = true;\n  }\n  if(maxStaff == '') {\n    alert(\"Max Staff is empty\");\n    emptyBoxArray.push('maxStaffID');\n    empty = true;\n  }\n  if(minStaff == '') {\n    alert(\"Min Staff is empty\");\n    emptyBoxArray.push('minStaffID');\n    empty = true;\n  }\n  if(parkSection == '') {\n    alert(\"Park Section is empty\");\n    emptyBoxArray.push('parkSectionID');\n    empty = true;\n  }\n  if(weatherCode == '') {\n    alert(\"Weather Code is empty\");\n    emptyBoxArray.push('weatherCodeID');\n    empty = true;\n  }\n  if(rideType == '') {\n    alert(\"Ride Type is empty\");\n    emptyBoxArray.push('rideTypeID');\n    empty = true;\n  }\n  return empty;\n}\nconst changeInputColor = (emptyBoxArray) => {\n  for (let index = 0; index < emptyBoxArray.length; index++) {\n    var element = emptyBoxArray[index];\n    console.log(element);\n    document.getElementById(element).style.backgroundColor = \"pink\";\n  }\n}\nreturn (\n    <>\n    <Navbar/>\n    <Banner/>\n    \n    {useEffect(() =>{\n      {window.addEventListener('load', getAttractions())}\n      {window.addEventListener('load', setRideSelect(props.location.ride_name))}\n      {window.addEventListener('load', setRideName(props.location.ride_name))}\n      \n    })}\n    <OuterBorder>\n    <CreateBar> Edit an Attraction\n          <Nav>\n         <NavMenu>\n             <NavLink to='/EditPage/Block' activeStyle>\n                 Block Section\n             </NavLink>\n             <NavLink to='/EditPage/Danger' activeStyle>\n                 Danger Areas\n             </NavLink>\n             <NavLink to='/EditPage/Restrict' activeStyle>\n                 Restricted Areas\n             </NavLink>\n             </NavMenu>\n    </Nav>\n    </CreateBar>\n  \n    <EditBorder>\n\n    <InfoBar> Basic Information</InfoBar>\n\n\n\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          <tr>\n          <td>Name</td>\n          <td>          \n\n              \n                          <> \n                          <label> {props.location.ride_name} </label>\n                          </>\n                    \n        \n\n\n          </td>\n          </tr>\n\n          <tr>\n          <td>Daily Opening</td>\n          <th> \n            \n              \n              {attractionList.map((val, key) => {\n\n                if (rideSelect == val.ride_name){\n                    dailyOpening = val.dailyOpening;\n\n                    return (\n                      <> \n                        <input type='time' id='dailyOpeningID' name='dailyOpening' placeholder={dailyOpening} onInput={(e) => {\n                        e.target.value = e.target.value + ':00'\n                        console.log(e.target.value)\n\n\n                        setDailyOpening(e.target.value);\n                        }}></input>  \n                        \n                      </>\n                      );\n                }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Daily Closing</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                    var dailyClosing;\n                    if (rideSelect == val.ride_name){\n                        dailyClosing = val.dailyClosing;\n                        return (\n                          <> \n                            <input type='time' id='dailyClosingID' name='dailyClosing' placeHolder={dailyClosing} onChange={(e) => {\n                              if(!e.target.value){\n                                setDailyClosing(dailyClosing);\n                              }\n                              else{\n                                setDailyClosing(e.target.value);\n                              }\n                              }}\n                            ></input>  \n                          </>\n                        );\n                    }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Theoretical Capacity</td>\n          <th> \n\n              {attractionList.map((val, key) => {\n                        var theoryCapacity;\n                        if (rideSelect == val.ride_name){\n                            theoryCapacity = val.theoryCapacity;\n                            return (\n                              <> \n                                <input type='text' id='theoryCapacityID' name='theoryCapacity' placeHolder={theoryCapacity} onChange={(e) => {\n                                  if(!e.target.value){\n                                    setTheoryCapacity(theoryCapacity);\n                                  }\n                                  else{\n                                    setTheoryCapacity(e.target.value);\n                                  }\n                                  }}\n                                ></input>  \n                              </>\n                            );\n                        }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Target Capacity</td>\n          <th> \n\n            {attractionList.map((val, key) => {\n                      var targetCapacity;\n                      if (rideSelect == val.ride_name){\n                          targetCapacity = val.targetCapacity;\n                          return (\n                            <> \n                              <input type='text' id='targetCapacityID' name='targetCapacity' placeHolder={targetCapacity} onChange={(e) => {\n                                  if(!e.target.value){\n                                    setTargetCapacity(targetCapacity);\n                                  }\n                                  else{\n                                    setTargetCapacity(e.target.value);\n                                  }\n                                }}\n                              ></input>  \n                            </>\n                          );\n                      }\n              })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxVehicles;\n                          if (rideSelect == val.ride_name){\n                              maxVehicles = val.maxVehicles;\n                              return (\n                                <> \n                                  <input type='text' id='maxVehiclesID' name='maxVehicles' placeHolder={maxVehicles} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setMaxVehicles(maxVehicles);\n                                    }\n                                    else{\n                                      setMaxVehicles(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Vehicles</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minVehicles;\n                          if (rideSelect == val.ride_name){\n                              minVehicles = val.minVehicles;\n                              return (\n                                <> \n                                  <input type='text' id='minVehiclesID' name='minVehicle' placeHolder={minVehicles} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setMinVehicles(minVehicles);\n                                    }\n                                    else{\n                                      setMinVehicles(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Seats per Vehicle</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxSeats;\n                          if (rideSelect == val.ride_name){\n                              maxSeats = val.maxSeats;\n                              return (\n                                <> \n                                  <input type='text' id='maxSeatsID' name='maxSeats' placeHolder={maxSeats} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setMaxSeats(maxSeats);\n                                    }\n                                    else{\n                                      setMaxSeats(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Max Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var maxStaff;\n                          if (rideSelect == val.ride_name){\n                              maxStaff = val.maxStaff;\n                              return (\n                                <> \n                                  <input type='text' id='maxStaffID' name='maxStaff' placeHolder={maxStaff} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setMaxStaff(maxStaff);\n                                    }\n                                    else{\n                                      setMaxStaff(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Min Employees</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var minStaff;\n                          if (rideSelect == val.ride_name){\n                              minStaff = val.minStaff;\n                              return (\n                                <> \n                                  <input type='text' id='minStaffID' name='minStaff' placeHolder={minStaff} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setMinStaff(minStaff);\n                                    }\n                                    else{\n                                      setMinStaff(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Park Section</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var parkSection;\n                          if (rideSelect == val.ride_name){\n                              parkSection = val.parkSection;\n                              return (\n                                <> \n                                  <input type='text' id='parkSectionID' name='parkSection' placeHolder={parkSection} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setParkSection(parkSection);\n                                    }\n                                    else{\n                                      setParkSection(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Weather Code</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var weatherCode;\n                          if (rideSelect == val.ride_name){\n                              weatherCode = val.weatherCode;\n                              return (\n                                <> \n                                  <input type='text' id='weatherCodeID' name='weatherCode' placeHolder={weatherCode} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setWeatherCode(weatherCode);\n                                    }\n                                    else{\n                                      setWeatherCode(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          <tr>\n          <td>Type</td>\n          <th>\n\n              {attractionList.map((val, key) => {\n                          var rideType;\n                          if (rideSelect == val.ride_name){\n                              rideType = val.rideType;\n                              return (\n                                <> \n                                  <input type='text' id='rideTypeID' name='rideType' placeHolder={rideType} onChange={(e) => {\n                                    if(!e.target.value){\n                                      setRideType(rideType);\n                                    }\n                                    else{\n                                      setRideType(e.target.value);\n                                    }\n                                    }}\n                                  ></input>  \n                                </>\n                              );\n                          }\n                })}\n\n          </th>\n          </tr>\n\n          </tbody>\n\n        \n\n        </table>\n        <EditButton onClick={() => { \n\n              window.alert(`The ride: ${ride_name} has been edited`);\n              editAttraction();\n        }}>Edit Attraction</EditButton>\n\n    </EditBorder>\n    <ReportInfo>\n        <Box> \n        Required <ul>  Documentation</ul> </Box>\n        <ul>Operations Report</ul>  \n        <ul>Turnstile Report</ul> \n        <ul>Lockout Report</ul>\n    </ReportInfo>\n\n    <Upload>  \n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> Titan Upload</h4> </Upload>\n      <SafetyInfo>\n      <InfoBar>Safety Critical Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Property</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Weather Code</td>\n            <td>Alpha</td>\n          </tr>\n\n          <tr>\n            <td>Max Operating Wind</td>\n            <td>34 MPH</td>\n          </tr>\n\n          <tr>\n            <td>Min Operating Temperature</td>\n            <td>41 F</td>\n          </tr>\n\n          <tr>\n            <td>Power Redundancy</td>\n            <td>On-Site</td>\n          </tr>\n\n          <tr>\n            <td>Number of Gates</td>\n            <td>11</td>\n          </tr>\n        </tbody>\n      </table>\n    </SafetyInfo>\n    <PhoneInfo>\n      <InfoBar>Phone Information</InfoBar>\n      <table className=\"table table-bordered table-striped\">\n        <thead>\n          <tr style = {styleGray}>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Number</th>\n            <th scope=\"col\">Out</th>\n            <th scope=\"col\">In</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Primary</td>\n            <td>3152</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Secondary</td>\n            <td>3153</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Tertiary</td>\n            <td>3154</td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n            <td>\n              <input type='checkbox'></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </PhoneInfo>\n    </OuterBorder>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}