{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js\";\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`;\n_c2 = RideName;\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c3 = PauseButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c4 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c5 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c6 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c7 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardCollect;\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c9 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c10 = CardEnding;\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`;\n_c11 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`;\n_c12 = Button;\nconst RideSelect = styled.select`\n    align: right;\n`;\n_c13 = RideSelect;\n\nclass AttractionIntervals extends Component {\n  render() {\n    var _s = $RefreshSig$();\n\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    }; //states\n\n\n    const [startingTime, setStartingTime] = useState('');\n    const [endingTime, setEndingTime] = useState('');\n    const [timeValue, setTime] = useState('');\n    const [typeState, setTypeState] = useState([]);\n    const [unitState, setUnitState] = useState(\"\");\n    const [intervalList, setIntervalList] = useState([]);\n    const [rideSelect, setRideSelect] = useState(''); //state to get all attractions\n\n    const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n\n    const GetAttractions = () => {\n      _s();\n\n      //console.log(res.data)\n      useEffect(() => {\n        Axios.get('http://localhost:3001/getAttraction').then(res => {\n          setAttractionList(res.data);\n        }).catch(err => console.log(err));\n      }, []);\n    };\n\n    _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n    const GetIntervals = () => {\n      Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n        console.log(rideSelect);\n        setIntervalList(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n        children: [/*#__PURE__*/_jsxDEV(RideName, {\n          children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(RideSelect, {\n            onChange: e => {\n              setRideSelect(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Attraction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), attractionList.map((val, key) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: val.ride_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              GetIntervals();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n          children: \" Pause Calls \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n          children: \" End Todays Calls \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n        children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: openModal,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n              src: plus,\n              Image: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 46\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n            showModal: showModal,\n            setShowModal: setShowModal,\n            ride_name: props.location.ride_name.ride\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), intervalList.map((val, key) => {\n          const checkWait = () => {\n            if (val.checkedWaitTime == true) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Wait Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 36\n              }, this);\n            }\n          };\n\n          const checkThroughput = () => {\n            if (val.checkedThroughput == true) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Throughtput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 36\n              }, this);\n            }\n          };\n\n          const checkAvailable = () => {\n            if (val.checkedAvailableSeats == true) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Available Seats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 36\n              }, this);\n            }\n          };\n\n          const checkDown = () => {\n            if (val.checkedAvailableDown == true) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Available Down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 36\n              }, this);\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n              children: [/*#__PURE__*/_jsxDEV(CardTime, {\n                children: [\"Every \", val.timeValue, \" Minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n                children: [\"Collect\", checkWait(), checkThroughput(), checkAvailable(), checkDown()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n                children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: \"At Park Opening\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 51\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: val.startingTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n                children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: \"At Park Closing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: val.endingTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"RideName\");\n$RefreshReg$(_c3, \"PauseButton\");\n$RefreshReg$(_c4, \"EndButton\");\n$RefreshReg$(_c5, \"AddIntervalsBorder\");\n$RefreshReg$(_c6, \"IntervalCard\");\n$RefreshReg$(_c7, \"CardTime\");\n$RefreshReg$(_c8, \"CardCollect\");\n$RefreshReg$(_c9, \"CardStarting\");\n$RefreshReg$(_c10, \"CardEnding\");\n$RefreshReg$(_c11, \"Image\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"RideSelect\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint4Alex/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","CallsBorder","div","RideName","PauseButton","button","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","CardH","h1","Image","img","Button","RideSelect","select","AttractionIntervals","Component","render","showModal","setShowModal","openModal","prev","startingTime","setStartingTime","endingTime","setEndingTime","timeValue","setTime","typeState","setTypeState","unitState","setUnitState","intervalList","setIntervalList","rideSelect","setRideSelect","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","GetIntervals","window","addEventListener","e","target","value","map","val","key","ride_name","props","location","ride","checkWait","checkedWaitTime","checkThroughput","checkedThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 16%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 16%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\n\nconst CardStarting = styled.div`\nposition: absolute;\ntop: 44%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 72%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardH = styled.h1`\nposition: absolute;\nleft: 0%;\ntop: 0%;\nmargin-top: 3px;\nmargin-left: 3px;\n`\n\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\n    align: right;\n`\nclass AttractionIntervals extends Component{\n\n    render () {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n        //states\n        const [startingTime, setStartingTime] = useState('');\n        const [endingTime, setEndingTime] = useState('');\n        const [timeValue, setTime] = useState('');\n        const [typeState, setTypeState] = useState([]);\n        const [unitState, setUnitState] = useState(\"\");\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n\n          //state to get all attractions\n    const [attractionList, setAttractionList] = useState([]);\n         //recieve data from backend to display\n         const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n\n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <button onClick={() => {\n            GetIntervals()\n        }}>Submit</button>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride_name={props.location.ride_name.ride}/>\n                    <GlobalStyle /> \n            \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    const checkWait = () => {\n\n                        if (val.checkedWaitTime == true){\n                            return <li>Wait Time</li>;\n                        }\n                    }\n\n                    const checkThroughput = () => {\n                        if (val.checkedThroughput == true){\n                            return <li>Throughtput</li>\n                        }\n                    }\n\n                    const checkAvailable = () => {\n                        if (val.checkedAvailableSeats == true){\n                            return <li>Available Seats</li>\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n                            return <li>Available Down</li>\n                        }\n                    }\n                        return (\n                            <>\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes</CardTime>\n                            <CardCollect>Collect\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n                                </CardCollect>\n                            <CardStarting>Starting<ul>At Park Opening</ul> <ul>{val.startingTime}</ul></CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul><ul>{val.endingTime}</ul></CardEnding>\n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n\n        </>\n    )\n    }\n}\n\nexport default AttractionIntervals\n"]},"metadata":{},"sourceType":"module"}