{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartLine() {\n  _s();\n\n  var [rideList, setRideList] = useState([]);\n  var [statList, setStatList] = useState([]);\n  var [dataList, setDataList] = useState([]);\n\n  const CheckedRideName = () => {\n    Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n      //console.log(res.data)\n      setRideList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedStat = () => {\n    Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n      //console.log(res.data)\n      setStatList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const CheckedData = () => {\n    Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n      //console.log(res.data)\n      setDataList(res.data);\n    }).catch(err => console.log(err));\n  }; // const getGraphInfo = () => {\n  //     Axios.post(`http://localhost:3001/getGraphInfo`).then(res => {\n  //         rideList: CheckedRideName()\n  //     }).catch(err => console.log(err));\n  // }\n  // window.addEventListener('load', () => {\n  //     CheckedRideName();\n  //     CheckedStat();\n  // })\n\n\n  const data = [{\n    color: \"steelblue\",\n    points: [{\n      x: 1,\n      y: 64\n    }, {\n      x: 2,\n      y: 61\n    }, {\n      x: 3,\n      y: 64\n    }, {\n      x: 4,\n      y: 62\n    }]\n  }];\n  var index = -1;\n  var value;\n  {\n    dataList.map((val, key) => {\n      if (val.ride_name) {\n        index++;\n        console.log(\"Ride name = \", val.ride_name);\n\n        if (val.WaitTime >= 0) {\n          console.log(\"Wait Time = \", val.WaitTime);\n        }\n\n        if (val.Throughput >= 0) {\n          console.log(\"Throughput = \", val.Throughput);\n        }\n\n        if (val.AvailableSeats >= 0) {\n          console.log(\"Available Seats = \", val.AvailableSeats);\n        }\n\n        if (val.AvailableDown >= 0) {\n          console.log(\"Available Down = \", val.AvailableDown);\n        }\n\n        value = index;\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      {\n        window.addEventListener('load', CheckedData());\n      }\n      {\n        window.addEventListener('load', CheckedRideName());\n      }\n      {\n        console.log(\"Amount of rides \", index);\n      }\n    }, []), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 850,\n        height: 630,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartLine, \"vGbCVrqDan+5cQVEl78sxmhvyCo=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js"],"names":["React","Component","useState","useEffect","LineChart","Axios","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","color","points","x","y","index","value","map","val","key","ride_name","WaitTime","Throughput","AvailableSeats","AvailableDown","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\nimport LineChart from 'react-linechart';\nimport Axios from 'axios';\n\n//\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n        \n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    // const getGraphInfo = () => {\n\n    //     Axios.post(`http://localhost:3001/getGraphInfo`).then(res => {\n    //         rideList: CheckedRideName()\n    //     }).catch(err => console.log(err));\n    // }\n\n    \n    // window.addEventListener('load', () => {\n    //     CheckedRideName();\n    //     CheckedStat();\n    // })\n\n    const data = [\n        {\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: [\n                { x: 1, y: 64 },\n                { x: 2, y: 61 },\n                { x: 3, y: 64 },\n                { x: 4, y: 62 },\n            ]\n        }\n    ];\n    var index = -1;\n    var value;\n    {dataList.map((val, key) => {\t\n        if (val.ride_name){\n            index++;\n            console.log(\"Ride name = \", val.ride_name);\n        if(val.WaitTime >= 0){\n        console.log(\"Wait Time = \", val.WaitTime)\n        }\n        if(val.Throughput >= 0) {\n            console.log(\"Throughput = \", val.Throughput)\n        }\n        if(val.AvailableSeats >= 0){\n            console.log(\"Available Seats = \", val.AvailableSeats)\n        }\n        if(val.AvailableDown >= 0) {\n                console.log(\"Available Down = \", val.AvailableDown)\n        }\n        value = index;\n    }\n    })}\n\n    return (\n\n        <div>\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {console.log(\"Amount of rides \", index)}\n\n        }, [])}\n            <div className=\"App\">\n                <LineChart \n                    width={850}\n                    height={630}\n                    data={data}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}