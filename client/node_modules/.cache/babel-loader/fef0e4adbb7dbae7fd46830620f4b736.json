{"ast":null,"code":"import _slicedToArray from\"/Users/batuhankir/ProjectTitan/ProjectTitan/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{Component,useState,useEffect}from'react';import'../../../node_modules/react-vis/dist/style.css';import Plot from'react-plotly.js';import Axios from'axios';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChartLine(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rideList=_useState2[0],setRideList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),statList=_useState4[0],setStatList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),dataList=_useState6[0],setDataList=_useState6[1];var CheckedRideName=function CheckedRideName(){Axios.get(\"http://localhost:3001/sendRideNameGraph\").then(function(res){//console.log(res.data)\nsetRideList(res.data);}).catch(function(err){return console.log(err);});};var CheckedStat=function CheckedStat(){Axios.get(\"http://localhost:3001/sendStatsGraph\").then(function(res){//console.log(res.data)\nsetStatList(res.data);}).catch(function(err){return console.log(err);});};var CheckedData=function CheckedData(){Axios.get(\"http://localhost:3001/getCollectedData\").then(function(res){//console.log(res.data)\nsetDataList(res.data);}).catch(function(err){return console.log(err);});};var intervalCard=[];{dataList.map(function(val,key){var i=0;var time=new Date(val.ts);var date=new Date(val.ts).getMonth()+\"/\"+new Date(val.ts).getDate()+\"/\"+new Date(val.ts).getFullYear();intervalCard.push({rideName:val.ride_name,WaitTime:val.WaitTime,Throughput:val.Throughput,AvailableSeats:val.AvailableSeats,AvailableDown:val.AvailableDown,Time:time,Date:date});});}var data=[];var selected='';var organized=[];//prints intervalCard in order\nvar printOrdered=function printOrdered(){var temp=[];var name='';intervalCard.forEach(function(i){name=i.rideName;if(!temp.includes(name)){temp.push(name);}});{intervalCard.map(function(val,key){var j=0;if(temp[j]==val.rideName){j++;organized.push(val);}else{organized.unshift(val);}});}//console.log(organized)\n//console.log(temp)\n};var time=[];var select=[];var name=[];var graphStat=function graphStat(ride){for(var i=0;i<organized.length;i++){if(statList==\"Throughput\"){selected=organized[i].Throughput;}if(statList==\"Wait Time\"){selected=organized[i].WaitTime;}if(statList==\"Available Seats\"){selected=organized[i].AvailableSeats;}if(statList==\"Available Down\"){selected=organized[i].AvailableDown;}if(selected!=-1){var x=organized[i].Time;var y=selected;var z=organized[i].rideName;time.push(x);select.push(y);name.push(z);}var result={x:time,y:select,z:name};//console.log(select)\n}for(var i=0;i<ride.length;i++){data.push(result);}//data.sort((a, b) => (a.x > b.x) ? 1 : (a.x === b.x) ? 1 : -1)\n};return/*#__PURE__*/_jsxs(\"div\",{children:[useEffect(function(){{window.addEventListener('load',CheckedData());}{window.addEventListener('load',CheckedRideName());}{window.addEventListener('load',CheckedStat());}},[]),printOrdered(),graphStat(rideList),/*#__PURE__*/_jsx(\"div\",{id:\"myDiv\",children:/*#__PURE__*/_jsx(Plot,{data:data,layout:{width:1000,height:620,xaxis:{type:'time'}}})})]});}export default ChartLine;","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Graph/ChartLine.js"],"names":["React","Component","useState","useEffect","Plot","Axios","styled","ChartLine","rideList","setRideList","statList","setStatList","dataList","setDataList","CheckedRideName","get","then","res","data","catch","err","console","log","CheckedStat","CheckedData","intervalCard","map","val","key","i","time","Date","ts","date","getMonth","getDate","getFullYear","push","rideName","ride_name","WaitTime","Throughput","AvailableSeats","AvailableDown","Time","selected","organized","printOrdered","temp","name","forEach","includes","j","unshift","select","graphStat","ride","length","x","y","z","result","window","addEventListener","width","height","xaxis","type"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component, useState, useEffect} from 'react';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport Plot from 'react-plotly.js';\nimport Axios from 'axios';\nimport styled from 'styled-components';\n\nfunction ChartLine() {\n\n\n    var [rideList, setRideList] = useState([]);\n    var [statList, setStatList] = useState([]);\n    var [dataList, setDataList] = useState([]);\n\n\n    const CheckedRideName = () => {\n\n            Axios.get(`http://localhost:3001/sendRideNameGraph`).then(res => {\n                //console.log(res.data)\n                setRideList(res.data)\n            }).catch(err => console.log(err));\n    }\n\n\n    const CheckedStat = () => {\n\n        Axios.get(`http://localhost:3001/sendStatsGraph`).then(res => {\n            //console.log(res.data)\n            setStatList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n    const CheckedData = () => {\n\n        Axios.get(`http://localhost:3001/getCollectedData`).then(res => {\n            //console.log(res.data)\n            setDataList(res.data)\n        }).catch(err => console.log(err));\n    }\n\n\n\n    var intervalCard = [];\n    {dataList.map((val, key) => {\t\n        var i = 0;\n            var time = new Date(val.ts)\n            var date = new Date(val.ts).getMonth() + \"/\" + new Date(val.ts).getDate() + \"/\" + new Date(val.ts).getFullYear();\n            intervalCard.push({rideName: val.ride_name, WaitTime: val.WaitTime,\n            Throughput: val.Throughput, AvailableSeats: val.AvailableSeats, \n            AvailableDown: val.AvailableDown, Time: time, Date: date})\n        \n     })}\n  \n    var data = []\n    var selected = '';\n    var organized = []\n    //prints intervalCard in order\n    const printOrdered = () => {\n        var temp = [];\n        var name = ''\n        intervalCard.forEach(i => {\n            name = i.rideName;\n            if(!temp.includes(name)){\n                temp.push(name)\n            }\n        });\n            {intervalCard.map((val, key) => {\t\n            var j = 0\n            if(temp[j] == val.rideName){\n                j++;\n                organized.push(val)\n            }\n            else{\n                organized.unshift(val)\n            }\n        })}\n        //console.log(organized)\n        //console.log(temp)\n    }\n\n    var time = []\n    var select = []\n    var name = []\n    const graphStat = (ride) => {\n        for ( var i = 0 ; i < organized.length ; i++ ) {\n            if(statList == \"Throughput\") {\n                selected = organized[i].Throughput\n            }\n            if(statList == \"Wait Time\") {\n                selected = organized[i].WaitTime\n            }\n            if(statList == \"Available Seats\"){\n                selected = organized[i].AvailableSeats\n            }\n            if(statList == \"Available Down\") {\n                selected = organized[i].AvailableDown\n            }\n            if(selected != -1){\n                    var x = organized[i].Time\n                    var y = selected\n                    var z = organized[i].rideName\n                    time.push(x)\n                    select.push(y)\n                    name.push(z)\n            }\n            var result = {\n                x: time,\n                y: select,\n                z: name\n            };\n            //console.log(select)\n        }\n        for (var i = 0 ; i < ride.length ; i++ ) {\n            data.push(result)\n        }\n\n        \n        //data.sort((a, b) => (a.x > b.x) ? 1 : (a.x === b.x) ? 1 : -1)\n    \n    }\n    return (\n\n        <div>\n            {useEffect(() => {\n            {window.addEventListener('load', CheckedData())}\n            {window.addEventListener('load', CheckedRideName())}\n            {window.addEventListener('load', CheckedStat())}\n        }, [])}\n            {printOrdered()}\n            {graphStat(rideList)}\n            <div id='myDiv'>\n            <Plot \n            data={data}\n            layout={{\n                width: 1000, height: 620,\n                xaxis: {\n                type: 'time'\n                }, \n            }}\n            />\n            </div>\t\t\t\t\n        </div>\n    );\n    \n}\n\nexport default ChartLine"]},"metadata":{},"sourceType":"module"}