{"ast":null,"code":"var _jsxFileName = \"/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js\",\n    _s2 = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\noverflow: hidden;\n`;\n_c2 = RideName;\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`;\n_c3 = PauseButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`;\n_c4 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n\n`;\n_c5 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`;\n_c6 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\noverflow: hidden;\n`;\n_c7 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardCollect;\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`;\n_c9 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`;\n_c10 = CardEnding;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`;\n_c11 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n\n`;\n_c12 = Button;\nconst RideSelect = styled.select`\nalign-content: right;\n`;\n_c13 = RideSelect;\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\noverflow: auto;\n`;\n_c14 = RideButton;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  overflow: hidden;\n`;\n_c15 = DeleteButton;\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 15px;\noverflow: hidden;\n`;\n_c16 = Variables;\nconst InputVariables = styled.input`\nwidth: 70px;\n`;\n_c17 = InputVariables;\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n\n`;\n_c18 = SubmitButton;\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`;\n_c19 = Border;\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\n\n`;\n_c20 = InfoContainer;\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`;\n_c21 = Label1;\n\nconst AttractionIntervals = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [showModal, setShowModal] = useState(false);\n  const styleGray = {\n    backgroundColor: '#AFAFAF'\n  };\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [intervalList, setIntervalList] = useState([]);\n  const [rideSelect, setRideSelect] = useState('');\n  var cardCount = 0;\n  var currentRide = ''; //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const GetIntervals = () => {\n    Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n      console.log(rideSelect);\n      setIntervalList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteInterval = ride_name => {\n    Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n  }; //edit info\n\n\n  const [WaitTime, setWaitTime] = useState('');\n  const [Throughput, setThroughput] = useState('');\n  const [AvailableSeats, setAvailableSeats] = useState('');\n  const [AvailableDown, setAvailableDown] = useState('');\n\n  const editInterval = (id, rideName) => {\n    Axios.put('http://localhost:3001/editInterval', {\n      id: id,\n      ride_name: rideName,\n      WaitTime: WaitTime,\n      Throughput: Throughput,\n      AvailableSeats: AvailableSeats,\n      AvailableDown: AvailableDown\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  var emptyBoxArray = [];\n\n  const changeInputColor = emptyBoxArray => {\n    for (let index = 0; index < emptyBoxArray.length; index++) {\n      var element = emptyBoxArray[index];\n      console.log(element);\n      document.getElementById(element).style.backgroundColor = \"pink\";\n    }\n  };\n\n  const checkEmpty = () => {\n    var empty = false;\n\n    if (WaitTime == '') {\n      alert(\"Wait time is empty\");\n      emptyBoxArray.push('waitTimeID');\n      empty = true;\n    }\n\n    if (Throughput == '') {\n      alert(\"Throughput is empty\");\n      emptyBoxArray.push('throughputID');\n      empty = true;\n    }\n\n    if (AvailableSeats == '') {\n      alert(\"Available Seats is empty\");\n      emptyBoxArray.push('seatsID');\n      empty = true;\n    }\n\n    if (AvailableDown == '') {\n      alert(\"Available Down is empty\");\n      emptyBoxArray.push('downID');\n      empty = true;\n    }\n\n    return empty;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(RideName, {\n        children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(RideSelect, {\n          onChange: e => {\n            setRideSelect(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Attraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), attractionList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 27\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RideButton, {\n          onClick: () => {\n            GetIntervals();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n        children: \" Pause Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n        children: \" End Todays Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n          showModal: showModal,\n          setShowModal: setShowModal,\n          ride: rideSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this), intervalList.map((val, key) => {\n        var id = val.id;\n\n        const checkWait = name => {\n          if (name == id) {\n            if (val.checkedWaitTime == true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Variables, {\n                  children: [\"Wait Time \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', /*#__PURE__*/_jsxDEV(InputVariables, {\n                    id: \"waitTimeID\",\n                    type: \"text\",\n                    onChange: e => {\n                      setWaitTime(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 112\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 33\n              }, this);\n            }\n          }\n        };\n\n        const checkThroughput = name => {\n          if (name == id) {\n            if (val.checkedThroughput == true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Variables, {\n                  children: [\"Throughput \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                    id: \"throughputID\",\n                    type: \"text\",\n                    onChange: e => {\n                      setThroughput(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 88\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 29\n              }, this);\n            }\n          }\n        };\n\n        const checkAvailable = name => {\n          if (name == id) {\n            if (val.checkedAvailableSeats == true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Variables, {\n                  children: [\"Available Seats \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                    id: \"seatsID\",\n                    type: \"text\",\n                    onChange: e => {\n                      setAvailableSeats(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 64\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 33\n              }, this);\n            }\n          }\n        };\n\n        const checkDown = name => {\n          if (name == id) {\n            if (val.checkedAvailableDown == true) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Variables, {\n                  children: [\"Available Down \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                    id: \"downID\",\n                    type: \"text\",\n                    onChange: e => {\n                      setAvailableDown(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 63\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this);\n            }\n          }\n        };\n\n        {\n          currentRide = val.ride_name;\n        }\n        {\n          cardCount = cardCount + 1;\n        }\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n                onClick: () => {\n                  console.log(id);\n                  deleteInterval(id);\n                  setTimeout(function () {\n                    window.location.reload();\n                  }, 2);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [checkWait(id), checkThroughput(id), checkAvailable(id), checkDown(), /*#__PURE__*/_jsxDEV(SubmitButton, {\n                onClick: () => {\n                  console.log(id);\n\n                  if (checkEmpty() == true) {\n                    changeInputColor(emptyBoxArray);\n                    alert(\"error\");\n                  } else {\n                    editInterval(id, val.ride_name);\n                    window.location.reload();\n                  }\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 51\n              }, this), \" \", val.startingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 47\n              }, this), val.endingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Border, {\n      children: [/*#__PURE__*/_jsxDEV(Label1, {\n        children: \" Attraction Intervals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: styleGray,\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"# of Specific Intervals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentRide\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cardCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AttractionIntervals, \"Dg+ZdSFuTTf3QjXMLnx0/sCVh6M=\");\n\n_c22 = AttractionIntervals;\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"RideName\");\n$RefreshReg$(_c3, \"PauseButton\");\n$RefreshReg$(_c4, \"EndButton\");\n$RefreshReg$(_c5, \"AddIntervalsBorder\");\n$RefreshReg$(_c6, \"IntervalCard\");\n$RefreshReg$(_c7, \"CardTime\");\n$RefreshReg$(_c8, \"CardCollect\");\n$RefreshReg$(_c9, \"CardStarting\");\n$RefreshReg$(_c10, \"CardEnding\");\n$RefreshReg$(_c11, \"Image\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"RideSelect\");\n$RefreshReg$(_c14, \"RideButton\");\n$RefreshReg$(_c15, \"DeleteButton\");\n$RefreshReg$(_c16, \"Variables\");\n$RefreshReg$(_c17, \"InputVariables\");\n$RefreshReg$(_c18, \"SubmitButton\");\n$RefreshReg$(_c19, \"Border\");\n$RefreshReg$(_c20, \"InfoContainer\");\n$RefreshReg$(_c21, \"Label1\");\n$RefreshReg$(_c22, \"AttractionIntervals\");","map":{"version":3,"sources":["/Users/batuhankir/ProjectTitan/ProjectTitan/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","MdClose","CallsBorder","div","RideName","PauseButton","button","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","Image","img","Button","RideSelect","select","RideButton","DeleteButton","Variables","li","InputVariables","input","SubmitButton","Border","InfoContainer","Label1","h1","AttractionIntervals","props","showModal","setShowModal","styleGray","backgroundColor","openModal","prev","intervalList","setIntervalList","rideSelect","setRideSelect","cardCount","currentRide","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","GetIntervals","deleteInterval","ride_name","delete","WaitTime","setWaitTime","Throughput","setThroughput","AvailableSeats","setAvailableSeats","AvailableDown","setAvailableDown","editInterval","id","rideName","put","alert","emptyBoxArray","changeInputColor","index","length","element","document","getElementById","style","checkEmpty","empty","push","window","addEventListener","e","target","value","map","val","key","checkWait","name","checkedWaitTime","checkThroughput","checkedThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown","timeValue","setTimeout","location","reload","startingTime","endingTime"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\noverflow: hidden;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\noverflow: hidden;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\noverflow: hidden;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\noverflow: hidden;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\noverflow: auto;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n  overflow: hidden;\n`\n\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 15px;\noverflow: hidden;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n\n`\n\nconst Border = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 0px;\nwidth: 25%;\nheight: 240px;\nborder-right: 2px solid black;\n`\n\nconst InfoContainer = styled.div`\noverflow: hidden;\noverflow-y: scroll;\nbackground: transparent;\nposition: absolute;\nleft: 0px;\nwidth: 100%;\n\n`;\n\nconst Label1 = styled.h1`\nmargin-top: 2%;\nmargin-left: 0%;\nfont-size: 175%;\ntext-align: center;\nfont-weight: normal;\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const styleGray = {backgroundColor : '#AFAFAF'};\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n\n        //states\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n        var cardCount = 0;\n        var currentRide = '';\n\n\n        //state to get all attractions\n        const [attractionList, setAttractionList] = useState([]);\n        //recieve data from backend to display\n        const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n          //edit info\n          const [WaitTime, setWaitTime] = useState('');\n          const [Throughput, setThroughput] = useState('');\n          const [AvailableSeats, setAvailableSeats] = useState('');\n          const [AvailableDown, setAvailableDown] = useState('');\n\n          const editInterval = (id, rideName) =>{\n            Axios.put('http://localhost:3001/editInterval', {\n\n                id: id,\n                ride_name: rideName,\n                WaitTime: WaitTime,\n                Throughput: Throughput,\n                AvailableSeats: AvailableSeats,\n                AvailableDown: AvailableDown\n                          \n                }).then(() =>{\n                alert('successful insert');\n\n            }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n            });\n          };\n          var emptyBoxArray = [];\n          const changeInputColor = (emptyBoxArray) => {\n            for (let index = 0; index < emptyBoxArray.length; index++) {\n              var element = emptyBoxArray[index];\n              console.log(element);\n              document.getElementById(element).style.backgroundColor = \"pink\";\n            }\n          }\n          const checkEmpty = () => {\n            var empty = false;\n\n            if(WaitTime == '') {\n              alert(\"Wait time is empty\");\n              emptyBoxArray.push('waitTimeID');\n              empty = true;\n            }\n            if(Throughput == '') {\n            alert(\"Throughput is empty\");\n            emptyBoxArray.push('throughputID');\n            empty = true;\n            }\n            if(AvailableSeats == '') {\n                alert(\"Available Seats is empty\");\n                emptyBoxArray.push('seatsID');\n                empty = true;\n            }\n            if(AvailableDown == '') {\n                alert(\"Available Down is empty\");\n                emptyBoxArray.push('downID');\n                empty = true;\n            }\n\n            return empty;\n        }\n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n                    const checkWait = (name) => {\n                        if(name == id) {\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id=\"waitTimeID\" type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                            \n                                </div>\n                            );\n                        }\n                    }\n                    }\n\n                    const checkThroughput = (name) => {\n                        if(name == id) {\n                        if (val.checkedThroughput == true){\n                        return (\n                            <div>\n                                \n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id=\"throughputID\" type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n                        }\n                    }\n                    }\n\n                    const checkAvailable = (name) => {\n                        if(name == id) {\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id=\"seatsID\" type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n                    }\n\n                    const checkDown = (name) => {\n                        if(name == id) {\n                        if (val.checkedAvailableDown == true){\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables  id=\"downID\" type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n                    }\n                    {currentRide = val.ride_name}\n                    {cardCount = cardCount + 1}\n\n\n                        return (\n                            <>\n\n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait(id)}\n                                {checkThroughput(id)}\n                                {checkAvailable(id)}\n                                {checkDown()}\n                                <SubmitButton  onClick={() =>{\n                                console.log(id)\n                                if(checkEmpty() == true){\n                                changeInputColor(emptyBoxArray);\n                                alert(\"error\")\n                                }\n                                else {\n                                editInterval(id, val.ride_name);\n                                window.location.reload(); \n                                }\n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            \n                            </>\n                        );\n                        })}\n            </AddIntervalsBorder>\n            <Border>\n            <Label1> Attraction Intervals </Label1>\n                <InfoContainer>\n                {window.addEventListener('load', GetAttractions())}\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr style = {styleGray}>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\"># of Specific Intervals</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr><td>{currentRide}</td><td>{cardCount}</td></tr>\n                    </tbody>\n\n                    {/* {attractionList.map((val, key) => {\n                        var ride = val.ride_name;\n                 \n                        return(\n                    <tbody>\n                        <tr><td>{ride}</td><td>{cardCount}</td></tr>\n                    </tbody>\n                        );\n                    })} */}\n\n             \n                </table>\n                </InfoContainer>    \n\n            </Border>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals"]},"metadata":{},"sourceType":"module"}