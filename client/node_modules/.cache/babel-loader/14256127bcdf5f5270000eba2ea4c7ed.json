{"ast":null,"code":"var _jsxFileName = \"/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionIntervals.js\",\n    _s2 = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport plus from './plusSign.png';\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`;\n_c = CallsBorder;\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`;\n_c2 = RideName;\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c3 = PauseButton;\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`;\n_c4 = EndButton;\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n_c5 = AddIntervalsBorder;\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`;\n_c6 = IntervalCard;\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c7 = CardTime;\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c8 = CardCollect;\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c9 = CardStarting;\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`;\n_c10 = CardEnding;\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`;\n_c11 = Image;\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`;\n_c12 = Button;\nconst RideSelect = styled.select`\nalign-content: right;\n`;\n_c13 = RideSelect;\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\n`;\n_c14 = RideButton;\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n`;\n_c15 = DeleteButton;\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 10%;\n`;\n_c16 = Variables;\nconst InputVariables = styled.input`\nwidth: 70px;\n`;\n_c17 = InputVariables;\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n`;\n_c18 = SubmitButton;\n\nconst AttractionIntervals = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  }; //states\n\n\n  const [intervalList, setIntervalList] = useState([]);\n  const [rideSelect, setRideSelect] = useState('');\n  var cardCount = 0; //state to get all attractions\n\n  const [attractionList, setAttractionList] = useState([]); //recieve data from backend to display\n\n  const GetAttractions = () => {\n    _s();\n\n    //console.log(res.data)\n    useEffect(() => {\n      Axios.get('http://localhost:3001/getAttraction').then(res => {\n        setAttractionList(res.data);\n      }).catch(err => console.log(err));\n    }, []);\n  };\n\n  _s(GetAttractions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const GetIntervals = () => {\n    Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n      console.log(rideSelect);\n      setIntervalList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteInterval = ride_name => {\n    Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n  }; //edit info\n\n\n  const [WaitTime, setWaitTime] = useState('');\n  const [Throughput, setThroughput] = useState('');\n  const [AvailableSeats, setAvailableSeats] = useState('');\n  const [AvailableDown, setAvailableDown] = useState('');\n  var emptyCollectData = [];\n\n  const editInterval = (id, rideName) => {\n    Axios.put('http://localhost:3001/editInterval', {\n      id: id,\n      ride_name: rideName,\n      WaitTime: WaitTime,\n      Throughput: Throughput,\n      AvailableSeats: AvailableSeats,\n      AvailableDown: AvailableDown\n    }).then(() => {\n      alert('successful insert');\n    }).then(() => {\n      console.log(\"Successfully sent to port 3001\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(RideName, {\n        children: [window.addEventListener('load', GetAttractions()), /*#__PURE__*/_jsxDEV(RideSelect, {\n          onChange: e => {\n            setRideSelect(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Attraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), attractionList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                children: val.ride_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 27\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RideButton, {\n          onClick: () => {\n            GetIntervals();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {\n        children: \" Pause Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EndButton, {\n        children: \" End Todays Calls \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIntervalsBorder, {\n      children: [/*#__PURE__*/_jsxDEV(IntervalCard, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: openModal,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n            src: plus,\n            Image: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AttractionModal, {\n          showModal: showModal,\n          setShowModal: setShowModal,\n          ride: rideSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), intervalList.map((val, key) => {\n        var id = val.id;\n        var emptyArrayTest = `emptyArray${id}`;\n        emptyArrayTest = [];\n\n        const checkWait = () => {\n          if (WaitTime == \"\") {\n            emptyArrayTest.push(`waitTime${id}`);\n          }\n\n          if (val.checkedWaitTime == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Wait Time \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', /*#__PURE__*/_jsxDEV(InputVariables, {\n                  id: `waitTime${id}`,\n                  type: \"text\",\n                  onChange: e => {\n                    setWaitTime(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 112\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkThroughput = () => {\n          if (Throughput == \"\") {\n            emptyArrayTest.push(`throughput${id}`);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Variables, {\n              children: [\"Throughput \", '\\u00A0', \" \", '\\u00A0', \" \", '\\u00A0', \" \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                id: `throughput${id}`,\n                type: \"text\",\n                onChange: e => {\n                  setThroughput(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 88\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this);\n        };\n\n        const checkAvailable = () => {\n          if (AvailableSeats == \"\") {\n            emptyArrayTest.push(`available${id}`);\n          }\n\n          if (val.checkedAvailableSeats == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Seats \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  id: `available${id}`,\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableSeats(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        const checkDown = () => {\n          if (val.checkedAvailableDown == true) {\n            if (AvailableDown == \"\") {\n              emptyArrayTest.push(`down${id}`);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Variables, {\n                children: [\"Available Down \", /*#__PURE__*/_jsxDEV(InputVariables, {\n                  id: `down${id}`,\n                  type: \"text\",\n                  onChange: e => {\n                    setAvailableDown(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [cardCount = cardCount + 1, console.log(cardCount), /*#__PURE__*/_jsxDEV(IntervalCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardTime, {\n              children: [\"Every \", val.timeValue, \" Minutes\", /*#__PURE__*/_jsxDEV(DeleteButton, {\n                onClick: () => {\n                  console.log(id);\n                  deleteInterval(id);\n                  setTimeout(function () {\n                    window.location.reload();\n                  }, 2);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardCollect, {\n              children: [checkWait(), checkThroughput(), checkAvailable(), checkDown(), /*#__PURE__*/_jsxDEV(SubmitButton, {\n                onClick: () => {\n                  console.log(id);\n                  var wait = `waitTime${id}`;\n                  var throughput = `throughput${id}`;\n                  var available = `available${id}`;\n                  var down = `down${id}`;\n                  var refresh = 0;\n\n                  if (emptyArrayTest.includes(wait)) {\n                    document.getElementById(wait).style.background = 'pink';\n                    refresh = 1;\n                  }\n\n                  if (emptyArrayTest.includes(throughput)) {\n                    document.getElementById(throughput).style.background = 'pink';\n                    refresh = 1;\n                  }\n\n                  if (emptyArrayTest.includes(available)) {\n                    document.getElementById(available).style.background = 'pink';\n                    refresh = 1;\n                  }\n\n                  if (emptyArrayTest.includes(down)) {\n                    document.getElementById(down).style.background = 'pink';\n                    refresh = 1;\n                  }\n\n                  if (refresh == 0) {\n                    setTimeout(function () {\n                      window.location.reload();\n                    }, 2);\n                  } else {\n                    window.load.refresh();\n                  } // document.getElementById(throughput).style.background = 'pink';\n                  // document.getElementById(available).style.background = 'pink';\n                  // document.getElementById(down).style.background = 'pink';\n                  // document.getElementById('3').style.background = \"pink\";\n\n\n                  editInterval(id, val.ride_name); // window.location.reload();\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardStarting, {\n              children: [\"Starting\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Opening \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 51\n              }, this), \" \", val.startingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardEnding, {\n              children: [\"Ending\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: \"At Park Closing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 47\n              }, this), val.endingTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AttractionIntervals, \"Dg+ZdSFuTTf3QjXMLnx0/sCVh6M=\");\n\n_c19 = AttractionIntervals;\nexport default AttractionIntervals;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n\n$RefreshReg$(_c, \"CallsBorder\");\n$RefreshReg$(_c2, \"RideName\");\n$RefreshReg$(_c3, \"PauseButton\");\n$RefreshReg$(_c4, \"EndButton\");\n$RefreshReg$(_c5, \"AddIntervalsBorder\");\n$RefreshReg$(_c6, \"IntervalCard\");\n$RefreshReg$(_c7, \"CardTime\");\n$RefreshReg$(_c8, \"CardCollect\");\n$RefreshReg$(_c9, \"CardStarting\");\n$RefreshReg$(_c10, \"CardEnding\");\n$RefreshReg$(_c11, \"Image\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"RideSelect\");\n$RefreshReg$(_c14, \"RideButton\");\n$RefreshReg$(_c15, \"DeleteButton\");\n$RefreshReg$(_c16, \"Variables\");\n$RefreshReg$(_c17, \"InputVariables\");\n$RefreshReg$(_c18, \"SubmitButton\");\n$RefreshReg$(_c19, \"AttractionIntervals\");","map":{"version":3,"sources":["/Users/jonathaningram/Desktop/testing1/Sprint6/ProjectTitan/client/src/components/Interval/AttractionIntervals.js"],"names":["styled","plus","AttractionModal","GlobalStyle","React","useState","useEffect","Axios","MdClose","CallsBorder","div","RideName","PauseButton","button","EndButton","AddIntervalsBorder","tr","IntervalCard","CardTime","CardCollect","CardStarting","CardEnding","Image","img","Button","RideSelect","select","RideButton","DeleteButton","Variables","li","InputVariables","input","SubmitButton","AttractionIntervals","props","showModal","setShowModal","openModal","prev","intervalList","setIntervalList","rideSelect","setRideSelect","cardCount","attractionList","setAttractionList","GetAttractions","get","then","res","data","catch","err","console","log","GetIntervals","deleteInterval","ride_name","delete","WaitTime","setWaitTime","Throughput","setThroughput","AvailableSeats","setAvailableSeats","AvailableDown","setAvailableDown","emptyCollectData","editInterval","id","rideName","put","alert","window","addEventListener","e","target","value","map","val","key","emptyArrayTest","checkWait","push","checkedWaitTime","checkThroughput","checkAvailable","checkedAvailableSeats","checkDown","checkedAvailableDown","timeValue","setTimeout","location","reload","wait","throughput","available","down","refresh","includes","document","getElementById","style","background","load","startingTime","endingTime"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport plus from './plusSign.png'\nimport { AttractionModal } from './AttractionModal';\nimport { GlobalStyle } from '../../globalStyles';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios'\nimport { MdClose } from 'react-icons/md';\n\n\nconst CallsBorder = styled.div`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 25%;\nwidth: 20%;\nheight: 240px;\nborder-right: 2px solid black;\nalign-content: center;\n`\nconst RideName = styled.div`\ntext-align: center;\nfont-size: 30px;\n`\n\nconst PauseButton = styled.button`\nmargin-top: 70px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst EndButton = styled.button`\nmargin-top: 2px;\nmargin-left: 20px;\njustify-content: center;\nheight: 17%;\nwidth: 85%;\nborder: 2px solid black;\nbackground: transparent;\n`\nconst AddIntervalsBorder = styled.tr`\noverflow: hidden;\nbackground: transparent;\nmargin: 15px 0px;\nposition: absolute;\nleft: 45%;\nwidth: 43.8%;\nheight: 240px;\noverflow: hidden;\noverflow-x: scroll;\nwhite-space: nowrap;\n`;\n\n\nconst IntervalCard = styled.div`\nwidth: 50%;\nheight: 100%;\nborder-right: 2px solid black;\ndisplay: inline-block;\n`\nconst CardTime = styled.div`\nposition: absolute;\ntop: 0%;\nheight: 12%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: center;\nborder-bottom: 2px solid black;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardCollect = styled.div`\nposition: absolute;\ntop: 12%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\n\n\nconst CardStarting = styled.div`\nborder-top: 2px solid black;\nposition: absolute;\ntop: 47%;\nheight: 28%;\nwidth: 50%;\nborder-bottom: 2px solid black;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst CardEnding = styled.div`\nposition: absolute;\ntop: 75%;\nheight: 28%;\nwidth: 20%;\ntext-align: left;\nfont-size: 90%;\nfont-weight: bold;\n`\nconst Image = styled.img`\ndisplay:flex;\nheight: 70px;\nborder: none;\n`\nconst Button = styled.button`\ndisplay: inline-block;\nbackground: transparent;\nposition: absolute;\nleft: 17.5%;\ntop: 35%;\nborder: none;\n`\nconst RideSelect = styled.select`\nalign-content: right;\n`\nconst RideButton = styled.button`\nbackground: lightgray;\nfont-size: 20px;\nwidth: 30%;\nborder-radius: 10px;\n`\n\nconst DeleteButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 0px;\n  right: 15px;\n  width: 20px;\n  height: 30px;\n  padding: 0;\n`\n\nconst Variables = styled.li`\nfont-size: 11.5px;\nmargin-left: 10%;\n`\nconst InputVariables = styled.input`\nwidth: 70px;\n`\nconst SubmitButton = styled.button`\n  position: absolute;\n  bottom: 0px;\n  left: 200px;\n  height: 20px;\n  font-size: 10px;\n`\nconst AttractionIntervals = (props) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n    setShowModal(prev => !prev);\n    };\n\n\n        //states\n        const [intervalList, setIntervalList] = useState([]);\n        const [rideSelect, setRideSelect] = useState('');\n\n\n        var cardCount = 0;\n\n        //state to get all attractions\n        const [attractionList, setAttractionList] = useState([]);\n        //recieve data from backend to display\n        const GetAttractions = () => {\n            //console.log(res.data)\n            useEffect(() => {\n                Axios.get('http://localhost:3001/getAttraction').then(res => {\n                setAttractionList(res.data);\n                }).catch(err => console.log(err));\n                }, [])\n        }\n\n        const GetIntervals = () => {\n\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n        }\n        \n        const deleteInterval = (ride_name) => {\n            Axios.delete(`http://localhost:3001/deleteInterval/${ride_name}`);\n          };\n\n          //edit info\n          const [WaitTime, setWaitTime] = useState('');\n          const [Throughput, setThroughput] = useState('');\n          const [AvailableSeats, setAvailableSeats] = useState('');\n          const [AvailableDown, setAvailableDown] = useState('');\n\n          var emptyCollectData = [];\n\n          const editInterval = (id, rideName) =>{\n            Axios.put('http://localhost:3001/editInterval', {\n\n                id: id,\n                ride_name: rideName,\n                WaitTime: WaitTime,\n                Throughput: Throughput,\n                AvailableSeats: AvailableSeats,\n                AvailableDown: AvailableDown\n                          \n                }).then(() =>{\n                alert('successful insert');\n\n            }).then( () => {\n                console.log(\"Successfully sent to port 3001\");\n            });\n          };\n          \n      \n    return (\n        <>\n\n            <CallsBorder>\n                <RideName>  \n                {window.addEventListener('load', GetAttractions())}\n                    <RideSelect onChange={(e) => {\n                        setRideSelect(e.target.value);\n                      }}\n                      >\n                        <option>Select Attraction</option>\n\n\n            {attractionList.map((val, key) => {\n\n              return (\n                  <>                                \n                          <option>{val.ride_name}</option>\n                  </>\n              );\n              })}\n        </RideSelect>\n        <RideButton onClick={() => {\n            GetIntervals()\n        }}>Submit</RideButton>\n\n                </RideName>\n                <PauseButton> Pause Calls </PauseButton>\n                <EndButton> End Todays Calls </EndButton>\n            </CallsBorder>\n\n            <AddIntervalsBorder>\n\n            <IntervalCard>\n             \n                <Button onClick={openModal}> <Image src={plus} Image/> </Button>\n                <AttractionModal showModal={showModal} setShowModal={setShowModal} ride={rideSelect} />\n                    <GlobalStyle /> \n            </IntervalCard> \n\n            {/* {useEffect(() => {\n            Axios.get(`http://localhost:3001/getInterval/:${rideSelect}`).then(res => {\n            console.log(rideSelect)\n            setIntervalList(res.data)\n            }).catch(err => console.log(err));\n            }, [])} */}\n                {intervalList.map((val, key) => {\n                    var id = val.id;\n\n                    var emptyArrayTest = `emptyArray${id}`;\n\n                    emptyArrayTest = [];\n\n\n                    const checkWait = () => {\n\n                        if (WaitTime == \"\"){\n                            emptyArrayTest.push(`waitTime${id}`)\n                        }\n                        if (val.checkedWaitTime == true){\n                            return (\n                                <div>\n                                    <Variables>Wait Time {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} {'\\u00A0'}<InputVariables id={`waitTime${id}`} type=\"text\" onChange={(e) => {\n                                setWaitTime(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n\n                    }\n\n                    const checkThroughput = () => {\n\n                        if (Throughput == \"\"){\n                            emptyArrayTest.push(`throughput${id}`)\n                        }\n\n                        return (\n                            <div>\n                                <Variables>Throughput {'\\u00A0'} {'\\u00A0'} {'\\u00A0'} <InputVariables id={`throughput${id}`} type=\"text\" onChange={(e) => {\n                                setThroughput(e.target.value)}}></InputVariables></Variables>\n                            </div>\n                        );\n\n                        \n                    }\n\n                    const checkAvailable = () => {\n\n                        if (AvailableSeats == \"\"){\n                            emptyArrayTest.push(`available${id}`)\n                        }\n\n                        if (val.checkedAvailableSeats == true){\n                            return (\n                                <div>\n                                    <Variables>Available Seats <InputVariables id={`available${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableSeats(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                    const checkDown = () => {\n                        if (val.checkedAvailableDown == true){\n\n                            if (AvailableDown == \"\"){\n                                emptyArrayTest.push(`down${id}`)\n                            }\n\n                            return (\n                                <div>\n                                    <Variables>Available Down <InputVariables id={`down${id}`} type=\"text\" onChange={(e) => {\n                                setAvailableDown(e.target.value)}}></InputVariables></Variables>\n                                </div>\n                            );\n                        }\n                    }\n\n                        return (\n                            <>\n\n                            {cardCount = cardCount + 1}\n                            {console.log(cardCount)}\n\n                            <IntervalCard>\n                            <CardTime>Every {val.timeValue} Minutes\n                            <DeleteButton\n                             onClick={() => {console.log(id); deleteInterval(id);\n                                  setTimeout(function(){\n                                    window.location.reload(); \n                                   }, 2);\n                               }}/>\n                             \n                             </CardTime>\n\n\n                            <CardCollect>\n                                {checkWait()}\n                                {checkThroughput()}\n                                {checkAvailable()}\n                                {checkDown()}\n\n\n                                <SubmitButton  onClick={() =>{\n\n                                    console.log(id)\n\n                                    var wait = `waitTime${id}`;\n                                    var throughput = `throughput${id}`;\n                                    var available = `available${id}`;\n                                    var down = `down${id}`;\n\n                                    var refresh = 0;\n\n\n                                    if(emptyArrayTest.includes(wait)){\n                                        document.getElementById(wait).style.background = 'pink';\n                                        refresh = 1;\n                                    }\n\n                                    if(emptyArrayTest.includes(throughput)){\n                                        document.getElementById(throughput).style.background = 'pink';\n                                        refresh = 1;\n                                    }\n\n                                    if(emptyArrayTest.includes(available)){\n                                        document.getElementById(available).style.background = 'pink';\n                                        refresh = 1;\n                                    }\n\n                                    if(emptyArrayTest.includes(down)){\n                                        document.getElementById(down).style.background = 'pink';\n                                        refresh = 1;\n                                    }\n\n                                    if (refresh == 0){\n                                        setTimeout(function(){\n                                            window.location.reload(); \n                                           }, 2);\n                                    }\n                                    else {\n                                        window.load.refresh();\n                                    }\n\n\n\n                                    \n                                    // document.getElementById(throughput).style.background = 'pink';\n                                    // document.getElementById(available).style.background = 'pink';\n                                    // document.getElementById(down).style.background = 'pink';\n\n\n                                    // document.getElementById('3').style.background = \"pink\";\n\n                                    editInterval(id, val.ride_name)\n                                    // window.location.reload();\n                                }}>Submit</SubmitButton>\n                                </CardCollect>\n                                \n                            <CardStarting>Starting<ul>At Park Opening </ul> {val.startingTime}</CardStarting>\n                            <CardEnding>Ending<ul>At Park Closing</ul>{val.endingTime}</CardEnding>\n                            \n                            </IntervalCard>\n                            </>\n                        );\n                        })}\n\n            </AddIntervalsBorder>\n\n        </>\n    )\n}\n\nexport default AttractionIntervals"]},"metadata":{},"sourceType":"module"}